{
  "bomFormat": "CycloneDX",
  "specVersion": "1.3",
  "version": 1,
  "serialNumber": "urn:uuid:2735f6b6-7b3d-445c-9b34-8d67318ffefa",
  "metadata": {
    "timestamp": "2025-09-16T08:22:13.299413000Z",
    "tools": [
      {
        "vendor": "CycloneDX",
        "name": "cargo-cyclonedx",
        "version": "0.5.7"
      }
    ],
    "authors": [
      {
        "name": "Glenn Gore",
        "email": "glenn@affinidi.com"
      }
    ],
    "component": {
      "type": "library",
      "bom-ref": "path+file:///Users/rolstan/Documents/Affinidi/Work/Projects/affinidi-tdk-rs/crates/affinidi-meeting-place#0.1.10",
      "author": "Glenn Gore <glenn@affinidi.com>",
      "name": "affinidi-meeting-place",
      "version": "0.1.10",
      "description": "Affinidi Meeting Place SDK. Discover and connect with others in a secure and private way.",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/affinidi-meeting-place@0.1.10?download_url=file://.",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://affinidi.com/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/affinidi/affinidi-tdk-rs"
        }
      ],
      "components": [
        {
          "type": "library",
          "bom-ref": "path+file:///Users/rolstan/Documents/Affinidi/Work/Projects/affinidi-tdk-rs/crates/affinidi-meeting-place#0.1.10 bin-target-0",
          "name": "affinidi_meeting_place",
          "version": "0.1.10",
          "purl": "pkg:cargo/affinidi-meeting-place@0.1.10?download_url=file://.#src/lib.rs"
        }
      ]
    },
    "properties": [
      {
        "name": "cdx:rustc:sbom:target:triple",
        "value": "aarch64-apple-darwin"
      }
    ]
  },
  "components": [
    {
      "type": "library",
      "bom-ref": "path+file:///Users/rolstan/Documents/Affinidi/Work/Projects/affinidi-tdk-rs/crates/affinidi-did-resolver/affinidi-did-resolver-cache-sdk#0.5.6",
      "author": "Glenn Gore <glenn@affinidi.com>",
      "name": "affinidi-did-resolver-cache-sdk",
      "version": "0.5.6",
      "description": "Affinidi DID Resolver SDK",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/affinidi-did-resolver-cache-sdk@0.5.6?download_url=file://../affinidi-did-resolver/affinidi-did-resolver-cache-sdk",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://affinidi.com/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/affinidi/affinidi-tdk-rs"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "path+file:///Users/rolstan/Documents/Affinidi/Work/Projects/affinidi-tdk-rs/crates/affinidi-did-resolver/affinidi-did-resolver-methods/did-example#0.5.4",
      "author": "Glenn Gore <glenn@affinidi.com>",
      "name": "did-example",
      "version": "0.5.4",
      "description": "Implementation of did:example in Rust",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/did-example@0.5.4?download_url=file://../affinidi-did-resolver/affinidi-did-resolver-methods/did-example",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://affinidi.com/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/affinidi/affinidi-tdk-rs"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "path+file:///Users/rolstan/Documents/Affinidi/Work/Projects/affinidi-tdk-rs/crates/affinidi-did-resolver/affinidi-did-resolver-methods/did-peer#0.6.3",
      "author": "Glenn Gore <glenn@affinidi.com>",
      "name": "did-peer",
      "version": "0.6.3",
      "description": "Implementation of the did:peer method in Rust, uses the ssi crate",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/did-peer@0.6.3?download_url=file://../affinidi-did-resolver/affinidi-did-resolver-methods/did-peer",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://affinidi.com/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/affinidi/affinidi-tdk-rs"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "path+file:///Users/rolstan/Documents/Affinidi/Work/Projects/affinidi-tdk-rs/crates/affinidi-messaging/affinidi-messaging-didcomm#0.10.8",
      "author": "Vyacheslav Gudkov <vyacheslav.gudkov@dsr-corporation.com>, Glenn Gore <glenn@affinidi.com>",
      "name": "affinidi-messaging-didcomm",
      "version": "0.10.8",
      "description": "DIDComm for Rust, integrates into Affinidi Messaging. See Affinidi Messaging for a complete communications solution.",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/affinidi-messaging-didcomm@0.10.8?download_url=file://../affinidi-messaging/affinidi-messaging-didcomm",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/affinidi/affinidi-tdk-rs"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "path+file:///Users/rolstan/Documents/Affinidi/Work/Projects/affinidi-tdk-rs/crates/affinidi-tdk/common/affinidi-did-authentication#0.1.10",
      "author": "Glenn Gore <glenn@affinidi.com>",
      "name": "affinidi-did-authentication",
      "version": "0.1.10",
      "description": "Using proof of DID ownership to authenticate to services",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/affinidi-did-authentication@0.1.10?download_url=file://../affinidi-tdk/common/affinidi-did-authentication",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://affinidi.com/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/affinidi/affinidi-tdk-rs"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "path+file:///Users/rolstan/Documents/Affinidi/Work/Projects/affinidi-tdk-rs/crates/affinidi-tdk/common/affinidi-secrets-resolver#0.1.12",
      "author": "Glenn Gore <glenn@affinidi.com>",
      "name": "affinidi-secrets-resolver",
      "version": "0.1.12",
      "description": "Common utilities for Affinidi Trust Development Kit.",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/affinidi-secrets-resolver@0.1.12?download_url=file://../affinidi-tdk/common/affinidi-secrets-resolver",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://affinidi.com/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/affinidi/affinidi-tdk-rs"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "path+file:///Users/rolstan/Documents/Affinidi/Work/Projects/affinidi-tdk-rs/crates/affinidi-tdk/common/affinidi-tdk-common#0.1.12",
      "author": "Glenn Gore <glenn@affinidi.com>",
      "name": "affinidi-tdk-common",
      "version": "0.1.12",
      "description": "Common utilities for Affinidi Trust Development Kit.",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/affinidi-tdk-common@0.1.12?download_url=file://../affinidi-tdk/common/affinidi-tdk-common",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://affinidi.com/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/affinidi/affinidi-tdk-rs"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#abnf-core@0.5.0",
      "author": "Damian Poddebniak <poddebniak@fh-muenster.de>",
      "name": "abnf-core",
      "version": "0.5.0",
      "description": "A nom-based parser for ABNF core rules.",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/abnf-core@0.5.0",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/duesee/abnf-core"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#abnf@0.13.0",
      "author": "Damian Poddebniak <poddebniak@fh-muenster.de>",
      "name": "abnf",
      "version": "0.13.0",
      "description": "A nom-based parser for ABNF.",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/abnf@0.13.0",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/duesee/abnf"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#adler2@2.0.1",
      "author": "Jonas Schievink <jonasschievink@gmail.com>, oyvindln <oyvindln@users.noreply.github.com>",
      "name": "adler2",
      "version": "2.0.1",
      "description": "A simple clean-room implementation of the Adler-32 checksum",
      "scope": "required",
      "licenses": [
        {
          "expression": "0BSD OR MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/adler2@2.0.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/adler2/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/oyvindln/adler2"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#aead@0.5.2",
      "author": "RustCrypto Developers",
      "name": "aead",
      "version": "0.5.2",
      "description": "Traits for Authenticated Encryption with Associated Data (AEAD) algorithms, such as AES-GCM as ChaCha20Poly1305, which provide a high-level API ",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/aead@0.5.2",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/aead"
        },
        {
          "type": "vcs",
          "url": "https://github.com/RustCrypto/traits"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#aes-gcm@0.10.3",
      "author": "RustCrypto Developers",
      "name": "aes-gcm",
      "version": "0.10.3",
      "description": "Pure Rust implementation of the AES-GCM (Galois/Counter Mode) Authenticated Encryption with Associated Data (AEAD) Cipher with optional architecture-specific hardware acceleration ",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/aes-gcm@0.10.3",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/aes-gcm"
        },
        {
          "type": "vcs",
          "url": "https://github.com/RustCrypto/AEADs"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#aes@0.8.4",
      "author": "RustCrypto Developers",
      "name": "aes",
      "version": "0.8.4",
      "description": "Pure Rust implementation of the Advanced Encryption Standard (a.k.a. Rijndael)",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/aes@0.8.4",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/aes"
        },
        {
          "type": "vcs",
          "url": "https://github.com/RustCrypto/block-ciphers"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#affinidi-data-integrity@0.2.0",
      "author": "Glenn Gore <glenn@affinidi.com>",
      "name": "affinidi-data-integrity",
      "version": "0.2.0",
      "description": "W3C Data Integrity Implementation",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/affinidi-data-integrity@0.2.0",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://affinidi.com/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/affinidi/affinidi-tdk-rs"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#affinidi-secrets-resolver@0.1.12",
      "author": "Glenn Gore <glenn@affinidi.com>",
      "name": "affinidi-secrets-resolver",
      "version": "0.1.12",
      "description": "Common utilities for Affinidi Trust Development Kit.",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/affinidi-secrets-resolver@0.1.12",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://affinidi.com/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/affinidi/affinidi-tdk-rs"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#ahash@0.7.8",
      "author": "Tom Kaitchuck <Tom.Kaitchuck@gmail.com>",
      "name": "ahash",
      "version": "0.7.8",
      "description": "A non-cryptographic hash function using AES-NI for high performance",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/ahash@0.7.8",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/ahash"
        },
        {
          "type": "vcs",
          "url": "https://github.com/tkaitchuck/ahash"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#ahash@0.8.12",
      "author": "Tom Kaitchuck <Tom.Kaitchuck@gmail.com>",
      "name": "ahash",
      "version": "0.8.12",
      "description": "A non-cryptographic hash function using AES-NI for high performance",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/ahash@0.8.12",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/ahash"
        },
        {
          "type": "vcs",
          "url": "https://github.com/tkaitchuck/ahash"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#aho-corasick@1.1.3",
      "author": "Andrew Gallant <jamslam@gmail.com>",
      "name": "aho-corasick",
      "version": "1.1.3",
      "description": "Fast multiple substring searching.",
      "scope": "required",
      "licenses": [
        {
          "expression": "Unlicense OR MIT"
        }
      ],
      "purl": "pkg:cargo/aho-corasick@1.1.3",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://github.com/BurntSushi/aho-corasick"
        },
        {
          "type": "vcs",
          "url": "https://github.com/BurntSushi/aho-corasick"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#allocator-api2@0.2.21",
      "author": "Zakarum <zaq.dev@icloud.com>",
      "name": "allocator-api2",
      "version": "0.2.21",
      "description": "Mirror of Rust's allocator API",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/allocator-api2@0.2.21",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/allocator-api2"
        },
        {
          "type": "website",
          "url": "https://github.com/zakarumych/allocator-api2"
        },
        {
          "type": "vcs",
          "url": "https://github.com/zakarumych/allocator-api2"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#anyhow@1.0.99",
      "author": "David Tolnay <dtolnay@gmail.com>",
      "name": "anyhow",
      "version": "1.0.99",
      "description": "Flexible concrete Error type built on std::error::Error",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/anyhow@1.0.99",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/anyhow"
        },
        {
          "type": "vcs",
          "url": "https://github.com/dtolnay/anyhow"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#arrayref@0.3.9",
      "author": "David Roundy <roundyd@physics.oregonstate.edu>",
      "name": "arrayref",
      "version": "0.3.9",
      "description": "Macros to take array references of slices",
      "scope": "required",
      "licenses": [
        {
          "expression": "BSD-2-Clause"
        }
      ],
      "purl": "pkg:cargo/arrayref@0.3.9",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/arrayref"
        },
        {
          "type": "vcs",
          "url": "https://github.com/droundy/arrayref"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#arrayvec@0.5.2",
      "author": "bluss",
      "name": "arrayvec",
      "version": "0.5.2",
      "description": "A vector with fixed capacity, backed by an array (it can be stored on the stack too). Implements fixed capacity ArrayVec and ArrayString.",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/arrayvec@0.5.2",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/arrayvec/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/bluss/arrayvec"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#arrayvec@0.7.6",
      "author": "bluss",
      "name": "arrayvec",
      "version": "0.7.6",
      "description": "A vector with fixed capacity, backed by an array (it can be stored on the stack too). Implements fixed capacity ArrayVec and ArrayString.",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/arrayvec@0.7.6",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/arrayvec/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/bluss/arrayvec"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#askar-crypto@0.3.6",
      "author": "Hyperledger Aries Contributors <aries@lists.hyperledger.org>",
      "name": "askar-crypto",
      "version": "0.3.6",
      "description": "Hyperledger Aries Askar cryptography",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/askar-crypto@0.3.6",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/hyperledger/aries-askar/"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#async-lock@3.4.1",
      "author": "Stjepan Glavina <stjepang@gmail.com>",
      "name": "async-lock",
      "version": "3.4.1",
      "description": "Async synchronization primitives",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/async-lock@3.4.1",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/smol-rs/async-lock"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#async-trait@0.1.88",
      "author": "David Tolnay <dtolnay@gmail.com>",
      "name": "async-trait",
      "version": "0.1.88",
      "description": "Type erasure for async trait methods",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/async-trait@0.1.88",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/async-trait"
        },
        {
          "type": "vcs",
          "url": "https://github.com/dtolnay/async-trait"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#atomic-waker@1.1.2",
      "author": "Stjepan Glavina <stjepang@gmail.com>, Contributors to futures-rs",
      "name": "atomic-waker",
      "version": "1.1.2",
      "description": "A synchronization primitive for task wakeup",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/atomic-waker@1.1.2",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/smol-rs/atomic-waker"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#atomic@0.6.1",
      "author": "Amanieu d'Antras <amanieu@gmail.com>",
      "name": "atomic",
      "version": "0.6.1",
      "description": "Generic Atomic<T> wrapper type",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/atomic@0.6.1",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/Amanieu/atomic-rs"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#autocfg@1.5.0",
      "author": "Josh Stone <cuviper@gmail.com>",
      "name": "autocfg",
      "version": "1.5.0",
      "description": "Automatic cfg for Rust compiler features",
      "scope": "excluded",
      "licenses": [
        {
          "expression": "Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/autocfg@1.5.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/autocfg/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/cuviper/autocfg"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#aws-lc-rs@1.13.3",
      "author": "AWS-LibCrypto",
      "name": "aws-lc-rs",
      "version": "1.13.3",
      "description": "aws-lc-rs is a cryptographic library using AWS-LC for its cryptographic operations. This library strives to be API-compatible with the popular Rust library named ring.",
      "scope": "required",
      "licenses": [
        {
          "expression": "ISC AND (Apache-2.0 OR ISC)"
        }
      ],
      "purl": "pkg:cargo/aws-lc-rs@1.13.3",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/crate/aws-lc-rs"
        },
        {
          "type": "website",
          "url": "https://github.com/aws/aws-lc-rs"
        },
        {
          "type": "other",
          "url": "aws_lc_rs_1_13_3_sys"
        },
        {
          "type": "vcs",
          "url": "https://github.com/aws/aws-lc-rs"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#aws-lc-sys@0.30.0",
      "author": "AWS-LC",
      "name": "aws-lc-sys",
      "version": "0.30.0",
      "description": "AWS-LC is a general-purpose cryptographic library maintained by the AWS Cryptography team for AWS and their customers. It іs based on code from the Google BoringSSL project and the OpenSSL project.",
      "scope": "required",
      "licenses": [
        {
          "expression": "ISC AND (Apache-2.0 OR ISC) AND OpenSSL"
        }
      ],
      "purl": "pkg:cargo/aws-lc-sys@0.30.0",
      "externalReferences": [
        {
          "type": "other",
          "url": "aws_lc_0_30_0"
        },
        {
          "type": "vcs",
          "url": "https://github.com/aws/aws-lc-rs"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#base-x@0.2.11",
      "author": "Alex R. <alexei.rudenko@gmail.com>",
      "name": "base-x",
      "version": "0.2.11",
      "description": "Encode/decode any base",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/base-x@0.2.11",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://github.com/OrKoN/base-x-rs"
        },
        {
          "type": "vcs",
          "url": "https://github.com/OrKoN/base-x-rs"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#base16ct@0.2.0",
      "author": "RustCrypto Developers",
      "name": "base16ct",
      "version": "0.2.0",
      "description": "Pure Rust implementation of Base16 a.k.a hexadecimal (RFC 4648) which avoids any usages of data-dependent branches/LUTs and thereby provides portable \"best effort\" constant-time operation and embedded-friendly no_std support ",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/base16ct@0.2.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/base16ct"
        },
        {
          "type": "vcs",
          "url": "https://github.com/RustCrypto/formats/tree/master/base16ct"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#base58@0.2.0",
      "author": "debris <marek.kotewicz@gmail.com>",
      "name": "base58",
      "version": "0.2.0",
      "description": "Tiny and fast base58 encoding",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/base58@0.2.0",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://github.com/debris/base58"
        },
        {
          "type": "vcs",
          "url": "https://github.com/debris/base58"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#base64@0.13.1",
      "author": "Alice Maz <alice@alicemaz.com>, Marshall Pierce <marshall@mpierce.org>",
      "name": "base64",
      "version": "0.13.1",
      "description": "encodes and decodes base64 as bytes or utf8",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/base64@0.13.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/base64"
        },
        {
          "type": "vcs",
          "url": "https://github.com/marshallpierce/rust-base64"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#base64@0.21.7",
      "author": "Alice Maz <alice@alicemaz.com>, Marshall Pierce <marshall@mpierce.org>",
      "name": "base64",
      "version": "0.21.7",
      "description": "encodes and decodes base64 as bytes or utf8",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/base64@0.21.7",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/base64"
        },
        {
          "type": "vcs",
          "url": "https://github.com/marshallpierce/rust-base64"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#base64@0.22.1",
      "author": "Marshall Pierce <marshall@mpierce.org>",
      "name": "base64",
      "version": "0.22.1",
      "description": "encodes and decodes base64 as bytes or utf8",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/base64@0.22.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/base64"
        },
        {
          "type": "vcs",
          "url": "https://github.com/marshallpierce/rust-base64"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#base64ct@1.8.0",
      "author": "RustCrypto Developers",
      "name": "base64ct",
      "version": "1.8.0",
      "description": "Pure Rust implementation of Base64 (RFC 4648) which avoids any usages of data-dependent branches/LUTs and thereby provides portable \"best effort\" constant-time operation and embedded-friendly no_std support ",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/base64ct@1.8.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/base64ct"
        },
        {
          "type": "website",
          "url": "https://github.com/RustCrypto/formats/tree/master/base64ct"
        },
        {
          "type": "vcs",
          "url": "https://github.com/RustCrypto/formats"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#bech32@0.8.1",
      "author": "Clark Moody",
      "name": "bech32",
      "version": "0.8.1",
      "description": "Encodes and decodes the Bech32 format",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/bech32@0.8.1",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/rust-bitcoin/rust-bech32"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#bit_utils@0.1.1",
      "author": "Cruz Julian Bishop <cruzjbishop@gmail.com>",
      "name": "bit_utils",
      "version": "0.1.1",
      "description": "Bit utilities (and eventually Nibble support) for Rust",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/bit_utils@0.1.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "http://techern.github.io/bit_utils-rs"
        },
        {
          "type": "vcs",
          "url": "https://github.com/Techern/bit_utils-rs"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#bitflags@1.3.2",
      "author": "The Rust Project Developers",
      "name": "bitflags",
      "version": "1.3.2",
      "description": "A macro to generate structures which behave like bitflags. ",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/bitflags@1.3.2",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/bitflags"
        },
        {
          "type": "website",
          "url": "https://github.com/bitflags/bitflags"
        },
        {
          "type": "vcs",
          "url": "https://github.com/bitflags/bitflags"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#bitflags@2.9.1",
      "author": "The Rust Project Developers",
      "name": "bitflags",
      "version": "2.9.1",
      "description": "A macro to generate structures which behave like bitflags. ",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/bitflags@2.9.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/bitflags"
        },
        {
          "type": "website",
          "url": "https://github.com/bitflags/bitflags"
        },
        {
          "type": "vcs",
          "url": "https://github.com/bitflags/bitflags"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#bitmaps@2.1.0",
      "author": "Bodil Stokke <bodil@bodil.org>",
      "name": "bitmaps",
      "version": "2.1.0",
      "description": "Fixed size boolean arrays",
      "scope": "required",
      "licenses": [
        {
          "expression": "MPL-2.0+"
        }
      ],
      "purl": "pkg:cargo/bitmaps@2.1.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "http://docs.rs/bitmaps"
        },
        {
          "type": "vcs",
          "url": "https://github.com/bodil/bitmaps"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#bitvec@0.20.4",
      "author": "myrrlyn <self@myrrlyn.dev>",
      "name": "bitvec",
      "version": "0.20.4",
      "description": "A crate for manipulating memory, bit by bit",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/bitvec@0.20.4",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/bitvec"
        },
        {
          "type": "website",
          "url": "https://myrrlyn.net/crates/bitvec"
        },
        {
          "type": "vcs",
          "url": "https://github.com/myrrlyn/bitvec"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#blake2@0.10.6",
      "author": "RustCrypto Developers",
      "name": "blake2",
      "version": "0.10.6",
      "description": "BLAKE2 hash functions",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/blake2@0.10.6",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/blake2"
        },
        {
          "type": "vcs",
          "url": "https://github.com/RustCrypto/hashes"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#blake2b_simd@0.5.11",
      "author": "Jack O'Connor",
      "name": "blake2b_simd",
      "version": "0.5.11",
      "description": "a pure Rust BLAKE2b implementation with dynamic SIMD",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/blake2b_simd@0.5.11",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/blake2b_simd"
        },
        {
          "type": "vcs",
          "url": "https://github.com/oconnor663/blake2_simd"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#blake2b_simd@1.0.3",
      "author": "Jack O'Connor",
      "name": "blake2b_simd",
      "version": "1.0.3",
      "description": "a pure Rust BLAKE2b implementation with dynamic SIMD",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/blake2b_simd@1.0.3",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/blake2b_simd"
        },
        {
          "type": "vcs",
          "url": "https://github.com/oconnor663/blake2_simd"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#blake2s_simd@1.0.3",
      "author": "Jack O'Connor",
      "name": "blake2s_simd",
      "version": "1.0.3",
      "description": "a pure Rust BLAKE2s implementation with dynamic SIMD",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/blake2s_simd@1.0.3",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/blake2s_simd"
        },
        {
          "type": "vcs",
          "url": "https://github.com/oconnor663/blake2_simd"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#blake3@1.8.2",
      "author": "Jack O'Connor <oconnor663@gmail.com>, Samuel Neves",
      "name": "blake3",
      "version": "1.8.2",
      "description": "the BLAKE3 hash function",
      "scope": "required",
      "licenses": [
        {
          "expression": "CC0-1.0 OR Apache-2.0 OR Apache-2.0 WITH LLVM-exception"
        }
      ],
      "purl": "pkg:cargo/blake3@1.8.2",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/blake3"
        },
        {
          "type": "vcs",
          "url": "https://github.com/BLAKE3-team/BLAKE3"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#block-buffer@0.10.4",
      "author": "RustCrypto Developers",
      "name": "block-buffer",
      "version": "0.10.4",
      "description": "Buffer type for block processing of data",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/block-buffer@0.10.4",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/block-buffer"
        },
        {
          "type": "vcs",
          "url": "https://github.com/RustCrypto/utils"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#block-buffer@0.9.0",
      "author": "RustCrypto Developers",
      "name": "block-buffer",
      "version": "0.9.0",
      "description": "Fixed size buffer for block processing of data",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/block-buffer@0.9.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/block-buffer"
        },
        {
          "type": "vcs",
          "url": "https://github.com/RustCrypto/utils"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#block-modes@0.9.1",
      "author": "RustCrypto Developers",
      "name": "block-modes",
      "version": "0.9.1",
      "description": "This crate is deprecated. Use crates from https://github.com/RustCrypto/block-modes instead.",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/block-modes@0.9.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/block-modes"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#block-padding@0.3.3",
      "author": "RustCrypto Developers",
      "name": "block-padding",
      "version": "0.3.3",
      "description": "Padding and unpadding of messages divided into blocks.",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/block-padding@0.3.3",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/block-padding"
        },
        {
          "type": "vcs",
          "url": "https://github.com/RustCrypto/utils"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#bls12_381@0.8.0",
      "author": "Sean Bowe <ewillbefull@gmail.com>, Jack Grigg <thestr4d@gmail.com>",
      "name": "bls12_381",
      "version": "0.8.0",
      "description": "Implementation of the BLS12-381 pairing-friendly elliptic curve construction",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/bls12_381@0.8.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/bls12_381/"
        },
        {
          "type": "website",
          "url": "https://github.com/zkcrypto/bls12_381"
        },
        {
          "type": "vcs",
          "url": "https://github.com/zkcrypto/bls12_381"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#bs58@0.4.0",
      "author": "Wim Looman <wim@nemo157.com>",
      "name": "bs58",
      "version": "0.4.0",
      "description": "Another Base58 codec implementation.",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/bs58@0.4.0",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/mycorrhiza/bs58-rs"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#bs58@0.5.1",
      "name": "bs58",
      "version": "0.5.1",
      "description": "Another Base58 codec implementation.",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/bs58@0.5.1",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/Nullus157/bs58-rs"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#btree-range-map@0.7.2",
      "author": "Timothée Haudebourg <author@haudebourg.net>",
      "name": "btree-range-map",
      "version": "0.7.2",
      "description": "B-tree range map implementation",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/btree-range-map@0.7.2",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/btree-range-map"
        },
        {
          "type": "vcs",
          "url": "https://github.com/timothee-haudebourg/btree-range-map"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#btree-slab@0.6.1",
      "author": "Timothée Haudebourg <author@haudebourg.net>",
      "name": "btree-slab",
      "version": "0.6.1",
      "description": "A memory compact Slab-based B-tree implementation",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/btree-slab@0.6.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/btree-slab"
        },
        {
          "type": "vcs",
          "url": "https://github.com/timothee-haudebourg/btree-slab"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#bumpalo@3.19.0",
      "author": "Nick Fitzgerald <fitzgen@gmail.com>",
      "name": "bumpalo",
      "version": "3.19.0",
      "description": "A fast bump allocation arena for Rust.",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/bumpalo@3.19.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/bumpalo"
        },
        {
          "type": "vcs",
          "url": "https://github.com/fitzgen/bumpalo"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#bytemuck@1.23.2",
      "author": "Lokathor <zefria@gmail.com>",
      "name": "bytemuck",
      "version": "1.23.2",
      "description": "A crate for mucking around with piles of bytes.",
      "scope": "required",
      "licenses": [
        {
          "expression": "Zlib OR Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/bytemuck@1.23.2",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/Lokathor/bytemuck"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#byteorder@1.5.0",
      "author": "Andrew Gallant <jamslam@gmail.com>",
      "name": "byteorder",
      "version": "1.5.0",
      "description": "Library for reading/writing numbers in big-endian and little-endian.",
      "scope": "required",
      "licenses": [
        {
          "expression": "Unlicense OR MIT"
        }
      ],
      "purl": "pkg:cargo/byteorder@1.5.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/byteorder"
        },
        {
          "type": "website",
          "url": "https://github.com/BurntSushi/byteorder"
        },
        {
          "type": "vcs",
          "url": "https://github.com/BurntSushi/byteorder"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#bytes@1.10.1",
      "author": "Carl Lerche <me@carllerche.com>, Sean McArthur <sean@seanmonstar.com>",
      "name": "bytes",
      "version": "1.10.1",
      "description": "Types and traits for working with bytes",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/bytes@1.10.1",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/tokio-rs/bytes"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#cached@0.30.0",
      "author": "James Kominick <james@kominick.com>",
      "name": "cached",
      "version": "0.30.0",
      "description": "Generic cache implementations and simplified function memoization",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/cached@0.30.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/cached"
        },
        {
          "type": "vcs",
          "url": "https://github.com/jaemk/cached"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#cbc@0.1.2",
      "author": "RustCrypto Developers",
      "name": "cbc",
      "version": "0.1.2",
      "description": "Cipher Block Chaining (CBC) block cipher mode of operation",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/cbc@0.1.2",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/cbc"
        },
        {
          "type": "vcs",
          "url": "https://github.com/RustCrypto/block-modes"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#cc-traits@2.0.0",
      "author": "Timothée Haudebourg <timothee@haudebourg.net>",
      "name": "cc-traits",
      "version": "2.0.0",
      "description": "Common collection traits",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/cc-traits@2.0.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/cc-traits"
        },
        {
          "type": "vcs",
          "url": "https://github.com/timothee-haudebourg/cc-traits"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#cc@1.2.32",
      "author": "Alex Crichton <alex@alexcrichton.com>",
      "name": "cc",
      "version": "1.2.32",
      "description": "A build-time dependency for Cargo build scripts to assist in invoking the native C compiler to compile native C code into a static archive to be linked into Rust code. ",
      "scope": "excluded",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/cc@1.2.32",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/cc"
        },
        {
          "type": "website",
          "url": "https://github.com/rust-lang/cc-rs"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rust-lang/cc-rs"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#cfg-if@1.0.1",
      "author": "Alex Crichton <alex@alexcrichton.com>",
      "name": "cfg-if",
      "version": "1.0.1",
      "description": "A macro to ergonomically define an item depending on a large number of #[cfg] parameters. Structured like an if-else chain, the first matching branch is the item that gets emitted. ",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/cfg-if@1.0.1",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/rust-lang/cfg-if"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#cfg_aliases@0.2.1",
      "author": "Zicklag <zicklag@katharostech.com>",
      "name": "cfg_aliases",
      "version": "0.2.1",
      "description": "A tiny utility to help save you a lot of effort with long winded `#[cfg()]` checks.",
      "scope": "excluded",
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/cfg_aliases@0.2.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/cfg_aliases"
        },
        {
          "type": "website",
          "url": "https://github.com/katharostech/cfg_aliases"
        },
        {
          "type": "vcs",
          "url": "https://github.com/katharostech/cfg_aliases"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#chacha20@0.9.1",
      "author": "RustCrypto Developers",
      "name": "chacha20",
      "version": "0.9.1",
      "description": "The ChaCha20 stream cipher (RFC 8439) implemented in pure Rust using traits from the RustCrypto `cipher` crate, with optional architecture-specific hardware acceleration (AVX2, SSE2). Additionally provides the ChaCha8, ChaCha12, XChaCha20, XChaCha12 and XChaCha8 stream ciphers, and also optional rand_core-compatible RNGs based on those ciphers. ",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/chacha20@0.9.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/chacha20"
        },
        {
          "type": "vcs",
          "url": "https://github.com/RustCrypto/stream-ciphers"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#chacha20poly1305@0.10.1",
      "author": "RustCrypto Developers",
      "name": "chacha20poly1305",
      "version": "0.10.1",
      "description": "Pure Rust implementation of the ChaCha20Poly1305 Authenticated Encryption with Additional Data Cipher (RFC 8439) with optional architecture-specific hardware acceleration. Also contains implementations of the XChaCha20Poly1305 extended nonce variant of ChaCha20Poly1305, and the reduced-round ChaCha8Poly1305 and ChaCha12Poly1305 lightweight variants. ",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/chacha20poly1305@0.10.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/chacha20poly1305"
        },
        {
          "type": "vcs",
          "url": "https://github.com/RustCrypto/AEADs/tree/master/chacha20poly1305"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#chrono@0.4.41",
      "name": "chrono",
      "version": "0.4.41",
      "description": "Date and time library for Rust",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/chrono@0.4.41",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/chrono/"
        },
        {
          "type": "website",
          "url": "https://github.com/chronotope/chrono"
        },
        {
          "type": "vcs",
          "url": "https://github.com/chronotope/chrono"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#ciborium-io@0.2.2",
      "author": "Nathaniel McCallum <npmccallum@profian.com>",
      "name": "ciborium-io",
      "version": "0.2.2",
      "description": "Simplified Read/Write traits for no_std usage",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/ciborium-io@0.2.2",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://github.com/enarx/ciborium"
        },
        {
          "type": "vcs",
          "url": "https://github.com/enarx/ciborium"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#ciborium-ll@0.2.2",
      "author": "Nathaniel McCallum <npmccallum@profian.com>",
      "name": "ciborium-ll",
      "version": "0.2.2",
      "description": "Low-level CBOR codec primitives",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/ciborium-ll@0.2.2",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://github.com/enarx/ciborium"
        },
        {
          "type": "vcs",
          "url": "https://github.com/enarx/ciborium"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#ciborium@0.2.2",
      "author": "Nathaniel McCallum <npmccallum@profian.com>",
      "name": "ciborium",
      "version": "0.2.2",
      "description": "serde implementation of CBOR using ciborium-basic",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/ciborium@0.2.2",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://github.com/enarx/ciborium"
        },
        {
          "type": "vcs",
          "url": "https://github.com/enarx/ciborium"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#cid@0.8.6",
      "author": "Friedel Ziegelmayer <dignifiedquire@gmail.com>",
      "name": "cid",
      "version": "0.8.6",
      "description": "CID in rust",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/cid@0.8.6",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://github.com/multiformats/rust-cid"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#cipher@0.4.4",
      "author": "RustCrypto Developers",
      "name": "cipher",
      "version": "0.4.4",
      "description": "Traits for describing block ciphers and stream ciphers",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/cipher@0.4.4",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/cipher"
        },
        {
          "type": "vcs",
          "url": "https://github.com/RustCrypto/traits"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#clear_on_drop@0.2.5",
      "author": "Cesar Eduardo Barros <cesarb@cesarb.eti.br>",
      "name": "clear_on_drop",
      "version": "0.2.5",
      "description": "Helpers for clearing sensitive data on the stack and heap",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/clear_on_drop@0.2.5",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/clear_on_drop"
        },
        {
          "type": "vcs",
          "url": "https://github.com/cesarb/clear_on_drop"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#cmake@0.1.54",
      "author": "Alex Crichton <alex@alexcrichton.com>",
      "name": "cmake",
      "version": "0.1.54",
      "description": "A build dependency for running `cmake` to build a native library ",
      "scope": "excluded",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/cmake@0.1.54",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/cmake"
        },
        {
          "type": "website",
          "url": "https://github.com/rust-lang/cmake-rs"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rust-lang/cmake-rs"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#combination@0.1.5",
      "author": "shawroger <roger@shawroger.com>",
      "name": "combination",
      "version": "0.1.5",
      "description": "A lib to do math jobs like permutate and combinate data from vec.",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/combination@0.1.5",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/combination/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/shawroger/combination.git"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#concurrent-queue@2.5.0",
      "author": "Stjepan Glavina <stjepang@gmail.com>, Taiki Endo <te316e89@gmail.com>, John Nunley <dev@notgull.net>",
      "name": "concurrent-queue",
      "version": "2.5.0",
      "description": "Concurrent multi-producer multi-consumer queue",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/concurrent-queue@2.5.0",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/smol-rs/concurrent-queue"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#const-oid@0.7.1",
      "author": "RustCrypto Developers",
      "name": "const-oid",
      "version": "0.7.1",
      "description": "Const-friendly implementation of the ISO/IEC Object Identifier (OID) standard as defined in ITU X.660, with support for BER/DER encoding/decoding as well as heapless no_std (i.e. embedded) support ",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/const-oid@0.7.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/const-oid"
        },
        {
          "type": "vcs",
          "url": "https://github.com/RustCrypto/formats/tree/master/const-oid"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#const-oid@0.9.6",
      "author": "RustCrypto Developers",
      "name": "const-oid",
      "version": "0.9.6",
      "description": "Const-friendly implementation of the ISO/IEC Object Identifier (OID) standard as defined in ITU X.660, with support for BER/DER encoding/decoding as well as heapless no_std (i.e. embedded) support ",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/const-oid@0.9.6",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/const-oid"
        },
        {
          "type": "vcs",
          "url": "https://github.com/RustCrypto/formats/tree/master/const-oid"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#constant_time_eq@0.1.5",
      "author": "Cesar Eduardo Barros <cesarb@cesarb.eti.br>",
      "name": "constant_time_eq",
      "version": "0.1.5",
      "description": "Compares two equal-sized byte strings in constant time.",
      "scope": "required",
      "licenses": [
        {
          "expression": "CC0-1.0"
        }
      ],
      "purl": "pkg:cargo/constant_time_eq@0.1.5",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/constant_time_eq"
        },
        {
          "type": "vcs",
          "url": "https://github.com/cesarb/constant_time_eq"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#constant_time_eq@0.3.1",
      "author": "Cesar Eduardo Barros <cesarb@cesarb.eti.br>",
      "name": "constant_time_eq",
      "version": "0.3.1",
      "description": "Compares two equal-sized byte strings in constant time.",
      "scope": "required",
      "licenses": [
        {
          "expression": "CC0-1.0 OR MIT-0 OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/constant_time_eq@0.3.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/constant_time_eq"
        },
        {
          "type": "vcs",
          "url": "https://github.com/cesarb/constant_time_eq"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#contextual@0.1.6",
      "author": "Timothée Haudebourg <author@haudebourg.net>",
      "name": "contextual",
      "version": "0.1.6",
      "description": "Utility crate to deal with data in context",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/contextual@0.1.6",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/contextual"
        },
        {
          "type": "vcs",
          "url": "https://github.com/timothee-haudebourg/contextual"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#core-foundation-sys@0.8.7",
      "author": "The Servo Project Developers",
      "name": "core-foundation-sys",
      "version": "0.8.7",
      "description": "Bindings to Core Foundation for macOS",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/core-foundation-sys@0.8.7",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://github.com/servo/core-foundation-rs"
        },
        {
          "type": "vcs",
          "url": "https://github.com/servo/core-foundation-rs"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#core-foundation@0.10.1",
      "author": "The Servo Project Developers",
      "name": "core-foundation",
      "version": "0.10.1",
      "description": "Bindings to Core Foundation for macOS",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/core-foundation@0.10.1",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/servo/core-foundation-rs"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#core-foundation@0.9.4",
      "author": "The Servo Project Developers",
      "name": "core-foundation",
      "version": "0.9.4",
      "description": "Bindings to Core Foundation for macOS",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/core-foundation@0.9.4",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://github.com/servo/core-foundation-rs"
        },
        {
          "type": "vcs",
          "url": "https://github.com/servo/core-foundation-rs"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#core2@0.4.0",
      "author": "Brendan Molloy <brendan@bbqsrc.net>",
      "name": "core2",
      "version": "0.4.0",
      "description": "The bare essentials of std::io for use in no_std. Alloc support is optional.",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/core2@0.4.0",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/bbqsrc/core2"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#coset@0.3.8",
      "author": "David Drysdale <drysdale@google.com>, Paul Crowley <paulcrowley@google.com>",
      "name": "coset",
      "version": "0.3.8",
      "description": "Set of types for supporting COSE",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/coset@0.3.8",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/google/coset"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#cpufeatures@0.2.17",
      "author": "RustCrypto Developers",
      "name": "cpufeatures",
      "version": "0.2.17",
      "description": "Lightweight runtime CPU feature detection for aarch64, loongarch64, and x86/x86_64 targets,  with no_std support and support for mobile targets including Android and iOS ",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/cpufeatures@0.2.17",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/cpufeatures"
        },
        {
          "type": "vcs",
          "url": "https://github.com/RustCrypto/utils"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#crc32fast@1.5.0",
      "author": "Sam Rijs <srijs@airpost.net>, Alex Crichton <alex@alexcrichton.com>",
      "name": "crc32fast",
      "version": "1.5.0",
      "description": "Fast, SIMD-accelerated CRC32 (IEEE) checksum computation",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/crc32fast@1.5.0",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/srijs/rust-crc32fast"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#crossbeam-channel@0.5.15",
      "name": "crossbeam-channel",
      "version": "0.5.15",
      "description": "Multi-producer multi-consumer channels for message passing",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/crossbeam-channel@0.5.15",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://github.com/crossbeam-rs/crossbeam/tree/master/crossbeam-channel"
        },
        {
          "type": "vcs",
          "url": "https://github.com/crossbeam-rs/crossbeam"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#crossbeam-epoch@0.9.18",
      "name": "crossbeam-epoch",
      "version": "0.9.18",
      "description": "Epoch-based garbage collection",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/crossbeam-epoch@0.9.18",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://github.com/crossbeam-rs/crossbeam/tree/master/crossbeam-epoch"
        },
        {
          "type": "vcs",
          "url": "https://github.com/crossbeam-rs/crossbeam"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#crossbeam-utils@0.8.21",
      "name": "crossbeam-utils",
      "version": "0.8.21",
      "description": "Utilities for concurrent programming",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/crossbeam-utils@0.8.21",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://github.com/crossbeam-rs/crossbeam/tree/master/crossbeam-utils"
        },
        {
          "type": "vcs",
          "url": "https://github.com/crossbeam-rs/crossbeam"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#crunchy@0.2.4",
      "author": "Eira Fransham <jackefransham@gmail.com>",
      "name": "crunchy",
      "version": "0.2.4",
      "description": "Crunchy unroller: deterministically unroll constant loops",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/crunchy@0.2.4",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://github.com/eira-fransham/crunchy"
        },
        {
          "type": "vcs",
          "url": "https://github.com/eira-fransham/crunchy"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#crypto-bigint@0.3.2",
      "author": "RustCrypto Developers",
      "name": "crypto-bigint",
      "version": "0.3.2",
      "description": "Pure Rust implementation of a big integer library which has been designed from the ground-up for use in cryptographic applications. Provides constant-time, no_std-friendly implementations of modern formulas using const generics. ",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/crypto-bigint@0.3.2",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/RustCrypto/crypto-bigint"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#crypto-bigint@0.5.5",
      "author": "RustCrypto Developers",
      "name": "crypto-bigint",
      "version": "0.5.5",
      "description": "Pure Rust implementation of a big integer library which has been designed from the ground-up for use in cryptographic applications. Provides constant-time, no_std-friendly implementations of modern formulas using const generics. ",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/crypto-bigint@0.5.5",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/RustCrypto/crypto-bigint"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#crypto-common@0.1.6",
      "author": "RustCrypto Developers",
      "name": "crypto-common",
      "version": "0.1.6",
      "description": "Common cryptographic traits",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/crypto-common@0.1.6",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/crypto-common"
        },
        {
          "type": "vcs",
          "url": "https://github.com/RustCrypto/traits"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#crypto_box@0.9.1",
      "author": "RustCrypto Developers",
      "name": "crypto_box",
      "version": "0.9.1",
      "description": "Pure Rust implementation of NaCl's crypto_box public-key authenticated encryption primitive which combines the X25519 Elliptic Curve Diffie-Hellman function and the XSalsa20Poly1305 authenticated encryption cipher ",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/crypto_box@0.9.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/crypto_box"
        },
        {
          "type": "website",
          "url": "https://github.com/RustCrypto/nacl-compat"
        },
        {
          "type": "vcs",
          "url": "https://github.com/RustCrypto/nacl-compat/tree/master/crypto_box"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#crypto_secretbox@0.1.1",
      "author": "RustCrypto Developers",
      "name": "crypto_secretbox",
      "version": "0.1.1",
      "description": "Pure Rust implementation of the XSalsa20Poly1305 (a.k.a. NaCl crypto_secretbox) authenticated encryption cipher as well as the libsodium variant of XChaCha20Poly1305 ",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/crypto_secretbox@0.1.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/crypto_secretbox"
        },
        {
          "type": "vcs",
          "url": "https://github.com/RustCrypto/nacl-compat/tree/master/crypto_secretbox"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#csv-core@0.1.12",
      "author": "Andrew Gallant <jamslam@gmail.com>",
      "name": "csv-core",
      "version": "0.1.12",
      "description": "Bare bones CSV parsing with no_std support.",
      "scope": "excluded",
      "licenses": [
        {
          "expression": "Unlicense OR MIT"
        }
      ],
      "purl": "pkg:cargo/csv-core@0.1.12",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/csv-core"
        },
        {
          "type": "website",
          "url": "https://github.com/BurntSushi/rust-csv"
        },
        {
          "type": "vcs",
          "url": "https://github.com/BurntSushi/rust-csv"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#csv@1.3.1",
      "author": "Andrew Gallant <jamslam@gmail.com>",
      "name": "csv",
      "version": "1.3.1",
      "description": "Fast CSV parsing with support for serde.",
      "scope": "excluded",
      "licenses": [
        {
          "expression": "Unlicense OR MIT"
        }
      ],
      "purl": "pkg:cargo/csv@1.3.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/csv"
        },
        {
          "type": "website",
          "url": "https://github.com/BurntSushi/rust-csv"
        },
        {
          "type": "vcs",
          "url": "https://github.com/BurntSushi/rust-csv"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#ctr@0.9.2",
      "author": "RustCrypto Developers",
      "name": "ctr",
      "version": "0.9.2",
      "description": "CTR block modes of operation",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/ctr@0.9.2",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/ctr"
        },
        {
          "type": "vcs",
          "url": "https://github.com/RustCrypto/block-modes"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#curve25519-dalek@4.1.3",
      "author": "Isis Lovecruft <isis@patternsinthevoid.net>, Henry de Valence <hdevalence@hdevalence.ca>",
      "name": "curve25519-dalek",
      "version": "4.1.3",
      "description": "A pure-Rust implementation of group operations on ristretto255 and Curve25519",
      "scope": "required",
      "licenses": [
        {
          "expression": "BSD-3-Clause"
        }
      ],
      "purl": "pkg:cargo/curve25519-dalek@4.1.3",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/curve25519-dalek"
        },
        {
          "type": "website",
          "url": "https://github.com/dalek-cryptography/curve25519-dalek"
        },
        {
          "type": "vcs",
          "url": "https://github.com/dalek-cryptography/curve25519-dalek/tree/main/curve25519-dalek"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#darling@0.13.4",
      "author": "Ted Driggs <ted.driggs@outlook.com>",
      "name": "darling",
      "version": "0.13.4",
      "description": "A proc-macro library for reading attributes into structs when implementing custom derives. ",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/darling@0.13.4",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/darling/0.13.4"
        },
        {
          "type": "vcs",
          "url": "https://github.com/TedDriggs/darling"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#darling@0.14.4",
      "author": "Ted Driggs <ted.driggs@outlook.com>",
      "name": "darling",
      "version": "0.14.4",
      "description": "A proc-macro library for reading attributes into structs when implementing custom derives. ",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/darling@0.14.4",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/darling/0.14.4"
        },
        {
          "type": "vcs",
          "url": "https://github.com/TedDriggs/darling"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#darling@0.20.11",
      "author": "Ted Driggs <ted.driggs@outlook.com>",
      "name": "darling",
      "version": "0.20.11",
      "description": "A proc-macro library for reading attributes into structs when implementing custom derives. ",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/darling@0.20.11",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/darling/0.20.11"
        },
        {
          "type": "vcs",
          "url": "https://github.com/TedDriggs/darling"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#darling_core@0.13.4",
      "author": "Ted Driggs <ted.driggs@outlook.com>",
      "name": "darling_core",
      "version": "0.13.4",
      "description": "Helper crate for proc-macro library for reading attributes into structs when implementing custom derives. Use https://crates.io/crates/darling in your code. ",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/darling_core@0.13.4",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/TedDriggs/darling"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#darling_core@0.14.4",
      "author": "Ted Driggs <ted.driggs@outlook.com>",
      "name": "darling_core",
      "version": "0.14.4",
      "description": "Helper crate for proc-macro library for reading attributes into structs when implementing custom derives. Use https://crates.io/crates/darling in your code. ",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/darling_core@0.14.4",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/TedDriggs/darling"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#darling_core@0.20.11",
      "author": "Ted Driggs <ted.driggs@outlook.com>",
      "name": "darling_core",
      "version": "0.20.11",
      "description": "Helper crate for proc-macro library for reading attributes into structs when implementing custom derives. Use https://crates.io/crates/darling in your code. ",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/darling_core@0.20.11",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/TedDriggs/darling"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#darling_macro@0.13.4",
      "author": "Ted Driggs <ted.driggs@outlook.com>",
      "name": "darling_macro",
      "version": "0.13.4",
      "description": "Internal support for a proc-macro library for reading attributes into structs when implementing custom derives. Use https://crates.io/crates/darling in your code. ",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/darling_macro@0.13.4",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/TedDriggs/darling"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#darling_macro@0.14.4",
      "author": "Ted Driggs <ted.driggs@outlook.com>",
      "name": "darling_macro",
      "version": "0.14.4",
      "description": "Internal support for a proc-macro library for reading attributes into structs when implementing custom derives. Use https://crates.io/crates/darling in your code. ",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/darling_macro@0.14.4",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/TedDriggs/darling"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#darling_macro@0.20.11",
      "author": "Ted Driggs <ted.driggs@outlook.com>",
      "name": "darling_macro",
      "version": "0.20.11",
      "description": "Internal support for a proc-macro library for reading attributes into structs when implementing custom derives. Use https://crates.io/crates/darling in your code. ",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/darling_macro@0.20.11",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/TedDriggs/darling"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#data-encoding-macro-internal@0.1.16",
      "author": "Julien Cretin <cretin@google.com>",
      "name": "data-encoding-macro-internal",
      "version": "0.1.16",
      "description": "Internal library for data-encoding-macro",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/data-encoding-macro-internal@0.1.16",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/ia0/data-encoding"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#data-encoding-macro@0.1.18",
      "author": "Julien Cretin <cretin@google.com>",
      "name": "data-encoding-macro",
      "version": "0.1.18",
      "description": "Macros for data-encoding",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/data-encoding-macro@0.1.18",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/data-encoding-macro"
        },
        {
          "type": "vcs",
          "url": "https://github.com/ia0/data-encoding"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#data-encoding@2.9.0",
      "author": "Julien Cretin <git@ia0.eu>",
      "name": "data-encoding",
      "version": "2.9.0",
      "description": "Efficient and customizable data-encoding functions like base64, base32, and hex",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/data-encoding@2.9.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/data-encoding"
        },
        {
          "type": "vcs",
          "url": "https://github.com/ia0/data-encoding"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#decoded-char@0.1.1",
      "author": "Timothée Haudebourg <author@haudebourg.net>",
      "name": "decoded-char",
      "version": "0.1.1",
      "description": "Simple wrapper to keep track of the original byte length of a decoded character in the encoded source file.",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/decoded-char@0.1.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/decoded-char"
        },
        {
          "type": "vcs",
          "url": "https://github.com/timothee-haudebourg/decoded-char"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#der@0.5.1",
      "author": "RustCrypto Developers",
      "name": "der",
      "version": "0.5.1",
      "description": "Pure Rust embedded-friendly implementation of the Distinguished Encoding Rules (DER) for Abstract Syntax Notation One (ASN.1) as described in ITU X.690 with full support for heapless no_std targets ",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/der@0.5.1",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/RustCrypto/formats/tree/master/der"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#der@0.7.10",
      "author": "RustCrypto Developers",
      "name": "der",
      "version": "0.7.10",
      "description": "Pure Rust embedded-friendly implementation of the Distinguished Encoding Rules (DER) for Abstract Syntax Notation One (ASN.1) as described in ITU X.690 with full support for heapless no_std targets ",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/der@0.7.10",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/RustCrypto/formats/tree/master/der"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#deranged@0.4.0",
      "author": "Jacob Pratt <jacob@jhpratt.dev>",
      "name": "deranged",
      "version": "0.4.0",
      "description": "Ranged integers",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/deranged@0.4.0",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/jhpratt/deranged"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#derivative@2.2.0",
      "author": "mcarton <cartonmartin+git@gmail.com>",
      "name": "derivative",
      "version": "2.2.0",
      "description": "A set of alternative `derive` attributes for Rust",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/derivative@2.2.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://mcarton.github.io/rust-derivative/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/mcarton/rust-derivative"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#did-ethr@0.3.2",
      "author": "Spruce Systems, Inc.",
      "name": "did-ethr",
      "version": "0.3.2",
      "description": "did:ethr DID method, using the ssi crate",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/did-ethr@0.3.2",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/did-ethr/"
        },
        {
          "type": "website",
          "url": "https://github.com/spruceid/ssi/tree/main/did-ethr/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/spruceid/ssi/"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#did-ion@0.3.2",
      "author": "Spruce Systems, Inc.",
      "name": "did-ion",
      "version": "0.3.2",
      "description": "did:ion DID method implementation, using the ssi crate and ION/Sidetree REST API",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/did-ion@0.3.2",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/did-ion/"
        },
        {
          "type": "website",
          "url": "https://github.com/spruceid/ssi/tree/main/did-ion/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/spruceid/ssi/"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#did-jwk@0.2.1",
      "author": "Spruce Systems, Inc.",
      "name": "did-jwk",
      "version": "0.2.1",
      "description": "did:jwk DID method, using the ssi crate",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/did-jwk@0.2.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/did-jwk/"
        },
        {
          "type": "website",
          "url": "https://github.com/spruceid/ssi/tree/main/did-jwk/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/spruceid/ssi/"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#did-method-key@0.3.1",
      "author": "Spruce Systems, Inc.",
      "name": "did-method-key",
      "version": "0.3.1",
      "description": "did:key DID method, using the ssi crate",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/did-method-key@0.3.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/did-key/"
        },
        {
          "type": "website",
          "url": "https://github.com/spruceid/ssi/tree/main/did-key/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/spruceid/ssi/"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#did-pkh@0.3.2",
      "author": "Spruce Systems, Inc.",
      "name": "did-pkh",
      "version": "0.3.2",
      "description": "did:pkh DID method, using the ssi crate",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/did-pkh@0.3.2",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/did-pkh/"
        },
        {
          "type": "website",
          "url": "https://github.com/spruceid/ssi/tree/main/did-pkh/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/spruceid/ssi/"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#did-tz@0.3.2",
      "author": "Spruce Systems, Inc.",
      "name": "did-tz",
      "version": "0.3.2",
      "description": "did:tz Tezos DID method, using the ssi crate",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/did-tz@0.3.2",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/did-tezos/"
        },
        {
          "type": "website",
          "url": "https://github.com/spruceid/ssi/tree/main/did-tezos/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/spruceid/ssi/"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#did-web@0.3.4",
      "author": "Spruce Systems, Inc.",
      "name": "did-web",
      "version": "0.3.4",
      "description": "did:web DID method, using the ssi crate",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/did-web@0.3.4",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/did-web/"
        },
        {
          "type": "website",
          "url": "https://github.com/spruceid/ssi/tree/main/did-web/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/spruceid/ssi/"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#didwebvh-rs@0.1.1",
      "author": "Glenn Gore <glenn@affinidi.com>",
      "name": "didwebvh-rs",
      "version": "0.1.1",
      "description": "Implementation of the did:webvh method in Rust",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/didwebvh-rs@0.1.1",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://didwebvh.info/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/decentralized-identity/didwebvh-rs"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#digest@0.10.7",
      "author": "RustCrypto Developers",
      "name": "digest",
      "version": "0.10.7",
      "description": "Traits for cryptographic hash functions and message authentication codes",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/digest@0.10.7",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/digest"
        },
        {
          "type": "vcs",
          "url": "https://github.com/RustCrypto/traits"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#digest@0.9.0",
      "author": "RustCrypto Developers",
      "name": "digest",
      "version": "0.9.0",
      "description": "Traits for cryptographic hash functions",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/digest@0.9.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/digest"
        },
        {
          "type": "vcs",
          "url": "https://github.com/RustCrypto/traits"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#displaydoc@0.2.5",
      "author": "Jane Lusby <jlusby@yaah.dev>",
      "name": "displaydoc",
      "version": "0.2.5",
      "description": "A derive macro for implementing the display Trait via a doc comment and string interpolation ",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/displaydoc@0.2.5",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/displaydoc"
        },
        {
          "type": "website",
          "url": "https://github.com/yaahc/displaydoc"
        },
        {
          "type": "vcs",
          "url": "https://github.com/yaahc/displaydoc"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#document-features@0.2.11",
      "author": "Slint Developers <info@slint.dev>",
      "name": "document-features",
      "version": "0.2.11",
      "description": "Extract documentation for the feature flags from comments in Cargo.toml",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/document-features@0.2.11",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://slint.rs"
        },
        {
          "type": "vcs",
          "url": "https://github.com/slint-ui/document-features"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#dunce@1.0.5",
      "author": "Kornel <kornel@geekhood.net>",
      "name": "dunce",
      "version": "1.0.5",
      "description": "Normalize Windows paths to the most compatible format, avoiding UNC where possible",
      "scope": "excluded",
      "licenses": [
        {
          "expression": "CC0-1.0 OR MIT-0 OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/dunce@1.0.5",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/dunce"
        },
        {
          "type": "website",
          "url": "https://lib.rs/crates/dunce"
        },
        {
          "type": "vcs",
          "url": "https://gitlab.com/kornelski/dunce"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#dyn-clone@1.0.20",
      "author": "David Tolnay <dtolnay@gmail.com>",
      "name": "dyn-clone",
      "version": "1.0.20",
      "description": "Clone trait that is dyn-compatible",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/dyn-clone@1.0.20",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/dyn-clone"
        },
        {
          "type": "vcs",
          "url": "https://github.com/dtolnay/dyn-clone"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#ecdsa@0.16.9",
      "author": "RustCrypto Developers",
      "name": "ecdsa",
      "version": "0.16.9",
      "description": "Pure Rust implementation of the Elliptic Curve Digital Signature Algorithm (ECDSA) as specified in FIPS 186-4 (Digital Signature Standard), providing RFC6979 deterministic signatures as well as support for added entropy ",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/ecdsa@0.16.9",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/RustCrypto/signatures/tree/master/ecdsa"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#ed25519-dalek@2.2.0",
      "author": "isis lovecruft <isis@patternsinthevoid.net>, Tony Arcieri <bascule@gmail.com>, Michael Rosenberg <michael@mrosenberg.pub>",
      "name": "ed25519-dalek",
      "version": "2.2.0",
      "description": "Fast and efficient ed25519 EdDSA key generations, signing, and verification in pure Rust.",
      "scope": "required",
      "licenses": [
        {
          "expression": "BSD-3-Clause"
        }
      ],
      "purl": "pkg:cargo/ed25519-dalek@2.2.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/ed25519-dalek"
        },
        {
          "type": "website",
          "url": "https://github.com/dalek-cryptography/curve25519-dalek"
        },
        {
          "type": "vcs",
          "url": "https://github.com/dalek-cryptography/curve25519-dalek/tree/main/ed25519-dalek"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#ed25519@2.2.3",
      "author": "RustCrypto Developers",
      "name": "ed25519",
      "version": "2.2.3",
      "description": "Edwards Digital Signature Algorithm (EdDSA) over Curve25519 (as specified in RFC 8032) support library providing signature type definitions and PKCS#8 private key decoding/encoding support ",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/ed25519@2.2.3",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/ed25519"
        },
        {
          "type": "vcs",
          "url": "https://github.com/RustCrypto/signatures/tree/master/ed25519"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#educe@0.4.23",
      "author": "Magic Len <len@magiclen.org>",
      "name": "educe",
      "version": "0.4.23",
      "description": "This crate provides procedural macros to help you implement Rust-built-in traits quickly.",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/educe@0.4.23",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://magiclen.org/educe"
        },
        {
          "type": "vcs",
          "url": "https://github.com/magiclen/educe"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#educe@0.5.11",
      "author": "Magic Len <len@magiclen.org>",
      "name": "educe",
      "version": "0.5.11",
      "description": "This crate offers procedural macros designed to facilitate the swift implementation of Rust's built-in traits.",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/educe@0.5.11",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://magiclen.org/educe"
        },
        {
          "type": "vcs",
          "url": "https://github.com/magiclen/educe"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#elliptic-curve@0.13.8",
      "author": "RustCrypto Developers",
      "name": "elliptic-curve",
      "version": "0.13.8",
      "description": "General purpose Elliptic Curve Cryptography (ECC) support, including types and traits for representing various elliptic curve forms, scalars, points, and public/secret keys composed thereof. ",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/elliptic-curve@0.13.8",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/RustCrypto/traits/tree/master/elliptic-curve"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#encoding_rs@0.8.35",
      "author": "Henri Sivonen <hsivonen@hsivonen.fi>",
      "name": "encoding_rs",
      "version": "0.8.35",
      "description": "A Gecko-oriented implementation of the Encoding Standard",
      "scope": "required",
      "licenses": [
        {
          "expression": "(Apache-2.0 OR MIT) AND BSD-3-Clause"
        }
      ],
      "purl": "pkg:cargo/encoding_rs@0.8.35",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/encoding_rs/"
        },
        {
          "type": "website",
          "url": "https://docs.rs/encoding_rs/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/hsivonen/encoding_rs"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#enum-ordinalize-derive@4.3.1",
      "name": "enum-ordinalize-derive",
      "version": "4.3.1",
      "description": "This crate provides a procedural macro that enables enums to not only obtain the ordinal values of their variants but also allows for the construction of enums from an ordinal value.",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/enum-ordinalize-derive@4.3.1",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://magiclen.org/enum-ordinalize"
        },
        {
          "type": "vcs",
          "url": "https://github.com/magiclen/enum-ordinalize"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#enum-ordinalize@3.1.15",
      "author": "Magic Len <len@magiclen.org>",
      "name": "enum-ordinalize",
      "version": "3.1.15",
      "description": "This crates provides a procedural macro to let enums not only get its variants' ordinal but also be constructed from an ordinal.",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/enum-ordinalize@3.1.15",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://magiclen.org/enum-ordinalize"
        },
        {
          "type": "vcs",
          "url": "https://github.com/magiclen/enum-ordinalize"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#enum-ordinalize@4.3.0",
      "name": "enum-ordinalize",
      "version": "4.3.0",
      "description": "This library enables enums to not only obtain the ordinal values of their variants but also allows for the construction of enums from an ordinal value.",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/enum-ordinalize@4.3.0",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://magiclen.org/enum-ordinalize"
        },
        {
          "type": "vcs",
          "url": "https://github.com/magiclen/enum-ordinalize"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#equivalent@1.0.2",
      "name": "equivalent",
      "version": "1.0.2",
      "description": "Traits for key comparison in maps.",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/equivalent@1.0.2",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/indexmap-rs/equivalent"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#errno@0.3.13",
      "author": "Chris Wong <lambda.fairy@gmail.com>, Dan Gohman <dev@sunfishcode.online>",
      "name": "errno",
      "version": "0.3.13",
      "description": "Cross-platform interface to the `errno` variable.",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/errno@0.3.13",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/errno"
        },
        {
          "type": "vcs",
          "url": "https://github.com/lambda-fairy/rust-errno"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#event-listener-strategy@0.5.4",
      "author": "John Nunley <dev@notgull.net>",
      "name": "event-listener-strategy",
      "version": "0.5.4",
      "description": "Block or poll on event_listener easily",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/event-listener-strategy@0.5.4",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/smol-rs/event-listener-strategy"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#event-listener@5.4.1",
      "author": "Stjepan Glavina <stjepang@gmail.com>, John Nunley <dev@notgull.net>",
      "name": "event-listener",
      "version": "5.4.1",
      "description": "Notify async tasks or threads",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/event-listener@5.4.1",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/smol-rs/event-listener"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#fastrand@2.3.0",
      "author": "Stjepan Glavina <stjepang@gmail.com>",
      "name": "fastrand",
      "version": "2.3.0",
      "description": "A simple and fast random number generator",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/fastrand@2.3.0",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/smol-rs/fastrand"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#ff@0.13.1",
      "author": "Sean Bowe <ewillbefull@gmail.com>, Jack Grigg <thestr4d@gmail.com>",
      "name": "ff",
      "version": "0.13.1",
      "description": "Library for building and interfacing with finite fields",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/ff@0.13.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/ff/"
        },
        {
          "type": "website",
          "url": "https://github.com/zkcrypto/ff"
        },
        {
          "type": "vcs",
          "url": "https://github.com/zkcrypto/ff"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#fixed-hash@0.7.0",
      "author": "Parity Technologies <admin@parity.io>",
      "name": "fixed-hash",
      "version": "0.7.0",
      "description": "Macros to define custom fixed-size hash types",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/fixed-hash@0.7.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/fixed-hash/"
        },
        {
          "type": "website",
          "url": "https://github.com/paritytech/parity-common"
        },
        {
          "type": "vcs",
          "url": "https://github.com/paritytech/parity-common"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#flate2@1.1.2",
      "author": "Alex Crichton <alex@alexcrichton.com>, Josh Triplett <josh@joshtriplett.org>",
      "name": "flate2",
      "version": "1.1.2",
      "description": "DEFLATE compression and decompression exposed as Read/BufRead/Write streams. Supports miniz_oxide and multiple zlib implementations. Supports zlib, gzip, and raw deflate streams. ",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/flate2@1.1.2",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/flate2"
        },
        {
          "type": "website",
          "url": "https://github.com/rust-lang/flate2-rs"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rust-lang/flate2-rs"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#fnv@1.0.7",
      "author": "Alex Crichton <alex@alexcrichton.com>",
      "name": "fnv",
      "version": "1.0.7",
      "description": "Fowler–Noll–Vo hash function",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0  OR  MIT"
        }
      ],
      "purl": "pkg:cargo/fnv@1.0.7",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://doc.servo.org/fnv/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/servo/rust-fnv"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#foldhash@0.1.5",
      "author": "Orson Peters <orsonpeters@gmail.com>",
      "name": "foldhash",
      "version": "0.1.5",
      "description": "A fast, non-cryptographic, minimally DoS-resistant hashing algorithm.",
      "scope": "required",
      "licenses": [
        {
          "expression": "Zlib"
        }
      ],
      "purl": "pkg:cargo/foldhash@0.1.5",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/orlp/foldhash"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#form_urlencoded@1.2.1",
      "author": "The rust-url developers",
      "name": "form_urlencoded",
      "version": "1.2.1",
      "description": "Parser and serializer for the application/x-www-form-urlencoded syntax, as used by HTML forms.",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/form_urlencoded@1.2.1",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/servo/rust-url"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#fs_extra@1.3.0",
      "author": "Denis Kurilenko <webdesus@gmail.com>",
      "name": "fs_extra",
      "version": "1.3.0",
      "description": "Expanding std::fs and std::io. Recursively copy folders with information about process and much more.",
      "scope": "excluded",
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/fs_extra@1.3.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/fs_extra"
        },
        {
          "type": "website",
          "url": "https://github.com/webdesus/fs_extra"
        },
        {
          "type": "vcs",
          "url": "https://github.com/webdesus/fs_extra"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#funty@1.1.0",
      "author": "myrrlyn <self@myrrlyn.dev>",
      "name": "funty",
      "version": "1.1.0",
      "description": "Trait generalization over the primitive types",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/funty@1.1.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/funty"
        },
        {
          "type": "vcs",
          "url": "https://github.com/myrrlyn/funty"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#futures-channel@0.3.31",
      "name": "futures-channel",
      "version": "0.3.31",
      "description": "Channels for asynchronous communication using futures-rs. ",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/futures-channel@0.3.31",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://rust-lang.github.io/futures-rs"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rust-lang/futures-rs"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#futures-core@0.3.31",
      "name": "futures-core",
      "version": "0.3.31",
      "description": "The core traits and types in for the `futures` library. ",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/futures-core@0.3.31",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://rust-lang.github.io/futures-rs"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rust-lang/futures-rs"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#futures-executor@0.3.31",
      "name": "futures-executor",
      "version": "0.3.31",
      "description": "Executors for asynchronous tasks based on the futures-rs library. ",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/futures-executor@0.3.31",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://rust-lang.github.io/futures-rs"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rust-lang/futures-rs"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#futures-io@0.3.31",
      "name": "futures-io",
      "version": "0.3.31",
      "description": "The `AsyncRead`, `AsyncWrite`, `AsyncSeek`, and `AsyncBufRead` traits for the futures-rs library. ",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/futures-io@0.3.31",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://rust-lang.github.io/futures-rs"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rust-lang/futures-rs"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#futures-macro@0.3.31",
      "name": "futures-macro",
      "version": "0.3.31",
      "description": "The futures-rs procedural macro implementations. ",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/futures-macro@0.3.31",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://rust-lang.github.io/futures-rs"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rust-lang/futures-rs"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#futures-sink@0.3.31",
      "name": "futures-sink",
      "version": "0.3.31",
      "description": "The asynchronous `Sink` trait for the futures-rs library. ",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/futures-sink@0.3.31",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://rust-lang.github.io/futures-rs"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rust-lang/futures-rs"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#futures-task@0.3.31",
      "name": "futures-task",
      "version": "0.3.31",
      "description": "Tools for working with tasks. ",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/futures-task@0.3.31",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://rust-lang.github.io/futures-rs"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rust-lang/futures-rs"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#futures-util@0.3.31",
      "name": "futures-util",
      "version": "0.3.31",
      "description": "Common utilities and extension traits for the futures-rs library. ",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/futures-util@0.3.31",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://rust-lang.github.io/futures-rs"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rust-lang/futures-rs"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#futures@0.3.31",
      "name": "futures",
      "version": "0.3.31",
      "description": "An implementation of futures and streams featuring zero allocations, composability, and iterator-like interfaces. ",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/futures@0.3.31",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://rust-lang.github.io/futures-rs"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rust-lang/futures-rs"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#generic-array@0.14.7",
      "author": "Bartłomiej Kamiński <fizyk20@gmail.com>, Aaron Trent <novacrazy@gmail.com>",
      "name": "generic-array",
      "version": "0.14.7",
      "description": "Generic types implementing functionality of arrays",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/generic-array@0.14.7",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "http://fizyk20.github.io/generic-array/generic_array/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/fizyk20/generic-array.git"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#getrandom@0.2.16",
      "author": "The Rand Project Developers",
      "name": "getrandom",
      "version": "0.2.16",
      "description": "A small cross-platform library for retrieving random data from system source",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/getrandom@0.2.16",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/getrandom"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rust-random/getrandom"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#getrandom@0.3.3",
      "author": "The Rand Project Developers",
      "name": "getrandom",
      "version": "0.3.3",
      "description": "A small cross-platform library for retrieving random data from system source",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/getrandom@0.3.3",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/getrandom"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rust-random/getrandom"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#ghash@0.5.1",
      "author": "RustCrypto Developers",
      "name": "ghash",
      "version": "0.5.1",
      "description": "Universal hash over GF(2^128) useful for constructing a Message Authentication Code (MAC), as in the AES-GCM authenticated encryption cipher. ",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/ghash@0.5.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/ghash"
        },
        {
          "type": "vcs",
          "url": "https://github.com/RustCrypto/universal-hashes"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#group@0.13.0",
      "author": "Sean Bowe <ewillbefull@gmail.com>, Jack Grigg <jack@z.cash>",
      "name": "group",
      "version": "0.13.0",
      "description": "Elliptic curve group traits and utilities",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/group@0.13.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/group/"
        },
        {
          "type": "website",
          "url": "https://github.com/zkcrypto/group"
        },
        {
          "type": "vcs",
          "url": "https://github.com/zkcrypto/group"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#h2@0.3.27",
      "author": "Carl Lerche <me@carllerche.com>, Sean McArthur <sean@seanmonstar.com>",
      "name": "h2",
      "version": "0.3.27",
      "description": "An HTTP/2 client and server",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/h2@0.3.27",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/h2"
        },
        {
          "type": "vcs",
          "url": "https://github.com/hyperium/h2"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#h2@0.4.12",
      "author": "Carl Lerche <me@carllerche.com>, Sean McArthur <sean@seanmonstar.com>",
      "name": "h2",
      "version": "0.4.12",
      "description": "An HTTP/2 client and server",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/h2@0.4.12",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/h2"
        },
        {
          "type": "vcs",
          "url": "https://github.com/hyperium/h2"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#half@1.8.3",
      "author": "Kathryn Long <squeeself@gmail.com>",
      "name": "half",
      "version": "1.8.3",
      "description": "Half-precision floating point f16 and bf16 types for Rust implementing the IEEE 754-2008 standard binary16 and bfloat16 types.",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/half@1.8.3",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/starkat99/half-rs"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#half@2.6.0",
      "author": "Kathryn Long <squeeself@gmail.com>",
      "name": "half",
      "version": "2.6.0",
      "description": "Half-precision floating point f16 and bf16 types for Rust implementing the IEEE 754-2008 standard binary16 and bfloat16 types.",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/half@2.6.0",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/VoidStarKat/half-rs"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#hashbrown@0.11.2",
      "author": "Amanieu d'Antras <amanieu@gmail.com>",
      "name": "hashbrown",
      "version": "0.11.2",
      "description": "A Rust port of Google's SwissTable hash map",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/hashbrown@0.11.2",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/rust-lang/hashbrown"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#hashbrown@0.12.3",
      "author": "Amanieu d'Antras <amanieu@gmail.com>",
      "name": "hashbrown",
      "version": "0.12.3",
      "description": "A Rust port of Google's SwissTable hash map",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/hashbrown@0.12.3",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/rust-lang/hashbrown"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#hashbrown@0.13.2",
      "author": "Amanieu d'Antras <amanieu@gmail.com>",
      "name": "hashbrown",
      "version": "0.13.2",
      "description": "A Rust port of Google's SwissTable hash map",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/hashbrown@0.13.2",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/rust-lang/hashbrown"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#hashbrown@0.14.5",
      "author": "Amanieu d'Antras <amanieu@gmail.com>",
      "name": "hashbrown",
      "version": "0.14.5",
      "description": "A Rust port of Google's SwissTable hash map",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/hashbrown@0.14.5",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/rust-lang/hashbrown"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#hashbrown@0.15.5",
      "author": "Amanieu d'Antras <amanieu@gmail.com>",
      "name": "hashbrown",
      "version": "0.15.5",
      "description": "A Rust port of Google's SwissTable hash map",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/hashbrown@0.15.5",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/rust-lang/hashbrown"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#hex@0.4.3",
      "author": "KokaKiwi <kokakiwi@kokakiwi.net>",
      "name": "hex",
      "version": "0.4.3",
      "description": "Encoding and decoding data into/from hexadecimal representation.",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/hex@0.4.3",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/hex/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/KokaKiwi/rust-hex"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#hex_fmt@0.3.0",
      "author": "Andreas Fackler <AndreasFackler@gmx.de>",
      "name": "hex_fmt",
      "version": "0.3.0",
      "description": "Formatting and shortening byte slices as hexadecimal strings",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/hex_fmt@0.3.0",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/poanetwork/hex_fmt"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#highway@1.3.0",
      "author": "Nick Babcock <nbabcock19@hotmail.com>",
      "name": "highway",
      "version": "1.3.0",
      "description": "Native Rust port of Google's HighwayHash, which makes use of SIMD instructions for a fast and strong hash function",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/highway@1.3.0",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/nickbabcock/highway-rs"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#hkdf@0.12.4",
      "author": "RustCrypto Developers",
      "name": "hkdf",
      "version": "0.12.4",
      "description": "HMAC-based Extract-and-Expand Key Derivation Function (HKDF)",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/hkdf@0.12.4",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://github.com/RustCrypto/KDFs/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/RustCrypto/KDFs/"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#hmac@0.12.1",
      "author": "RustCrypto Developers",
      "name": "hmac",
      "version": "0.12.1",
      "description": "Generic implementation of Hash-based Message Authentication Code (HMAC)",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/hmac@0.12.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/hmac"
        },
        {
          "type": "vcs",
          "url": "https://github.com/RustCrypto/MACs"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#http-body-util@0.1.3",
      "author": "Carl Lerche <me@carllerche.com>, Lucio Franco <luciofranco14@gmail.com>, Sean McArthur <sean@seanmonstar.com>",
      "name": "http-body-util",
      "version": "0.1.3",
      "description": "Combinators and adapters for HTTP request or response bodies. ",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/http-body-util@0.1.3",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/http-body-util"
        },
        {
          "type": "vcs",
          "url": "https://github.com/hyperium/http-body"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#http-body@0.4.6",
      "author": "Carl Lerche <me@carllerche.com>, Lucio Franco <luciofranco14@gmail.com>, Sean McArthur <sean@seanmonstar.com>",
      "name": "http-body",
      "version": "0.4.6",
      "description": "Trait representing an asynchronous, streaming, HTTP request or response body. ",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/http-body@0.4.6",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/http-body"
        },
        {
          "type": "vcs",
          "url": "https://github.com/hyperium/http-body"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#http-body@1.0.1",
      "author": "Carl Lerche <me@carllerche.com>, Lucio Franco <luciofranco14@gmail.com>, Sean McArthur <sean@seanmonstar.com>",
      "name": "http-body",
      "version": "1.0.1",
      "description": "Trait representing an asynchronous, streaming, HTTP request or response body. ",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/http-body@1.0.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/http-body"
        },
        {
          "type": "vcs",
          "url": "https://github.com/hyperium/http-body"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#http@0.2.12",
      "author": "Alex Crichton <alex@alexcrichton.com>, Carl Lerche <me@carllerche.com>, Sean McArthur <sean@seanmonstar.com>",
      "name": "http",
      "version": "0.2.12",
      "description": "A set of types for representing HTTP requests and responses. ",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/http@0.2.12",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/http"
        },
        {
          "type": "vcs",
          "url": "https://github.com/hyperium/http"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#http@1.3.1",
      "author": "Alex Crichton <alex@alexcrichton.com>, Carl Lerche <me@carllerche.com>, Sean McArthur <sean@seanmonstar.com>",
      "name": "http",
      "version": "1.3.1",
      "description": "A set of types for representing HTTP requests and responses. ",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/http@1.3.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/http"
        },
        {
          "type": "vcs",
          "url": "https://github.com/hyperium/http"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#httparse@1.10.1",
      "author": "Sean McArthur <sean@seanmonstar.com>",
      "name": "httparse",
      "version": "1.10.1",
      "description": "A tiny, safe, speedy, zero-copy HTTP/1.x parser.",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/httparse@1.10.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/httparse"
        },
        {
          "type": "vcs",
          "url": "https://github.com/seanmonstar/httparse"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#httpdate@1.0.3",
      "author": "Pyfisch <pyfisch@posteo.org>",
      "name": "httpdate",
      "version": "1.0.3",
      "description": "HTTP date parsing and formatting",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/httpdate@1.0.3",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/pyfisch/httpdate"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#hyper-rustls@0.24.2",
      "name": "hyper-rustls",
      "version": "0.24.2",
      "description": "Rustls+hyper integration for pure rust HTTPS",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0 OR ISC OR MIT"
        }
      ],
      "purl": "pkg:cargo/hyper-rustls@0.24.2",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/hyper-rustls/"
        },
        {
          "type": "website",
          "url": "https://github.com/rustls/hyper-rustls"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rustls/hyper-rustls"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#hyper-rustls@0.27.7",
      "name": "hyper-rustls",
      "version": "0.27.7",
      "description": "Rustls+hyper integration for pure rust HTTPS",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0 OR ISC OR MIT"
        }
      ],
      "purl": "pkg:cargo/hyper-rustls@0.27.7",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/hyper-rustls/"
        },
        {
          "type": "website",
          "url": "https://github.com/rustls/hyper-rustls"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rustls/hyper-rustls"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#hyper-tls@0.5.0",
      "author": "Sean McArthur <sean@seanmonstar.com>",
      "name": "hyper-tls",
      "version": "0.5.0",
      "description": "Default TLS implementation for use with hyper",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/hyper-tls@0.5.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/hyper-tls"
        },
        {
          "type": "website",
          "url": "https://hyper.rs"
        },
        {
          "type": "vcs",
          "url": "https://github.com/hyperium/hyper-tls"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#hyper-tls@0.6.0",
      "author": "Sean McArthur <sean@seanmonstar.com>",
      "name": "hyper-tls",
      "version": "0.6.0",
      "description": "Default TLS implementation for use with hyper",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/hyper-tls@0.6.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/hyper-tls"
        },
        {
          "type": "website",
          "url": "https://hyper.rs"
        },
        {
          "type": "vcs",
          "url": "https://github.com/hyperium/hyper-tls"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#hyper-util@0.1.16",
      "author": "Sean McArthur <sean@seanmonstar.com>",
      "name": "hyper-util",
      "version": "0.1.16",
      "description": "hyper utilities",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/hyper-util@0.1.16",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/hyper-util"
        },
        {
          "type": "website",
          "url": "https://hyper.rs"
        },
        {
          "type": "vcs",
          "url": "https://github.com/hyperium/hyper-util"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#hyper@0.14.32",
      "author": "Sean McArthur <sean@seanmonstar.com>",
      "name": "hyper",
      "version": "0.14.32",
      "description": "A fast and correct HTTP library.",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/hyper@0.14.32",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/hyper"
        },
        {
          "type": "website",
          "url": "https://hyper.rs"
        },
        {
          "type": "vcs",
          "url": "https://github.com/hyperium/hyper"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#hyper@1.6.0",
      "author": "Sean McArthur <sean@seanmonstar.com>",
      "name": "hyper",
      "version": "1.6.0",
      "description": "A protective and efficient HTTP library for all.",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/hyper@1.6.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/hyper"
        },
        {
          "type": "website",
          "url": "https://hyper.rs"
        },
        {
          "type": "vcs",
          "url": "https://github.com/hyperium/hyper"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#iana-time-zone@0.1.63",
      "author": "Andrew Straw <strawman@astraw.com>, René Kijewski <rene.kijewski@fu-berlin.de>, Ryan Lopopolo <rjl@hyperbo.la>",
      "name": "iana-time-zone",
      "version": "0.1.63",
      "description": "get the IANA time zone for the current system",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/iana-time-zone@0.1.63",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/strawlab/iana-time-zone"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#icu_collections@2.0.0",
      "author": "The ICU4X Project Developers",
      "name": "icu_collections",
      "version": "2.0.0",
      "description": "Collection of API for use in ICU libraries.",
      "scope": "required",
      "licenses": [
        {
          "expression": "Unicode-3.0"
        }
      ],
      "purl": "pkg:cargo/icu_collections@2.0.0",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://icu4x.unicode.org"
        },
        {
          "type": "vcs",
          "url": "https://github.com/unicode-org/icu4x"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#icu_locale_core@2.0.0",
      "author": "The ICU4X Project Developers",
      "name": "icu_locale_core",
      "version": "2.0.0",
      "description": "API for managing Unicode Language and Locale Identifiers",
      "scope": "required",
      "licenses": [
        {
          "expression": "Unicode-3.0"
        }
      ],
      "purl": "pkg:cargo/icu_locale_core@2.0.0",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://icu4x.unicode.org"
        },
        {
          "type": "vcs",
          "url": "https://github.com/unicode-org/icu4x"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#icu_normalizer@2.0.0",
      "author": "The ICU4X Project Developers",
      "name": "icu_normalizer",
      "version": "2.0.0",
      "description": "API for normalizing text into Unicode Normalization Forms",
      "scope": "required",
      "licenses": [
        {
          "expression": "Unicode-3.0"
        }
      ],
      "purl": "pkg:cargo/icu_normalizer@2.0.0",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://icu4x.unicode.org"
        },
        {
          "type": "vcs",
          "url": "https://github.com/unicode-org/icu4x"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#icu_normalizer_data@2.0.0",
      "author": "The ICU4X Project Developers",
      "name": "icu_normalizer_data",
      "version": "2.0.0",
      "description": "Data for the icu_normalizer crate",
      "scope": "required",
      "licenses": [
        {
          "expression": "Unicode-3.0"
        }
      ],
      "purl": "pkg:cargo/icu_normalizer_data@2.0.0",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://icu4x.unicode.org"
        },
        {
          "type": "vcs",
          "url": "https://github.com/unicode-org/icu4x"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#icu_properties@2.0.1",
      "author": "The ICU4X Project Developers",
      "name": "icu_properties",
      "version": "2.0.1",
      "description": "Definitions for Unicode properties",
      "scope": "required",
      "licenses": [
        {
          "expression": "Unicode-3.0"
        }
      ],
      "purl": "pkg:cargo/icu_properties@2.0.1",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://icu4x.unicode.org"
        },
        {
          "type": "vcs",
          "url": "https://github.com/unicode-org/icu4x"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#icu_properties_data@2.0.1",
      "author": "The ICU4X Project Developers",
      "name": "icu_properties_data",
      "version": "2.0.1",
      "description": "Data for the icu_properties crate",
      "scope": "required",
      "licenses": [
        {
          "expression": "Unicode-3.0"
        }
      ],
      "purl": "pkg:cargo/icu_properties_data@2.0.1",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://icu4x.unicode.org"
        },
        {
          "type": "vcs",
          "url": "https://github.com/unicode-org/icu4x"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#icu_provider@2.0.0",
      "author": "The ICU4X Project Developers",
      "name": "icu_provider",
      "version": "2.0.0",
      "description": "Trait and struct definitions for the ICU data provider",
      "scope": "required",
      "licenses": [
        {
          "expression": "Unicode-3.0"
        }
      ],
      "purl": "pkg:cargo/icu_provider@2.0.0",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://icu4x.unicode.org"
        },
        {
          "type": "vcs",
          "url": "https://github.com/unicode-org/icu4x"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#ident_case@1.0.1",
      "author": "Ted Driggs <ted.driggs@outlook.com>",
      "name": "ident_case",
      "version": "1.0.1",
      "description": "Utility for applying case rules to Rust identifiers.",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/ident_case@1.0.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/ident_case/1.0.1"
        },
        {
          "type": "vcs",
          "url": "https://github.com/TedDriggs/ident_case"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#idna@1.0.3",
      "author": "The rust-url developers",
      "name": "idna",
      "version": "1.0.3",
      "description": "IDNA (Internationalizing Domain Names in Applications) and Punycode.",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/idna@1.0.3",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/servo/rust-url/"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#idna_adapter@1.2.1",
      "author": "The rust-url developers",
      "name": "idna_adapter",
      "version": "1.2.1",
      "description": "Back end adapter for idna",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/idna_adapter@1.2.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/idna_adapter/latest/idna_adapter/"
        },
        {
          "type": "website",
          "url": "https://docs.rs/crate/idna_adapter/latest"
        },
        {
          "type": "vcs",
          "url": "https://github.com/hsivonen/idna_adapter"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#im@15.1.0",
      "author": "Bodil Stokke <bodil@bodil.org>",
      "name": "im",
      "version": "15.1.0",
      "description": "Immutable collection datatypes",
      "scope": "required",
      "licenses": [
        {
          "expression": "MPL-2.0+"
        }
      ],
      "purl": "pkg:cargo/im@15.1.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "http://immutable.rs/"
        },
        {
          "type": "website",
          "url": "http://immutable.rs/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/bodil/im-rs"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#indexmap@1.9.3",
      "name": "indexmap",
      "version": "1.9.3",
      "description": "A hash table with consistent order and fast iteration.",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/indexmap@1.9.3",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/indexmap/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/bluss/indexmap"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#indexmap@2.10.0",
      "name": "indexmap",
      "version": "2.10.0",
      "description": "A hash table with consistent order and fast iteration.",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/indexmap@2.10.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/indexmap/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/indexmap-rs/indexmap"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#indoc@2.0.6",
      "author": "David Tolnay <dtolnay@gmail.com>",
      "name": "indoc",
      "version": "2.0.6",
      "description": "Indented document literals",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/indoc@2.0.6",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/indoc"
        },
        {
          "type": "vcs",
          "url": "https://github.com/dtolnay/indoc"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#inout@0.1.4",
      "author": "RustCrypto Developers",
      "name": "inout",
      "version": "0.1.4",
      "description": "Custom reference types for code generic over in-place and buffer-to-buffer modes of operation.",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/inout@0.1.4",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/inout"
        },
        {
          "type": "vcs",
          "url": "https://github.com/RustCrypto/utils"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#ipnet@2.11.0",
      "author": "Kris Price <kris@krisprice.nz>",
      "name": "ipnet",
      "version": "2.11.0",
      "description": "Provides types and useful methods for working with IPv4 and IPv6 network addresses, commonly called IP prefixes. The new `IpNet`, `Ipv4Net`, and `Ipv6Net` types build on the existing `IpAddr`, `Ipv4Addr`, and `Ipv6Addr` types already provided in Rust's standard library and align to their design to stay consistent. The module also provides useful traits that extend `Ipv4Addr` and `Ipv6Addr` with methods for `Add`, `Sub`, `BitAnd`, and `BitOr` operations. The module only uses stable feature so it is guaranteed to compile using the stable toolchain.",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/ipnet@2.11.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/ipnet"
        },
        {
          "type": "vcs",
          "url": "https://github.com/krisprice/ipnet"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#iref-core@3.2.2",
      "author": "Timothée Haudebourg <author@haudebourg.net>",
      "name": "iref-core",
      "version": "3.2.2",
      "description": "Uniform & Internationalized Resource Identifiers (URIs/IRIs), borrowed and owned.",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/iref-core@3.2.2",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/iref"
        },
        {
          "type": "vcs",
          "url": "https://github.com/timothee-haudebourg/iref"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#iref@3.2.2",
      "author": "Timothée Haudebourg <author@haudebourg.net>",
      "name": "iref",
      "version": "3.2.2",
      "description": "Uniform & Internationalized Resource Identifiers (URIs/IRIs), borrowed and owned.",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/iref@3.2.2",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/iref"
        },
        {
          "type": "vcs",
          "url": "https://github.com/timothee-haudebourg/iref"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#iri-string@0.7.8",
      "author": "YOSHIOKA Takuma <nop_thread@nops.red>",
      "name": "iri-string",
      "version": "0.7.8",
      "description": "IRI as string types",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/iri-string@0.7.8",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/lo48576/iri-string"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#itoa@1.0.15",
      "author": "David Tolnay <dtolnay@gmail.com>",
      "name": "itoa",
      "version": "1.0.15",
      "description": "Fast integer primitive to string conversion",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/itoa@1.0.15",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/itoa"
        },
        {
          "type": "vcs",
          "url": "https://github.com/dtolnay/itoa"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#jobserver@0.1.33",
      "author": "Alex Crichton <alex@alexcrichton.com>",
      "name": "jobserver",
      "version": "0.1.33",
      "description": "An implementation of the GNU Make jobserver for Rust. ",
      "scope": "excluded",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/jobserver@0.1.33",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/jobserver"
        },
        {
          "type": "website",
          "url": "https://github.com/rust-lang/jobserver-rs"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rust-lang/jobserver-rs"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#js-sys@0.3.77",
      "author": "The wasm-bindgen Developers",
      "name": "js-sys",
      "version": "0.3.77",
      "description": "Bindings for all JS global objects and functions in all JS environments like Node.js and browsers, built on `#[wasm_bindgen]` using the `wasm-bindgen` crate. ",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/js-sys@0.3.77",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/js-sys"
        },
        {
          "type": "website",
          "url": "https://rustwasm.github.io/wasm-bindgen/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rustwasm/wasm-bindgen/tree/master/crates/js-sys"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#json-ld-compaction@0.21.2",
      "author": "Timothée Haudebourg <timothee@haudebourg.net>",
      "name": "json-ld-compaction",
      "version": "0.21.2",
      "description": "JSON-LD document compaction implementation",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/json-ld-compaction@0.21.2",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/json-ld-compaction"
        },
        {
          "type": "vcs",
          "url": "https://github.com/timothee-haudebourg/json-ld"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#json-ld-context-processing@0.21.2",
      "author": "Timothée Haudebourg <timothee@haudebourg.net>",
      "name": "json-ld-context-processing",
      "version": "0.21.2",
      "description": "JSON-LD context processing implementation",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/json-ld-context-processing@0.21.2",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/json-ld-context-processing"
        },
        {
          "type": "vcs",
          "url": "https://github.com/timothee-haudebourg/json-ld"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#json-ld-core@0.21.2",
      "author": "Timothée Haudebourg <timothee@haudebourg.net>",
      "name": "json-ld-core",
      "version": "0.21.2",
      "description": "JSON-LD core types and traits",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/json-ld-core@0.21.2",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/json-ld-core"
        },
        {
          "type": "vcs",
          "url": "https://github.com/timothee-haudebourg/json-ld"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#json-ld-expansion@0.21.2",
      "author": "Timothée Haudebourg <timothee@haudebourg.net>",
      "name": "json-ld-expansion",
      "version": "0.21.2",
      "description": "JSON-LD document expansion implementation",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/json-ld-expansion@0.21.2",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/json-ld-expansion"
        },
        {
          "type": "vcs",
          "url": "https://github.com/timothee-haudebourg/json-ld"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#json-ld-serialization@0.21.2",
      "author": "Timothée Haudebourg <timothee@haudebourg.net>",
      "name": "json-ld-serialization",
      "version": "0.21.2",
      "description": "JSON-LD serialization",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/json-ld-serialization@0.21.2",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/json-ld-serialization"
        },
        {
          "type": "vcs",
          "url": "https://github.com/timothee-haudebourg/json-ld"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#json-ld-syntax@0.21.2",
      "author": "Timothée Haudebourg <timothee@haudebourg.net>",
      "name": "json-ld-syntax",
      "version": "0.21.2",
      "description": "JSON-LD syntax",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/json-ld-syntax@0.21.2",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/json-ld-syntax"
        },
        {
          "type": "vcs",
          "url": "https://github.com/timothee-haudebourg/json-ld"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#json-ld@0.21.2",
      "author": "Timothée Haudebourg <timothee@haudebourg.net>",
      "name": "json-ld",
      "version": "0.21.2",
      "description": "JSON-LD implementation",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/json-ld@0.21.2",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/json-ld"
        },
        {
          "type": "vcs",
          "url": "https://github.com/timothee-haudebourg/json-ld"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#json-number@0.4.9",
      "author": "Timothée Haudebourg <author@haudebourg.net>",
      "name": "json-number",
      "version": "0.4.9",
      "description": "JSON number parsing and storage",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/json-number@0.4.9",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/json-number"
        },
        {
          "type": "vcs",
          "url": "https://github.com/timothee-haudebourg/json-number"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#json-patch@0.2.7",
      "author": "Ivan Dubrov <dubrov.ivan@gmail.com>",
      "name": "json-patch",
      "version": "0.2.7",
      "description": "RFC 6902, JavaScript Object Notation (JSON) Patch",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/json-patch@0.2.7",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/idubrov/json-patch"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#json-syntax@0.12.5",
      "author": "Timothée Haudebourg <author@haudebourg.net>",
      "name": "json-syntax",
      "version": "0.12.5",
      "description": "Strict JSON parsing and mapping library",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/json-syntax@0.12.5",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/json-syntax"
        },
        {
          "type": "vcs",
          "url": "https://github.com/timothee-haudebourg/json-syntax"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#k256@0.13.4",
      "author": "RustCrypto Developers",
      "name": "k256",
      "version": "0.13.4",
      "description": "secp256k1 elliptic curve library written in pure Rust with support for ECDSA signing/verification/public-key recovery, Taproot Schnorr signatures (BIP340), Elliptic Curve Diffie-Hellman (ECDH), and general-purpose secp256k1 elliptic curve group operations which can be used to implement arbitrary protocols ",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/k256@0.13.4",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/k256"
        },
        {
          "type": "vcs",
          "url": "https://github.com/RustCrypto/elliptic-curves/tree/master/k256"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#keccak-hash@0.7.0",
      "author": "Parity Technologies <admin@parity.io>",
      "name": "keccak-hash",
      "version": "0.7.0",
      "description": "`keccak-hash` is a set of utility functions to facilitate working with Keccak hashes (256/512 bits long).",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/keccak-hash@0.7.0",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/paritytech/parity-common"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#keccak@0.1.5",
      "author": "RustCrypto Developers",
      "name": "keccak",
      "version": "0.1.5",
      "description": "Pure Rust implementation of the Keccak sponge function including the keccak-f and keccak-p variants ",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/keccak@0.1.5",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/keccak"
        },
        {
          "type": "vcs",
          "url": "https://github.com/RustCrypto/sponges/tree/master/keccak"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#keyring@3.6.3",
      "author": "Walther Chen <walther.chen@gmail.com>, Daniel Brotsky <dev@brotsky.com>",
      "name": "keyring",
      "version": "3.6.3",
      "description": "Cross-platform library for managing passwords/credentials",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/keyring@3.6.3",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://github.com/hwchen/keyring-rs"
        },
        {
          "type": "vcs",
          "url": "https://github.com/hwchen/keyring-rs.git"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#langtag@0.4.0",
      "author": "Timothée Haudebourg <author@haudebourg.net>",
      "name": "langtag",
      "version": "0.4.0",
      "description": "Language tags implementation following RFC 5646",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/langtag@0.4.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/langtag"
        },
        {
          "type": "vcs",
          "url": "https://github.com/timothee-haudebourg/langtag"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#lazy_static@1.5.0",
      "author": "Marvin Löbel <loebel.marvin@gmail.com>",
      "name": "lazy_static",
      "version": "1.5.0",
      "description": "A macro for declaring lazily evaluated statics in Rust.",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/lazy_static@1.5.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/lazy_static"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rust-lang-nursery/lazy-static.rs"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#lexical-core@1.0.5",
      "author": "Alex Huszagh <ahuszagh@gmail.com>",
      "name": "lexical-core",
      "version": "1.0.5",
      "description": "Lexical, to- and from-string conversion routines.",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/lexical-core@1.0.5",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/Alexhuszagh/rust-lexical"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#lexical-parse-float@1.0.5",
      "author": "Alex Huszagh <ahuszagh@gmail.com>",
      "name": "lexical-parse-float",
      "version": "1.0.5",
      "description": "Efficient parsing of floats from strings.",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/lexical-parse-float@1.0.5",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/Alexhuszagh/rust-lexical"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#lexical-parse-integer@1.0.5",
      "author": "Alex Huszagh <ahuszagh@gmail.com>",
      "name": "lexical-parse-integer",
      "version": "1.0.5",
      "description": "Efficient parsing of integers from strings.",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/lexical-parse-integer@1.0.5",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/Alexhuszagh/rust-lexical"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#lexical-util@1.0.6",
      "author": "Alex Huszagh <ahuszagh@gmail.com>",
      "name": "lexical-util",
      "version": "1.0.6",
      "description": "Shared utilities for lexical creates.",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/lexical-util@1.0.6",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/Alexhuszagh/rust-lexical"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#lexical-write-float@1.0.5",
      "author": "Alex Huszagh <ahuszagh@gmail.com>",
      "name": "lexical-write-float",
      "version": "1.0.5",
      "description": "Efficient formatting of floats to strings.",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/lexical-write-float@1.0.5",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/Alexhuszagh/rust-lexical"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#lexical-write-integer@1.0.5",
      "author": "Alex Huszagh <ahuszagh@gmail.com>",
      "name": "lexical-write-integer",
      "version": "1.0.5",
      "description": "Efficient formatting of integers to strings.",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/lexical-write-integer@1.0.5",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/Alexhuszagh/rust-lexical"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#lexical@7.0.4",
      "author": "Alex Huszagh <ahuszagh@gmail.com>",
      "name": "lexical",
      "version": "7.0.4",
      "description": "Lexical, to- and from-string conversion routines.",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/lexical@7.0.4",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/Alexhuszagh/rust-lexical"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#libc@0.2.175",
      "author": "The Rust Project Developers",
      "name": "libc",
      "version": "0.2.175",
      "description": "Raw FFI bindings to platform libraries like libc.",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/libc@0.2.175",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/rust-lang/libc"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#libipld-cbor-derive@0.14.0",
      "author": "David Craven <david@craven.ch>",
      "name": "libipld-cbor-derive",
      "version": "0.14.0",
      "description": "ipld cbor codec proc macro",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/libipld-cbor-derive@0.14.0",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/ipfs-rust/rust-ipld"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#libipld-cbor@0.14.0",
      "author": "David Craven <david@craven.ch>",
      "name": "libipld-cbor",
      "version": "0.14.0",
      "description": "ipld cbor codec",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/libipld-cbor@0.14.0",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/ipfs-rust/rust-ipld"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#libipld-core@0.14.0",
      "author": "David Craven <david@craven.ch>",
      "name": "libipld-core",
      "version": "0.14.0",
      "description": "Base traits and definitions used by ipld codecs.",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/libipld-core@0.14.0",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/ipfs-rust/rust-ipld"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#libipld-json@0.14.0",
      "author": "Irakli Gozalishvili <contact@gozala.io>",
      "name": "libipld-json",
      "version": "0.14.0",
      "description": "ipld json codec",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/libipld-json@0.14.0",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/ipfs-rust/rust-ipld"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#libipld-macro@0.14.0",
      "author": "David Craven <david@craven.ch>",
      "name": "libipld-macro",
      "version": "0.14.0",
      "description": "ipld macro",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/libipld-macro@0.14.0",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/ipfs-rust/rust-ipld"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#libipld@0.14.0",
      "author": "David Craven <david@craven.ch>",
      "name": "libipld",
      "version": "0.14.0",
      "description": "library for dealing with ipld",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/libipld@0.14.0",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/ipld/libipld"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#libm@0.2.15",
      "author": "Jorge Aparicio <jorge@japaric.io>",
      "name": "libm",
      "version": "0.2.15",
      "description": "libm in pure Rust",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/libm@0.2.15",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/libm"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rust-lang/compiler-builtins"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#linked-data-derive@0.1.0",
      "author": "Spruce Systems, Inc.",
      "name": "linked-data-derive",
      "version": "0.1.0",
      "description": "Derive macros for the `linked-data` crate",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/linked-data-derive@0.1.0",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/spruceid/linked-data-rs"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#linked-data@0.1.2",
      "author": "Spruce Systems, Inc.",
      "name": "linked-data",
      "version": "0.1.2",
      "description": "Linked-Data dateset serialization/deserialization traits",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/linked-data@0.1.2",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/spruceid/linked-data-rs"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#litemap@0.8.0",
      "author": "The ICU4X Project Developers",
      "name": "litemap",
      "version": "0.8.0",
      "description": "A key-value Map implementation based on a flat, sorted Vec.",
      "scope": "required",
      "licenses": [
        {
          "expression": "Unicode-3.0"
        }
      ],
      "purl": "pkg:cargo/litemap@0.8.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/litemap"
        },
        {
          "type": "vcs",
          "url": "https://github.com/unicode-org/icu4x"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#litrs@0.4.2",
      "author": "Lukas Kalbertodt <lukas.kalbertodt@gmail.com>",
      "name": "litrs",
      "version": "0.4.2",
      "description": "Parse and inspect Rust literals (i.e. tokens in the Rust programming language representing fixed values). Particularly useful for proc macros, but can also be used outside of a proc-macro context. ",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/litrs@0.4.2",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/litrs/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/LukasKalbertodt/litrs/"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#lock_api@0.4.13",
      "author": "Amanieu d'Antras <amanieu@gmail.com>",
      "name": "lock_api",
      "version": "0.4.13",
      "description": "Wrappers to create fully-featured Mutex and RwLock types. Compatible with no_std.",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/lock_api@0.4.13",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/Amanieu/parking_lot"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#locspan-derive@0.6.0",
      "author": "Timothée Haudebourg <author@haudebourg.net>",
      "name": "locspan-derive",
      "version": "0.6.0",
      "description": "Derive macros for the `locspan` code mapping library",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/locspan-derive@0.6.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/locspan-derive"
        },
        {
          "type": "vcs",
          "url": "https://github.com/timothee-haudebourg/locspan-derive"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#locspan@0.8.2",
      "author": "Timothée Haudebourg <author@haudebourg.net>",
      "name": "locspan",
      "version": "0.8.2",
      "description": "Code mapping utility types and traits.",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/locspan@0.8.2",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/locspan"
        },
        {
          "type": "vcs",
          "url": "https://github.com/timothee-haudebourg/locspan"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#log@0.4.27",
      "author": "The Rust Project Developers",
      "name": "log",
      "version": "0.4.27",
      "description": "A lightweight logging facade for Rust ",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/log@0.4.27",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/log"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rust-lang/log"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#lru-slab@0.1.2",
      "author": "Benjamin Saunders <ben.e.saunders@gmail.com>",
      "name": "lru-slab",
      "version": "0.1.2",
      "description": "Pre-allocated storage with constant-time LRU tracking",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0 OR Zlib"
        }
      ],
      "purl": "pkg:cargo/lru-slab@0.1.2",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/Ralith/lru-slab"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#matchers@0.1.0",
      "author": "Eliza Weisman <eliza@buoyant.io>",
      "name": "matchers",
      "version": "0.1.0",
      "description": "Regex matching on character and byte streams. ",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/matchers@0.1.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/matchers/"
        },
        {
          "type": "website",
          "url": "https://github.com/hawkw/matchers"
        },
        {
          "type": "vcs",
          "url": "https://github.com/hawkw/matchers"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#memchr@2.7.5",
      "author": "Andrew Gallant <jamslam@gmail.com>, bluss",
      "name": "memchr",
      "version": "2.7.5",
      "description": "Provides extremely fast (uses SIMD on x86_64, aarch64 and wasm32) routines for 1, 2 or 3 byte search and single substring search. ",
      "scope": "required",
      "licenses": [
        {
          "expression": "Unlicense OR MIT"
        }
      ],
      "purl": "pkg:cargo/memchr@2.7.5",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/memchr/"
        },
        {
          "type": "website",
          "url": "https://github.com/BurntSushi/memchr"
        },
        {
          "type": "vcs",
          "url": "https://github.com/BurntSushi/memchr"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#mime@0.3.17",
      "author": "Sean McArthur <sean@seanmonstar.com>",
      "name": "mime",
      "version": "0.3.17",
      "description": "Strongly Typed Mimes",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/mime@0.3.17",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/mime"
        },
        {
          "type": "vcs",
          "url": "https://github.com/hyperium/mime"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#minimal-lexical@0.2.1",
      "author": "Alex Huszagh <ahuszagh@gmail.com>",
      "name": "minimal-lexical",
      "version": "0.2.1",
      "description": "Fast float parsing conversion routines.",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/minimal-lexical@0.2.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/minimal-lexical"
        },
        {
          "type": "vcs",
          "url": "https://github.com/Alexhuszagh/minimal-lexical"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#miniz_oxide@0.8.9",
      "author": "Frommi <daniil.liferenko@gmail.com>, oyvindln <oyvindln@users.noreply.github.com>, Rich Geldreich richgel99@gmail.com",
      "name": "miniz_oxide",
      "version": "0.8.9",
      "description": "DEFLATE compression and decompression library rewritten in Rust based on miniz",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Zlib OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/miniz_oxide@0.8.9",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/miniz_oxide"
        },
        {
          "type": "website",
          "url": "https://github.com/Frommi/miniz_oxide/tree/master/miniz_oxide"
        },
        {
          "type": "vcs",
          "url": "https://github.com/Frommi/miniz_oxide/tree/master/miniz_oxide"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#mio@1.0.4",
      "author": "Carl Lerche <me@carllerche.com>, Thomas de Zeeuw <thomasdezeeuw@gmail.com>, Tokio Contributors <team@tokio.rs>",
      "name": "mio",
      "version": "1.0.4",
      "description": "Lightweight non-blocking I/O.",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/mio@1.0.4",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://github.com/tokio-rs/mio"
        },
        {
          "type": "vcs",
          "url": "https://github.com/tokio-rs/mio"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#moka@0.12.10",
      "name": "moka",
      "version": "0.12.10",
      "description": "A fast and concurrent cache library inspired by Java Caffeine",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/moka@0.12.10",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/moka/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/moka-rs/moka"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#mown@0.2.2",
      "author": "Timothée Haudebourg <author@haudebourg.net>",
      "name": "mown",
      "version": "0.2.2",
      "description": "Maybe owned values. Wrappers for values that can be either owned or borrowed.",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/mown@0.2.2",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/mown"
        },
        {
          "type": "vcs",
          "url": "https://github.com/timothee-haudebourg/mown"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#multibase@0.8.0",
      "author": "Friedel Ziegelmayer <dignifiedquire@gmail.com>",
      "name": "multibase",
      "version": "0.8.0",
      "description": "multibase in rust",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/multibase@0.8.0",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://github.com/multiformats/rust-multibase"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#multibase@0.9.1",
      "author": "Friedel Ziegelmayer <dignifiedquire@gmail.com>",
      "name": "multibase",
      "version": "0.9.1",
      "description": "multibase in rust",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/multibase@0.9.1",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://github.com/multiformats/rust-multibase"
        },
        {
          "type": "vcs",
          "url": "https://github.com/multiformats/rust-multibase"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#multihash-derive@0.8.1",
      "author": "David Craven <david@craven.ch>",
      "name": "multihash-derive",
      "version": "0.8.1",
      "description": "Proc macro for deriving custom multihash tables.",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/multihash-derive@0.8.1",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/multiformats/multihash"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#multihash@0.16.3",
      "author": "dignifiedquire <dignifiedquire@gmail.com>, David Craven <david@craven.ch>, Volker Mische <volker.mische@gmail.com>",
      "name": "multihash",
      "version": "0.16.3",
      "description": "Implementation of the multihash format",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/multihash@0.16.3",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/multihash/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/multiformats/rust-multihash"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#multihash@0.19.3",
      "author": "dignifiedquire <dignifiedquire@gmail.com>, David Craven <david@craven.ch>, Volker Mische <volker.mische@gmail.com>",
      "name": "multihash",
      "version": "0.19.3",
      "description": "Implementation of the multihash format",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/multihash@0.19.3",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/multihash/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/multiformats/rust-multihash"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#native-tls@0.2.14",
      "author": "Steven Fackler <sfackler@gmail.com>",
      "name": "native-tls",
      "version": "0.2.14",
      "description": "A wrapper over a platform's native TLS implementation",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/native-tls@0.2.14",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/sfackler/rust-native-tls"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#nom@7.1.3",
      "author": "contact@geoffroycouprie.com",
      "name": "nom",
      "version": "7.1.3",
      "description": "A byte-oriented, zero-copy, parser combinators library",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/nom@7.1.3",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/nom"
        },
        {
          "type": "vcs",
          "url": "https://github.com/Geal/nom"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#nu-ansi-term@0.46.0",
      "author": "ogham@bsago.me, Ryan Scheel (Havvy) <ryan.havvy@gmail.com>, Josh Triplett <josh@joshtriplett.org>, The Nushell Project Developers",
      "name": "nu-ansi-term",
      "version": "0.46.0",
      "description": "Library for ANSI terminal colors and styles (bold, underline)",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/nu-ansi-term@0.46.0",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/nushell/nu-ansi-term"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#num-bigint-dig@0.8.4",
      "author": "dignifiedquire <dignifiedquire@gmail.com>, The Rust Project Developers",
      "name": "num-bigint-dig",
      "version": "0.8.4",
      "description": "Big integer implementation for Rust",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/num-bigint-dig@0.8.4",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/num-bigint-dig"
        },
        {
          "type": "website",
          "url": "https://github.com/dignifiedquire/num-bigint"
        },
        {
          "type": "vcs",
          "url": "https://github.com/dignifiedquire/num-bigint"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#num-bigint@0.4.6",
      "author": "The Rust Project Developers",
      "name": "num-bigint",
      "version": "0.4.6",
      "description": "Big integer implementation for Rust",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/num-bigint@0.4.6",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/num-bigint"
        },
        {
          "type": "website",
          "url": "https://github.com/rust-num/num-bigint"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rust-num/num-bigint"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#num-conv@0.1.0",
      "author": "Jacob Pratt <jacob@jhpratt.dev>",
      "name": "num-conv",
      "version": "0.1.0",
      "description": "`num_conv` is a crate to convert between integer types without using `as` casts. This provides better certainty when refactoring, makes the exact behavior of code more explicit, and allows using turbofish syntax. ",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/num-conv@0.1.0",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/jhpratt/num-conv"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#num-derive@0.3.3",
      "author": "The Rust Project Developers",
      "name": "num-derive",
      "version": "0.3.3",
      "description": "Numeric syntax extensions",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/num-derive@0.3.3",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/num-derive"
        },
        {
          "type": "website",
          "url": "https://github.com/rust-num/num-derive"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rust-num/num-derive"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#num-integer@0.1.46",
      "author": "The Rust Project Developers",
      "name": "num-integer",
      "version": "0.1.46",
      "description": "Integer traits and functions",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/num-integer@0.1.46",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/num-integer"
        },
        {
          "type": "website",
          "url": "https://github.com/rust-num/num-integer"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rust-num/num-integer"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#num-iter@0.1.45",
      "author": "The Rust Project Developers",
      "name": "num-iter",
      "version": "0.1.45",
      "description": "External iterators for generic mathematics",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/num-iter@0.1.45",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/num-iter"
        },
        {
          "type": "website",
          "url": "https://github.com/rust-num/num-iter"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rust-num/num-iter"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#num-rational@0.4.2",
      "author": "The Rust Project Developers",
      "name": "num-rational",
      "version": "0.4.2",
      "description": "Rational numbers implementation for Rust",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/num-rational@0.4.2",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/num-rational"
        },
        {
          "type": "website",
          "url": "https://github.com/rust-num/num-rational"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rust-num/num-rational"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#num-traits@0.2.19",
      "author": "The Rust Project Developers",
      "name": "num-traits",
      "version": "0.2.19",
      "description": "Numeric traits for generic mathematics",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/num-traits@0.2.19",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/num-traits"
        },
        {
          "type": "website",
          "url": "https://github.com/rust-num/num-traits"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rust-num/num-traits"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#num_threads@0.1.7",
      "author": "Jacob Pratt <open-source@jhpratt.dev>",
      "name": "num_threads",
      "version": "0.1.7",
      "description": "A minimal library that determines the number of running threads for the current process.",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/num_threads@0.1.7",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/jhpratt/num_threads"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#once_cell@1.21.3",
      "author": "Aleksey Kladov <aleksey.kladov@gmail.com>",
      "name": "once_cell",
      "version": "1.21.3",
      "description": "Single assignment cells and lazy values.",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/once_cell@1.21.3",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/once_cell"
        },
        {
          "type": "vcs",
          "url": "https://github.com/matklad/once_cell"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#opaque-debug@0.3.1",
      "author": "RustCrypto Developers",
      "name": "opaque-debug",
      "version": "0.3.1",
      "description": "Macro for opaque Debug trait implementation",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/opaque-debug@0.3.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/opaque-debug"
        },
        {
          "type": "vcs",
          "url": "https://github.com/RustCrypto/utils"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#ordered-float@3.9.2",
      "author": "Jonathan Reem <jonathan.reem@gmail.com>, Matt Brubeck <mbrubeck@limpet.net>",
      "name": "ordered-float",
      "version": "3.9.2",
      "description": "Wrappers for total ordering on floats",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/ordered-float@3.9.2",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/reem/rust-ordered-float"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#ordered-float@4.6.0",
      "author": "Jonathan Reem <jonathan.reem@gmail.com>, Matt Brubeck <mbrubeck@limpet.net>",
      "name": "ordered-float",
      "version": "4.6.0",
      "description": "Wrappers for total ordering on floats",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/ordered-float@4.6.0",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/reem/rust-ordered-float"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#overload@0.1.1",
      "author": "Daniel Salvadori <danaugrs@gmail.com>",
      "name": "overload",
      "version": "0.1.1",
      "description": "Provides a macro to simplify operator overloading.",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/overload@0.1.1",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/danaugrs/overload"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#owning_ref@0.4.1",
      "author": "Marvin Löbel <loebel.marvin@gmail.com>",
      "name": "owning_ref",
      "version": "0.4.1",
      "description": "A library for creating references that carry their owner with them.",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/owning_ref@0.4.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "http://kimundi.github.io/owning-ref-rs/owning_ref/index.html"
        },
        {
          "type": "vcs",
          "url": "https://github.com/Kimundi/owning-ref-rs"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#p256@0.13.2",
      "author": "RustCrypto Developers",
      "name": "p256",
      "version": "0.13.2",
      "description": "Pure Rust implementation of the NIST P-256 (a.k.a. secp256r1, prime256v1) elliptic curve as defined in SP 800-186, with support for ECDH, ECDSA signing/verification, and general purpose curve arithmetic ",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/p256@0.13.2",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/p256"
        },
        {
          "type": "vcs",
          "url": "https://github.com/RustCrypto/elliptic-curves/tree/master/p256"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#p384@0.13.1",
      "author": "RustCrypto Developers, Frank Denis <github@pureftpd.org>",
      "name": "p384",
      "version": "0.13.1",
      "description": "Pure Rust implementation of the NIST P-384 (a.k.a. secp384r1) elliptic curve as defined in SP 800-186 with support for ECDH, ECDSA signing/verification, and general purpose curve arithmetic support. ",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/p384@0.13.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/p384"
        },
        {
          "type": "vcs",
          "url": "https://github.com/RustCrypto/elliptic-curves/tree/master/p384"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#parking@2.2.1",
      "author": "Stjepan Glavina <stjepang@gmail.com>, The Rust Project Developers",
      "name": "parking",
      "version": "2.2.1",
      "description": "Thread parking and unparking",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/parking@2.2.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/parking"
        },
        {
          "type": "website",
          "url": "https://github.com/smol-rs/parking"
        },
        {
          "type": "vcs",
          "url": "https://github.com/smol-rs/parking"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#parking_lot@0.12.4",
      "author": "Amanieu d'Antras <amanieu@gmail.com>",
      "name": "parking_lot",
      "version": "0.12.4",
      "description": "More compact and efficient implementations of the standard synchronization primitives.",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/parking_lot@0.12.4",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/Amanieu/parking_lot"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#parking_lot_core@0.9.11",
      "author": "Amanieu d'Antras <amanieu@gmail.com>",
      "name": "parking_lot_core",
      "version": "0.9.11",
      "description": "An advanced API for creating custom synchronization primitives.",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/parking_lot_core@0.9.11",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/Amanieu/parking_lot"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#pct-str@2.0.0",
      "author": "Timothée Haudebourg <author@haudebourg.net>",
      "name": "pct-str",
      "version": "2.0.0",
      "description": "Percent-encoded strings for URL, URI, IRI, etc.",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/pct-str@2.0.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/pct-str"
        },
        {
          "type": "vcs",
          "url": "https://github.com/timothee-haudebourg/pct-str"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#pem-rfc7468@0.3.1",
      "author": "RustCrypto Developers",
      "name": "pem-rfc7468",
      "version": "0.3.1",
      "description": "PEM Encoding (RFC 7468) for PKIX, PKCS, and CMS Structures, implementing a strict subset of the original Privacy-Enhanced Mail encoding intended specifically for use with cryptographic keys, certificates, and other messages. Provides a no_std-friendly, constant-time implementation suitable for use with cryptographic private keys. ",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/pem-rfc7468@0.3.1",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/RustCrypto/formats/tree/master/pem-rfc7468"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#pem-rfc7468@0.7.0",
      "author": "RustCrypto Developers",
      "name": "pem-rfc7468",
      "version": "0.7.0",
      "description": "PEM Encoding (RFC 7468) for PKIX, PKCS, and CMS Structures, implementing a strict subset of the original Privacy-Enhanced Mail encoding intended specifically for use with cryptographic keys, certificates, and other messages. Provides a no_std-friendly, constant-time implementation suitable for use with cryptographic private keys. ",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/pem-rfc7468@0.7.0",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/RustCrypto/formats/tree/master/pem-rfc7468"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#percent-encoding@2.3.1",
      "author": "The rust-url developers",
      "name": "percent-encoding",
      "version": "2.3.1",
      "description": "Percent encoding and decoding",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/percent-encoding@2.3.1",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/servo/rust-url/"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#permutohedron@0.2.4",
      "author": "bluss",
      "name": "permutohedron",
      "version": "0.2.4",
      "description": "Generate permutations of sequences. Either lexicographical order permutations, or a minimal swaps permutation sequence implemented using Heap's algorithm.",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/permutohedron@0.2.4",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/permutohedron/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/bluss/permutohedron"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#pin-project-internal@1.1.10",
      "name": "pin-project-internal",
      "version": "1.1.10",
      "description": "Implementation detail of the `pin-project` crate. ",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/pin-project-internal@1.1.10",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/taiki-e/pin-project"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#pin-project-lite@0.2.16",
      "name": "pin-project-lite",
      "version": "0.2.16",
      "description": "A lightweight version of pin-project written with declarative macros. ",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/pin-project-lite@0.2.16",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/taiki-e/pin-project-lite"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#pin-project@1.1.10",
      "name": "pin-project",
      "version": "1.1.10",
      "description": "A crate for safe and ergonomic pin-projection. ",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/pin-project@1.1.10",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/taiki-e/pin-project"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#pin-utils@0.1.0",
      "author": "Josef Brandl <mail@josefbrandl.de>",
      "name": "pin-utils",
      "version": "0.1.0",
      "description": "Utilities for pinning ",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/pin-utils@0.1.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/pin-utils"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rust-lang-nursery/pin-utils"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#pkcs1@0.3.3",
      "author": "RustCrypto Developers",
      "name": "pkcs1",
      "version": "0.3.3",
      "description": "Pure Rust implementation of Public-Key Cryptography Standards (PKCS) #1: RSA Cryptography Specifications Version 2.2 (RFC 8017) ",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/pkcs1@0.3.3",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/RustCrypto/formats/tree/master/pkcs1"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#pkcs8@0.10.2",
      "author": "RustCrypto Developers",
      "name": "pkcs8",
      "version": "0.10.2",
      "description": "Pure Rust implementation of Public-Key Cryptography Standards (PKCS) #8: Private-Key Information Syntax Specification (RFC 5208), with additional support for PKCS#8v2 asymmetric key packages (RFC 5958) ",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/pkcs8@0.10.2",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/RustCrypto/formats/tree/master/pkcs8"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#pkcs8@0.8.0",
      "author": "RustCrypto Developers",
      "name": "pkcs8",
      "version": "0.8.0",
      "description": "Pure Rust implementation of Public-Key Cryptography Standards (PKCS) #8: Private-Key Information Syntax Specification (RFC 5208), with additional support for PKCS#8v2 asymmetric key packages (RFC 5958) ",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/pkcs8@0.8.0",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/RustCrypto/formats/tree/master/pkcs8"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#poly1305@0.8.0",
      "author": "RustCrypto Developers",
      "name": "poly1305",
      "version": "0.8.0",
      "description": "The Poly1305 universal hash function and message authentication code",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/poly1305@0.8.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/poly1305"
        },
        {
          "type": "vcs",
          "url": "https://github.com/RustCrypto/universal-hashes"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#polyval@0.6.2",
      "author": "RustCrypto Developers",
      "name": "polyval",
      "version": "0.6.2",
      "description": "POLYVAL is a GHASH-like universal hash over GF(2^128) useful for constructing a Message Authentication Code (MAC) ",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/polyval@0.6.2",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/polyval"
        },
        {
          "type": "vcs",
          "url": "https://github.com/RustCrypto/universal-hashes"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#portable-atomic@1.11.1",
      "name": "portable-atomic",
      "version": "1.11.1",
      "description": "Portable atomic types including support for 128-bit atomics, atomic float, etc. ",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/portable-atomic@1.11.1",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/taiki-e/portable-atomic"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#potential_utf@0.1.2",
      "author": "The ICU4X Project Developers",
      "name": "potential_utf",
      "version": "0.1.2",
      "description": "Unvalidated string and character types",
      "scope": "required",
      "licenses": [
        {
          "expression": "Unicode-3.0"
        }
      ],
      "purl": "pkg:cargo/potential_utf@0.1.2",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://icu4x.unicode.org"
        },
        {
          "type": "vcs",
          "url": "https://github.com/unicode-org/icu4x"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#powerfmt@0.2.0",
      "author": "Jacob Pratt <jacob@jhpratt.dev>",
      "name": "powerfmt",
      "version": "0.2.0",
      "description": "    `powerfmt` is a library that provides utilities for formatting values. This crate makes it     significantly easier to support filling to a minimum width with alignment, avoid heap     allocation, and avoid repetitive calculations. ",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/powerfmt@0.2.0",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/jhpratt/powerfmt"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#ppv-lite86@0.2.21",
      "author": "The CryptoCorrosion Contributors",
      "name": "ppv-lite86",
      "version": "0.2.21",
      "description": "Cross-platform cryptography-oriented low-level SIMD library.",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/ppv-lite86@0.2.21",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/cryptocorrosion/cryptocorrosion"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#pretty_dtoa@0.3.0",
      "author": "Matthew Torrence <matt@torrencefamily.net>",
      "name": "pretty_dtoa",
      "version": "0.3.0",
      "description": "Configurable floating point number to string conversions, with many options for controlling various aspects of displaying floats.",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/pretty_dtoa@0.3.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/pretty_dtoa"
        },
        {
          "type": "website",
          "url": "https://github.com/torrencem/pretty_dtoa"
        },
        {
          "type": "vcs",
          "url": "https://github.com/torrencem/pretty_dtoa"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#primeorder@0.13.6",
      "author": "RustCrypto Developers",
      "name": "primeorder",
      "version": "0.13.6",
      "description": "Pure Rust implementation of complete addition formulas for prime order elliptic curves (Renes-Costello-Batina 2015). Generic over field elements and curve equation coefficients ",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/primeorder@0.13.6",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/primeorder"
        },
        {
          "type": "vcs",
          "url": "https://github.com/RustCrypto/elliptic-curves/tree/master/primeorder"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#primitive-types@0.9.1",
      "author": "Parity Technologies <admin@parity.io>",
      "name": "primitive-types",
      "version": "0.9.1",
      "description": "Primitive types shared by Ethereum and Substrate",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/primitive-types@0.9.1",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://github.com/paritytech/parity-common"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#proc-macro-crate@1.1.3",
      "author": "Bastian Köcher <git@kchr.de>",
      "name": "proc-macro-crate",
      "version": "1.1.3",
      "description": "Replacement for crate (macro_rules keyword) in proc-macros ",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/proc-macro-crate@1.1.3",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/proc-macro-crate"
        },
        {
          "type": "vcs",
          "url": "https://github.com/bkchr/proc-macro-crate"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#proc-macro-error-attr@1.0.4",
      "author": "CreepySkeleton <creepy-skeleton@yandex.ru>",
      "name": "proc-macro-error-attr",
      "version": "1.0.4",
      "description": "Attribute macro for proc-macro-error crate",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/proc-macro-error-attr@1.0.4",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://gitlab.com/CreepySkeleton/proc-macro-error"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#proc-macro-error@1.0.4",
      "author": "CreepySkeleton <creepy-skeleton@yandex.ru>",
      "name": "proc-macro-error",
      "version": "1.0.4",
      "description": "Almost drop-in replacement to panics in proc-macros",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/proc-macro-error@1.0.4",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://gitlab.com/CreepySkeleton/proc-macro-error"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.97",
      "author": "David Tolnay <dtolnay@gmail.com>, Alex Crichton <alex@alexcrichton.com>",
      "name": "proc-macro2",
      "version": "1.0.97",
      "description": "A substitute implementation of the compiler's `proc_macro` API to decouple token-based libraries from the procedural macro use case.",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/proc-macro2@1.0.97",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/proc-macro2"
        },
        {
          "type": "vcs",
          "url": "https://github.com/dtolnay/proc-macro2"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#quinn-proto@0.11.12",
      "name": "quinn-proto",
      "version": "0.11.12",
      "description": "State machine for the QUIC transport protocol",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/quinn-proto@0.11.12",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/quinn-rs/quinn"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#quinn-udp@0.5.13",
      "name": "quinn-udp",
      "version": "0.5.13",
      "description": "UDP sockets with ECN information for the QUIC transport protocol",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/quinn-udp@0.5.13",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/quinn-rs/quinn"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#quinn@0.11.8",
      "name": "quinn",
      "version": "0.11.8",
      "description": "Versatile QUIC transport protocol implementation",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/quinn@0.11.8",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/quinn-rs/quinn"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.40",
      "author": "David Tolnay <dtolnay@gmail.com>",
      "name": "quote",
      "version": "1.0.40",
      "description": "Quasi-quoting macro quote!(...)",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/quote@1.0.40",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/quote/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/dtolnay/quote"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#radium@0.6.2",
      "author": "Nika Layzell <nika@thelayzells.com>, myrrlyn <self@myrrlyn.dev>",
      "name": "radium",
      "version": "0.6.2",
      "description": "Portable interfaces for maybe-atomic types",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/radium@0.6.2",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/radium"
        },
        {
          "type": "website",
          "url": "https://github.com/bitvecto-rs/radium"
        },
        {
          "type": "vcs",
          "url": "https://github.com/bitvecto-rs/radium"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#rand@0.8.5",
      "author": "The Rand Project Developers, The Rust Project Developers",
      "name": "rand",
      "version": "0.8.5",
      "description": "Random number generators and other randomness functionality. ",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/rand@0.8.5",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/rand"
        },
        {
          "type": "website",
          "url": "https://rust-random.github.io/book"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rust-random/rand"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#rand@0.9.2",
      "author": "The Rand Project Developers, The Rust Project Developers",
      "name": "rand",
      "version": "0.9.2",
      "description": "Random number generators and other randomness functionality. ",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/rand@0.9.2",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/rand"
        },
        {
          "type": "website",
          "url": "https://rust-random.github.io/book"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rust-random/rand"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#rand_chacha@0.3.1",
      "author": "The Rand Project Developers, The Rust Project Developers, The CryptoCorrosion Contributors",
      "name": "rand_chacha",
      "version": "0.3.1",
      "description": "ChaCha random number generator ",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/rand_chacha@0.3.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/rand_chacha"
        },
        {
          "type": "website",
          "url": "https://rust-random.github.io/book"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rust-random/rand"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#rand_chacha@0.9.0",
      "author": "The Rand Project Developers, The Rust Project Developers, The CryptoCorrosion Contributors",
      "name": "rand_chacha",
      "version": "0.9.0",
      "description": "ChaCha random number generator ",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/rand_chacha@0.9.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/rand_chacha"
        },
        {
          "type": "website",
          "url": "https://rust-random.github.io/book"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rust-random/rand"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#rand_core@0.6.4",
      "author": "The Rand Project Developers, The Rust Project Developers",
      "name": "rand_core",
      "version": "0.6.4",
      "description": "Core random number generator traits and tools for implementation. ",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/rand_core@0.6.4",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/rand_core"
        },
        {
          "type": "website",
          "url": "https://rust-random.github.io/book"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rust-random/rand"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#rand_core@0.9.3",
      "author": "The Rand Project Developers, The Rust Project Developers",
      "name": "rand_core",
      "version": "0.9.3",
      "description": "Core random number generator traits and tools for implementation. ",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/rand_core@0.9.3",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/rand_core"
        },
        {
          "type": "website",
          "url": "https://rust-random.github.io/book"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rust-random/rand"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#rand_xoshiro@0.6.0",
      "author": "The Rand Project Developers",
      "name": "rand_xoshiro",
      "version": "0.6.0",
      "description": "Xoshiro, xoroshiro and splitmix64 random number generators",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/rand_xoshiro@0.6.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/rand_xoshiro"
        },
        {
          "type": "website",
          "url": "https://rust-random.github.io/book"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rust-random/rngs"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#range-traits@0.3.2",
      "author": "Timothée Haudebourg <author@haudebourg.net>",
      "name": "range-traits",
      "version": "0.3.2",
      "description": "Ranges related traits.",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/range-traits@0.3.2",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/range-traits"
        },
        {
          "type": "vcs",
          "url": "https://github.com/timothee-haudebourg/range-traits"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#raw-btree@0.3.3",
      "author": "Timothée Haudebourg <author@haudebourg.net>",
      "name": "raw-btree",
      "version": "0.3.3",
      "description": "Generic B-Tree implementation.",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/raw-btree@0.3.3",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/raw-btree"
        },
        {
          "type": "vcs",
          "url": "https://github.com/timothee-haudebourg/raw-btree-rs"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#rdf-types@0.22.5",
      "author": "Timothée Haudebourg <author@haudebourg.net>",
      "name": "rdf-types",
      "version": "0.22.5",
      "description": "Data-structures and traits definitions for RDF.",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/rdf-types@0.22.5",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/rdf-types"
        },
        {
          "type": "vcs",
          "url": "https://github.com/timothee-haudebourg/rdf-types"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#ref-cast-impl@1.0.24",
      "author": "David Tolnay <dtolnay@gmail.com>",
      "name": "ref-cast-impl",
      "version": "1.0.24",
      "description": "Derive implementation for ref_cast::RefCast.",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/ref-cast-impl@1.0.24",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/ref-cast"
        },
        {
          "type": "vcs",
          "url": "https://github.com/dtolnay/ref-cast"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#ref-cast@1.0.24",
      "author": "David Tolnay <dtolnay@gmail.com>",
      "name": "ref-cast",
      "version": "1.0.24",
      "description": "Safely cast &T to &U where the struct U contains a single field of type T.",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/ref-cast@1.0.24",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/ref-cast"
        },
        {
          "type": "vcs",
          "url": "https://github.com/dtolnay/ref-cast"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#regex-automata@0.1.10",
      "author": "Andrew Gallant <jamslam@gmail.com>",
      "name": "regex-automata",
      "version": "0.1.10",
      "description": "Automata construction and matching using regular expressions.",
      "scope": "required",
      "licenses": [
        {
          "expression": "Unlicense OR MIT"
        }
      ],
      "purl": "pkg:cargo/regex-automata@0.1.10",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/regex-automata"
        },
        {
          "type": "website",
          "url": "https://github.com/BurntSushi/regex-automata"
        },
        {
          "type": "vcs",
          "url": "https://github.com/BurntSushi/regex-automata"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#regex-automata@0.4.9",
      "author": "The Rust Project Developers, Andrew Gallant <jamslam@gmail.com>",
      "name": "regex-automata",
      "version": "0.4.9",
      "description": "Automata construction and matching using regular expressions.",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/regex-automata@0.4.9",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/regex-automata"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rust-lang/regex/tree/master/regex-automata"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#regex-syntax@0.6.29",
      "author": "The Rust Project Developers",
      "name": "regex-syntax",
      "version": "0.6.29",
      "description": "A regular expression parser.",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/regex-syntax@0.6.29",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/regex-syntax"
        },
        {
          "type": "website",
          "url": "https://github.com/rust-lang/regex"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rust-lang/regex"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#regex-syntax@0.8.5",
      "author": "The Rust Project Developers, Andrew Gallant <jamslam@gmail.com>",
      "name": "regex-syntax",
      "version": "0.8.5",
      "description": "A regular expression parser.",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/regex-syntax@0.8.5",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/regex-syntax"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rust-lang/regex/tree/master/regex-syntax"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#regex@1.11.1",
      "author": "The Rust Project Developers, Andrew Gallant <jamslam@gmail.com>",
      "name": "regex",
      "version": "1.11.1",
      "description": "An implementation of regular expressions for Rust. This implementation uses finite automata and guarantees linear time matching on all inputs. ",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/regex@1.11.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/regex"
        },
        {
          "type": "website",
          "url": "https://github.com/rust-lang/regex"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rust-lang/regex"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#replace_with@0.1.8",
      "author": "Alec Mocatta <alec@mocatta.net>",
      "name": "replace_with",
      "version": "0.1.8",
      "description": "Temporarily take ownership of a value at a mutable location, and replace it with a new value based on the old one. ",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/replace_with@0.1.8",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/replace_with"
        },
        {
          "type": "website",
          "url": "https://github.com/alecmocatta/replace_with"
        },
        {
          "type": "vcs",
          "url": "https://github.com/alecmocatta/replace_with"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#reqwest@0.11.27",
      "author": "Sean McArthur <sean@seanmonstar.com>",
      "name": "reqwest",
      "version": "0.11.27",
      "description": "higher level HTTP client library",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/reqwest@0.11.27",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/reqwest"
        },
        {
          "type": "vcs",
          "url": "https://github.com/seanmonstar/reqwest"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#reqwest@0.12.23",
      "author": "Sean McArthur <sean@seanmonstar.com>",
      "name": "reqwest",
      "version": "0.12.23",
      "description": "higher level HTTP client library",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/reqwest@0.12.23",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/reqwest"
        },
        {
          "type": "vcs",
          "url": "https://github.com/seanmonstar/reqwest"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#rfc6979@0.4.0",
      "author": "RustCrypto Developers",
      "name": "rfc6979",
      "version": "0.4.0",
      "description": "Pure Rust implementation of RFC6979: Deterministic Usage of the Digital Signature Algorithm (DSA) and Elliptic Curve Digital Signature Algorithm (ECDSA) ",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/rfc6979@0.4.0",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/RustCrypto/signatures/tree/master/rfc6979"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#ring@0.17.14",
      "name": "ring",
      "version": "0.17.14",
      "description": "An experiment.",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0 AND ISC"
        }
      ],
      "purl": "pkg:cargo/ring@0.17.14",
      "externalReferences": [
        {
          "type": "other",
          "url": "ring_core_0_17_14_"
        },
        {
          "type": "vcs",
          "url": "https://github.com/briansmith/ring"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#ripemd160@0.9.1",
      "author": "RustCrypto Developers",
      "name": "ripemd160",
      "version": "0.9.1",
      "description": "RIPEMD-160 hash function",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/ripemd160@0.9.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/ripemd160"
        },
        {
          "type": "vcs",
          "url": "https://github.com/RustCrypto/hashes"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#rsa@0.6.1",
      "author": "RustCrypto Developers, dignifiedquire <dignifiedquire@gmail.com>",
      "name": "rsa",
      "version": "0.6.1",
      "description": "Pure Rust RSA implementation",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/rsa@0.6.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/rsa"
        },
        {
          "type": "vcs",
          "url": "https://github.com/RustCrypto/RSA"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#rustc-hash@2.1.1",
      "author": "The Rust Project Developers",
      "name": "rustc-hash",
      "version": "2.1.1",
      "description": "A speedy, non-cryptographic hashing algorithm used by rustc",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/rustc-hash@2.1.1",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/rust-lang/rustc-hash"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#rustc_version@0.4.1",
      "name": "rustc_version",
      "version": "0.4.1",
      "description": "A library for querying the version of a installed rustc compiler",
      "scope": "excluded",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/rustc_version@0.4.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/rustc_version/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/djc/rustc-version-rs"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#rustix@1.0.8",
      "author": "Dan Gohman <dev@sunfishcode.online>, Jakub Konka <kubkon@jakubkonka.com>",
      "name": "rustix",
      "version": "1.0.8",
      "description": "Safe Rust bindings to POSIX/Unix/Linux/Winsock-like syscalls",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0 WITH LLVM-exception OR Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/rustix@1.0.8",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/rustix"
        },
        {
          "type": "vcs",
          "url": "https://github.com/bytecodealliance/rustix"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#rustls-native-certs@0.6.3",
      "name": "rustls-native-certs",
      "version": "0.6.3",
      "description": "rustls-native-certs allows rustls to use the platform native certificate store",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0 OR ISC OR MIT"
        }
      ],
      "purl": "pkg:cargo/rustls-native-certs@0.6.3",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://github.com/ctz/rustls-native-certs"
        },
        {
          "type": "vcs",
          "url": "https://github.com/ctz/rustls-native-certs"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#rustls-native-certs@0.8.1",
      "name": "rustls-native-certs",
      "version": "0.8.1",
      "description": "rustls-native-certs allows rustls to use the platform native certificate store",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0 OR ISC OR MIT"
        }
      ],
      "purl": "pkg:cargo/rustls-native-certs@0.8.1",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://github.com/rustls/rustls-native-certs"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rustls/rustls-native-certs"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#rustls-pemfile@1.0.4",
      "name": "rustls-pemfile",
      "version": "1.0.4",
      "description": "Basic .pem file parser for keys and certificates",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0 OR ISC OR MIT"
        }
      ],
      "purl": "pkg:cargo/rustls-pemfile@1.0.4",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://github.com/rustls/pemfile"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rustls/pemfile"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#rustls-pki-types@1.12.0",
      "name": "rustls-pki-types",
      "version": "1.12.0",
      "description": "Shared types for the rustls PKI ecosystem",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/rustls-pki-types@1.12.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/rustls-pki-types"
        },
        {
          "type": "website",
          "url": "https://github.com/rustls/pki-types"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rustls/pki-types"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#rustls-platform-verifier@0.6.1",
      "author": "ComplexSpaces <complexspacescode@gmail.com>, 1Password",
      "name": "rustls-platform-verifier",
      "version": "0.6.1",
      "description": "rustls-platform-verifier supports verifying TLS certificates in rustls with the operating system verifier",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/rustls-platform-verifier@0.6.1",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/rustls/rustls-platform-verifier"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#rustls-webpki@0.101.7",
      "name": "rustls-webpki",
      "version": "0.101.7",
      "description": "Web PKI X.509 Certificate Verification.",
      "scope": "required",
      "licenses": [
        {
          "expression": "ISC"
        }
      ],
      "purl": "pkg:cargo/rustls-webpki@0.101.7",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/rustls/webpki"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#rustls-webpki@0.103.4",
      "name": "rustls-webpki",
      "version": "0.103.4",
      "description": "Web PKI X.509 Certificate Verification.",
      "scope": "required",
      "licenses": [
        {
          "expression": "ISC"
        }
      ],
      "purl": "pkg:cargo/rustls-webpki@0.103.4",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/rustls/webpki"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#rustls@0.21.12",
      "name": "rustls",
      "version": "0.21.12",
      "description": "Rustls is a modern TLS library written in Rust.",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0 OR ISC OR MIT"
        }
      ],
      "purl": "pkg:cargo/rustls@0.21.12",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://github.com/rustls/rustls"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rustls/rustls"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#rustls@0.23.31",
      "name": "rustls",
      "version": "0.23.31",
      "description": "Rustls is a modern TLS library written in Rust.",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0 OR ISC OR MIT"
        }
      ],
      "purl": "pkg:cargo/rustls@0.23.31",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://github.com/rustls/rustls"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rustls/rustls"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#rustversion@1.0.22",
      "author": "David Tolnay <dtolnay@gmail.com>",
      "name": "rustversion",
      "version": "1.0.22",
      "description": "Conditional compilation according to rustc compiler version",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/rustversion@1.0.22",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/rustversion"
        },
        {
          "type": "vcs",
          "url": "https://github.com/dtolnay/rustversion"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#ryu-js@0.2.2",
      "author": "David Tolnay <dtolnay@gmail.com>, boa-dev",
      "name": "ryu-js",
      "version": "0.2.2",
      "description": "Fast floating point to string conversion, ECMAScript compliant.",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0 OR BSL-1.0"
        }
      ],
      "purl": "pkg:cargo/ryu-js@0.2.2",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/ryu-js"
        },
        {
          "type": "vcs",
          "url": "https://github.com/boa-dev/ryu-js"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#ryu-js@1.0.2",
      "author": "David Tolnay <dtolnay@gmail.com>, boa-dev",
      "name": "ryu-js",
      "version": "1.0.2",
      "description": "Fast floating point to string conversion, ECMAScript compliant.",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0 OR BSL-1.0"
        }
      ],
      "purl": "pkg:cargo/ryu-js@1.0.2",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/ryu-js"
        },
        {
          "type": "vcs",
          "url": "https://github.com/boa-dev/ryu-js"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#ryu@1.0.20",
      "author": "David Tolnay <dtolnay@gmail.com>",
      "name": "ryu",
      "version": "1.0.20",
      "description": "Fast floating point to string conversion",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0 OR BSL-1.0"
        }
      ],
      "purl": "pkg:cargo/ryu@1.0.20",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/ryu"
        },
        {
          "type": "vcs",
          "url": "https://github.com/dtolnay/ryu"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#ryu_floating_decimal@0.1.0",
      "author": "Matt Torrence",
      "name": "ryu_floating_decimal",
      "version": "0.1.0",
      "description": "Fast floating point to floating decimal conversion. See the crate 'ryu' for more details",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/ryu_floating_decimal@0.1.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/ryu-floating-decimal"
        },
        {
          "type": "vcs",
          "url": "https://github.com/torrencem/ryu-floating-decimal"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#salsa20@0.10.2",
      "author": "RustCrypto Developers",
      "name": "salsa20",
      "version": "0.10.2",
      "description": "Salsa20 Stream Cipher",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/salsa20@0.10.2",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/salsa20"
        },
        {
          "type": "vcs",
          "url": "https://github.com/RustCrypto/stream-ciphers"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#schemars@0.9.0",
      "author": "Graham Esau <gesau@hotmail.co.uk>",
      "name": "schemars",
      "version": "0.9.0",
      "description": "Generate JSON Schemas from Rust code",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/schemars@0.9.0",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://graham.cool/schemars/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/GREsau/schemars"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#schemars@1.0.4",
      "author": "Graham Esau <gesau@hotmail.co.uk>",
      "name": "schemars",
      "version": "1.0.4",
      "description": "Generate JSON Schemas from Rust code",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/schemars@1.0.4",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://graham.cool/schemars/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/GREsau/schemars"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#scopeguard@1.2.0",
      "author": "bluss",
      "name": "scopeguard",
      "version": "1.2.0",
      "description": "A RAII scope guard that will run a given closure when it goes out of scope, even if the code between panics (assuming unwinding panic).  Defines the macros `defer!`, `defer_on_unwind!`, `defer_on_success!` as shorthands for guards with one of the implemented strategies. ",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/scopeguard@1.2.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/scopeguard/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/bluss/scopeguard"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#sct@0.7.1",
      "author": "Joseph Birr-Pixton <jpixton@gmail.com>",
      "name": "sct",
      "version": "0.7.1",
      "description": "Certificate transparency SCT verification library",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0 OR ISC OR MIT"
        }
      ],
      "purl": "pkg:cargo/sct@0.7.1",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://github.com/rustls/sct.rs"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rustls/sct.rs"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#sec1@0.7.3",
      "author": "RustCrypto Developers",
      "name": "sec1",
      "version": "0.7.3",
      "description": "Pure Rust implementation of SEC1: Elliptic Curve Cryptography encoding formats including ASN.1 DER-serialized private keys as well as the Elliptic-Curve-Point-to-Octet-String encoding ",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/sec1@0.7.3",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/RustCrypto/formats/tree/master/sec1"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#security-framework-sys@2.14.0",
      "author": "Steven Fackler <sfackler@gmail.com>, Kornel <kornel@geekhood.net>",
      "name": "security-framework-sys",
      "version": "2.14.0",
      "description": "Apple `Security.framework` low-level FFI bindings",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/security-framework-sys@2.14.0",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://lib.rs/crates/security-framework-sys"
        },
        {
          "type": "vcs",
          "url": "https://github.com/kornelski/rust-security-framework"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#security-framework@2.11.1",
      "author": "Steven Fackler <sfackler@gmail.com>, Kornel <kornel@geekhood.net>",
      "name": "security-framework",
      "version": "2.11.1",
      "description": "Security.framework bindings for macOS and iOS",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/security-framework@2.11.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/security_framework"
        },
        {
          "type": "website",
          "url": "https://lib.rs/crates/security_framework"
        },
        {
          "type": "vcs",
          "url": "https://github.com/kornelski/rust-security-framework"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#security-framework@3.3.0",
      "author": "Steven Fackler <sfackler@gmail.com>, Kornel <kornel@geekhood.net>",
      "name": "security-framework",
      "version": "3.3.0",
      "description": "Security.framework bindings for macOS and iOS",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/security-framework@3.3.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/security_framework"
        },
        {
          "type": "website",
          "url": "https://lib.rs/crates/security_framework"
        },
        {
          "type": "vcs",
          "url": "https://github.com/kornelski/rust-security-framework"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#self_cell@1.2.0",
      "author": "Lukas Bergdoll <lukas.bergdoll@gmail.com>",
      "name": "self_cell",
      "version": "1.2.0",
      "description": "Safe-to-use proc-macro-free self-referential structs in stable Rust.",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/self_cell@1.2.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/self_cell"
        },
        {
          "type": "vcs",
          "url": "https://github.com/Voultapher/self_cell"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#semver@1.0.26",
      "author": "David Tolnay <dtolnay@gmail.com>",
      "name": "semver",
      "version": "1.0.26",
      "description": "Parser and evaluator for Cargo's flavor of Semantic Versioning",
      "scope": "excluded",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/semver@1.0.26",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/semver"
        },
        {
          "type": "vcs",
          "url": "https://github.com/dtolnay/semver"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#serde-attributes@0.2.1",
      "author": "vkill <vkill.net@gmail.com>",
      "name": "serde-attributes",
      "version": "0.2.1",
      "description": "Serde Attributes",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/serde-attributes@0.2.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/serde-attributes"
        },
        {
          "type": "website",
          "url": "https://github.com/bk-rs/serde-ext"
        },
        {
          "type": "vcs",
          "url": "https://github.com/bk-rs/serde-ext"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#serde-big-array@0.3.3",
      "author": "est31 <MTest31@outlook.com>, David Tolnay <dtolnay@gmail.com>",
      "name": "serde-big-array",
      "version": "0.3.3",
      "description": "Big array helper for serde.",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/serde-big-array@0.3.3",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/serde-big-array"
        },
        {
          "type": "vcs",
          "url": "https://github.com/est31/serde-big-array"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#serde-enum-str@0.4.0",
      "author": "vkill <vkill.net@gmail.com>",
      "name": "serde-enum-str",
      "version": "0.4.0",
      "description": "Serialize and deserialize enum string",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/serde-enum-str@0.4.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/serde-enum-str"
        },
        {
          "type": "website",
          "url": "https://github.com/bk-rs/serde-ext"
        },
        {
          "type": "vcs",
          "url": "https://github.com/bk-rs/serde-ext"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#serde-json-core@0.6.0",
      "author": "Jorge Aparicio <jorge@japaric.io>, Ryan Summers <ryan.summers@vertigo-designs.com>, Robert Jördens <rj@quartiq.de>, Mathias Koch <mk@factbird.com>",
      "name": "serde-json-core",
      "version": "0.6.0",
      "description": "serde-json for no_std programs",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/serde-json-core@0.6.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/serde-json-core"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rust-embedded-community/serde-json-core"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#serde-rename-rule@0.2.2",
      "author": "vkill <vkill.net@gmail.com>",
      "name": "serde-rename-rule",
      "version": "0.2.2",
      "description": "Serde RenameRule",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/serde-rename-rule@0.2.2",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/serde-rename-rule"
        },
        {
          "type": "website",
          "url": "https://github.com/bk-rs/serde-ext"
        },
        {
          "type": "vcs",
          "url": "https://github.com/bk-rs/serde-ext"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#serde-wasm-bindgen@0.6.5",
      "author": "Ingvar Stepanyan <me@rreverser.com>",
      "name": "serde-wasm-bindgen",
      "version": "0.6.5",
      "description": "Native Serde adapter for wasm-bindgen",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/serde-wasm-bindgen@0.6.5",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/RReverser/serde-wasm-bindgen"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219",
      "author": "Erick Tryzelaar <erick.tryzelaar@gmail.com>, David Tolnay <dtolnay@gmail.com>",
      "name": "serde",
      "version": "1.0.219",
      "description": "A generic serialization/deserialization framework",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/serde@1.0.219",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/serde"
        },
        {
          "type": "website",
          "url": "https://serde.rs"
        },
        {
          "type": "vcs",
          "url": "https://github.com/serde-rs/serde"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#serde_bytes@0.11.17",
      "author": "David Tolnay <dtolnay@gmail.com>",
      "name": "serde_bytes",
      "version": "0.11.17",
      "description": "Optimized handling of `&[u8]` and `Vec<u8>` for Serde",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/serde_bytes@0.11.17",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/serde_bytes"
        },
        {
          "type": "vcs",
          "url": "https://github.com/serde-rs/bytes"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#serde_cbor@0.11.2",
      "author": "Pyfisch <pyfisch@posteo.org>, Steven Fackler <sfackler@gmail.com>",
      "name": "serde_cbor",
      "version": "0.11.2",
      "description": "CBOR support for serde.",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/serde_cbor@0.11.2",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/pyfisch/cbor"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#serde_derive@1.0.219",
      "author": "Erick Tryzelaar <erick.tryzelaar@gmail.com>, David Tolnay <dtolnay@gmail.com>",
      "name": "serde_derive",
      "version": "1.0.219",
      "description": "Macros 1.1 implementation of #[derive(Serialize, Deserialize)]",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/serde_derive@1.0.219",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://serde.rs/derive.html"
        },
        {
          "type": "website",
          "url": "https://serde.rs"
        },
        {
          "type": "vcs",
          "url": "https://github.com/serde-rs/serde"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#serde_jcs@0.1.0",
      "author": "l1h3r <devin.turner09@gmail.com>",
      "name": "serde_jcs",
      "version": "0.1.0",
      "description": "JSON Canonicalization Scheme (JCS) for Serde",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/serde_jcs@0.1.0",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/l1h3r/serde_jcs"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#serde_json@1.0.142",
      "author": "Erick Tryzelaar <erick.tryzelaar@gmail.com>, David Tolnay <dtolnay@gmail.com>",
      "name": "serde_json",
      "version": "1.0.142",
      "description": "A JSON serialization file format",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/serde_json@1.0.142",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/serde_json"
        },
        {
          "type": "vcs",
          "url": "https://github.com/serde-rs/json"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#serde_json_canonicalizer@0.3.1",
      "name": "serde_json_canonicalizer",
      "version": "0.3.1",
      "description": "JSON Canonicalization Scheme (JCS - RFC 8785) implementation",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/serde_json_canonicalizer@0.3.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/serde_json_canonicalizer/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/evik42/serde-json-canonicalizer"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#serde_urlencoded@0.7.1",
      "author": "Anthony Ramine <n.oxyde@gmail.com>",
      "name": "serde_urlencoded",
      "version": "0.7.1",
      "description": "`x-www-form-urlencoded` meets Serde",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/serde_urlencoded@0.7.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/serde_urlencoded/0.7.1/serde_urlencoded/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/nox/serde_urlencoded"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#serde_with@1.14.0",
      "author": "Jonas Bushart, Marcin Kaźmierczak",
      "name": "serde_with",
      "version": "1.14.0",
      "description": "Custom de/serialization functions for Rust's serde",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/serde_with@1.14.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/serde_with/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/jonasbb/serde_with"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#serde_with@2.3.3",
      "author": "Jonas Bushart, Marcin Kaźmierczak",
      "name": "serde_with",
      "version": "2.3.3",
      "description": "Custom de/serialization functions for Rust's serde",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/serde_with@2.3.3",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/serde_with/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/jonasbb/serde_with"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#serde_with@3.14.0",
      "author": "Jonas Bushart, Marcin Kaźmierczak",
      "name": "serde_with",
      "version": "3.14.0",
      "description": "Custom de/serialization functions for Rust's serde",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/serde_with@3.14.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/serde_with/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/jonasbb/serde_with/"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#serde_with_macros@1.5.2",
      "author": "Jonas Bushart",
      "name": "serde_with_macros",
      "version": "1.5.2",
      "description": "proc-macro library for serde_with",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/serde_with_macros@1.5.2",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/serde_with_macros/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/jonasbb/serde_with/"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#serde_with_macros@2.3.3",
      "author": "Jonas Bushart",
      "name": "serde_with_macros",
      "version": "2.3.3",
      "description": "proc-macro library for serde_with",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/serde_with_macros@2.3.3",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/serde_with_macros/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/jonasbb/serde_with/"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#serde_with_macros@3.14.0",
      "author": "Jonas Bushart",
      "name": "serde_with_macros",
      "version": "3.14.0",
      "description": "proc-macro library for serde_with",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/serde_with_macros@3.14.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/serde_with_macros/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/jonasbb/serde_with/"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#sha1@0.10.6",
      "author": "RustCrypto Developers",
      "name": "sha1",
      "version": "0.10.6",
      "description": "SHA-1 hash function",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/sha1@0.10.6",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/sha1"
        },
        {
          "type": "vcs",
          "url": "https://github.com/RustCrypto/hashes"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#sha256@1.6.0",
      "author": "baoyachi <liaoymxsdl@gmail.com>",
      "name": "sha256",
      "version": "1.6.0",
      "description": "sha256 crypto digest",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/sha256@1.6.0",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/baoyachi/sha256-rs"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#sha2@0.10.9",
      "author": "RustCrypto Developers",
      "name": "sha2",
      "version": "0.10.9",
      "description": "Pure Rust implementation of the SHA-2 hash function family including SHA-224, SHA-256, SHA-384, and SHA-512. ",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/sha2@0.10.9",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/sha2"
        },
        {
          "type": "vcs",
          "url": "https://github.com/RustCrypto/hashes"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#sha2@0.9.9",
      "author": "RustCrypto Developers",
      "name": "sha2",
      "version": "0.9.9",
      "description": "Pure Rust implementation of the SHA-2 hash function family including SHA-224, SHA-256, SHA-384, and SHA-512. ",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/sha2@0.9.9",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/sha2"
        },
        {
          "type": "vcs",
          "url": "https://github.com/RustCrypto/hashes"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#sha3@0.10.8",
      "author": "RustCrypto Developers",
      "name": "sha3",
      "version": "0.10.8",
      "description": "Pure Rust implementation of SHA-3, a family of Keccak-based hash functions including the SHAKE family of eXtendable-Output Functions (XOFs), as well as the accelerated variant TurboSHAKE ",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/sha3@0.10.8",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/sha3"
        },
        {
          "type": "vcs",
          "url": "https://github.com/RustCrypto/hashes"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#sharded-slab@0.1.7",
      "author": "Eliza Weisman <eliza@buoyant.io>",
      "name": "sharded-slab",
      "version": "0.1.7",
      "description": "A lock-free concurrent slab. ",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/sharded-slab@0.1.7",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/sharded-slab/"
        },
        {
          "type": "website",
          "url": "https://github.com/hawkw/sharded-slab"
        },
        {
          "type": "vcs",
          "url": "https://github.com/hawkw/sharded-slab"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#shlex@1.3.0",
      "author": "comex <comexk@gmail.com>, Fenhl <fenhl@fenhl.net>, Adrian Taylor <adetaylor@chromium.org>, Alex Touchet <alextouchet@outlook.com>, Daniel Parks <dp+git@oxidized.org>, Garrett Berg <googberg@gmail.com>",
      "name": "shlex",
      "version": "1.3.0",
      "description": "Split a string into shell words, like Python's shlex.",
      "scope": "excluded",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/shlex@1.3.0",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/comex/rust-shlex"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#signal-hook-registry@1.4.6",
      "author": "Michal 'vorner' Vaner <vorner@vorner.cz>, Masaki Hara <ackie.h.gmai@gmail.com>",
      "name": "signal-hook-registry",
      "version": "1.4.6",
      "description": "Backend crate for signal-hook",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/signal-hook-registry@1.4.6",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/signal-hook-registry"
        },
        {
          "type": "vcs",
          "url": "https://github.com/vorner/signal-hook"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#signature@2.2.0",
      "author": "RustCrypto Developers",
      "name": "signature",
      "version": "2.2.0",
      "description": "Traits for cryptographic signature algorithms (e.g. ECDSA, Ed25519)",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/signature@2.2.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/signature"
        },
        {
          "type": "vcs",
          "url": "https://github.com/RustCrypto/traits/tree/master/signature"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#simd-adler32@0.3.7",
      "author": "Marvin Countryman <me@maar.vin>",
      "name": "simd-adler32",
      "version": "0.3.7",
      "description": "A SIMD-accelerated Adler-32 hash algorithm implementation.",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/simd-adler32@0.3.7",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/mcountryman/simd-adler32"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#simple_asn1@0.5.4",
      "author": "Adam Wick <awick@uhsure.com>",
      "name": "simple_asn1",
      "version": "0.5.4",
      "description": "A simple DER/ASN.1 encoding/decoding library.",
      "scope": "required",
      "licenses": [
        {
          "expression": "ISC"
        }
      ],
      "purl": "pkg:cargo/simple_asn1@0.5.4",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/acw/simple_asn1"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#sized-chunks@0.6.5",
      "author": "Bodil Stokke <bodil@bodil.org>",
      "name": "sized-chunks",
      "version": "0.6.5",
      "description": "Efficient sized chunk datatypes",
      "scope": "required",
      "licenses": [
        {
          "expression": "MPL-2.0+"
        }
      ],
      "purl": "pkg:cargo/sized-chunks@0.6.5",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "http://docs.rs/sized-chunks"
        },
        {
          "type": "vcs",
          "url": "https://github.com/bodil/sized-chunks"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#slab@0.4.11",
      "author": "Carl Lerche <me@carllerche.com>",
      "name": "slab",
      "version": "0.4.11",
      "description": "Pre-allocated storage for a uniform data type",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/slab@0.4.11",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/tokio-rs/slab"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#smallstr@0.3.1",
      "author": "Murarth <murarth@gmail.com>",
      "name": "smallstr",
      "version": "0.3.1",
      "description": "String-like container based on smallvec",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/smallstr@0.3.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/smallstr/"
        },
        {
          "type": "website",
          "url": "https://github.com/murarth/smallstr"
        },
        {
          "type": "vcs",
          "url": "https://github.com/murarth/smallstr"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#smallvec@1.15.1",
      "author": "The Servo Project Developers",
      "name": "smallvec",
      "version": "1.15.1",
      "description": "'Small vector' optimization: store up to a small number of items on the stack",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/smallvec@1.15.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/smallvec/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/servo/rust-smallvec"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#socket2@0.5.10",
      "author": "Alex Crichton <alex@alexcrichton.com>, Thomas de Zeeuw <thomasdezeeuw@gmail.com>",
      "name": "socket2",
      "version": "0.5.10",
      "description": "Utilities for handling networking sockets with a maximal amount of configuration possible intended. ",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/socket2@0.5.10",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/socket2"
        },
        {
          "type": "website",
          "url": "https://github.com/rust-lang/socket2"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rust-lang/socket2"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#socket2@0.6.0",
      "author": "Alex Crichton <alex@alexcrichton.com>, Thomas de Zeeuw <thomasdezeeuw@gmail.com>",
      "name": "socket2",
      "version": "0.6.0",
      "description": "Utilities for handling networking sockets with a maximal amount of configuration possible intended. ",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/socket2@0.6.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/socket2"
        },
        {
          "type": "website",
          "url": "https://github.com/rust-lang/socket2"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rust-lang/socket2"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#spin@0.9.8",
      "author": "Mathijs van de Nes <git@mathijs.vd-nes.nl>, John Ericson <git@JohnEricson.me>, Joshua Barretto <joshua.s.barretto@gmail.com>",
      "name": "spin",
      "version": "0.9.8",
      "description": "Spin-based synchronization primitives",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/spin@0.9.8",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/mvdnes/spin-rs.git"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#spki@0.5.4",
      "author": "RustCrypto Developers",
      "name": "spki",
      "version": "0.5.4",
      "description": "X.509 Subject Public Key Info (RFC5280) describing public keys as well as their associated AlgorithmIdentifiers (i.e. OIDs) ",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/spki@0.5.4",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/RustCrypto/formats/tree/master/spki"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#spki@0.7.3",
      "author": "RustCrypto Developers",
      "name": "spki",
      "version": "0.7.3",
      "description": "X.509 Subject Public Key Info (RFC5280) describing public keys as well as their associated AlgorithmIdentifiers (i.e. OIDs) ",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/spki@0.7.3",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/RustCrypto/formats/tree/master/spki"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#sshkeys@0.3.3",
      "author": "Marin Atanasov Nikolov <dnaeon@gmail.com>",
      "name": "sshkeys",
      "version": "0.3.3",
      "description": "Rust library for parsing OpenSSH certificates and public keys",
      "scope": "required",
      "licenses": [
        {
          "license": {
            "name": "Unknown",
            "text": {
              "encoding": "base64",
              "content": "Q29weXJpZ2h0IChjKSAyMDE3IE1hcmluIEF0YW5hc292IE5pa29sb3YgPGRuYWVvbkBnbWFpbC5jb20+CkFsbCByaWdodHMgcmVzZXJ2ZWQuCgpSZWRpc3RyaWJ1dGlvbiBhbmQgdXNlIGluIHNvdXJjZSBhbmQgYmluYXJ5IGZvcm1zLCB3aXRoIG9yIHdpdGhvdXQKbW9kaWZpY2F0aW9uLCBhcmUgcGVybWl0dGVkIHByb3ZpZGVkIHRoYXQgdGhlIGZvbGxvd2luZyBjb25kaXRpb25zCmFyZSBtZXQ6CgogMS4gUmVkaXN0cmlidXRpb25zIG9mIHNvdXJjZSBjb2RlIG11c3QgcmV0YWluIHRoZSBhYm92ZSBjb3B5cmlnaHQKICAgIG5vdGljZSwgdGhpcyBsaXN0IG9mIGNvbmRpdGlvbnMgYW5kIHRoZSBmb2xsb3dpbmcgZGlzY2xhaW1lcgogICAgaW4gdGhpcyBwb3NpdGlvbiBhbmQgdW5jaGFuZ2VkLgogMi4gUmVkaXN0cmlidXRpb25zIGluIGJpbmFyeSBmb3JtIG11c3QgcmVwcm9kdWNlIHRoZSBhYm92ZSBjb3B5cmlnaHQKICAgIG5vdGljZSwgdGhpcyBsaXN0IG9mIGNvbmRpdGlvbnMgYW5kIHRoZSBmb2xsb3dpbmcgZGlzY2xhaW1lciBpbiB0aGUKICAgIGRvY3VtZW50YXRpb24gYW5kL29yIG90aGVyIG1hdGVyaWFscyBwcm92aWRlZCB3aXRoIHRoZSBkaXN0cmlidXRpb24uCgpUSElTIFNPRlRXQVJFIElTIFBST1ZJREVEIEJZIFRIRSBBVVRIT1IoUykgYGBBUyBJUycnIEFORCBBTlkgRVhQUkVTUyBPUgpJTVBMSUVEIFdBUlJBTlRJRVMsIElOQ0xVRElORywgQlVUIE5PVCBMSU1JVEVEIFRPLCBUSEUgSU1QTElFRCBXQVJSQU5USUVTCk9GIE1FUkNIQU5UQUJJTElUWSBBTkQgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQVJFIERJU0NMQUlNRUQuCklOIE5PIEVWRU5UIFNIQUxMIFRIRSBBVVRIT1IoUykgQkUgTElBQkxFIEZPUiBBTlkgRElSRUNULCBJTkRJUkVDVCwKSU5DSURFTlRBTCwgU1BFQ0lBTCwgRVhFTVBMQVJZLCBPUiBDT05TRVFVRU5USUFMIERBTUFHRVMgKElOQ0xVRElORywgQlVUCk5PVCBMSU1JVEVEIFRPLCBQUk9DVVJFTUVOVCBPRiBTVUJTVElUVVRFIEdPT0RTIE9SIFNFUlZJQ0VTOyBMT1NTIE9GIFVTRSwKREFUQSwgT1IgUFJPRklUUzsgT1IgQlVTSU5FU1MgSU5URVJSVVBUSU9OKSBIT1dFVkVSIENBVVNFRCBBTkQgT04gQU5ZClRIRU9SWSBPRiBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQ09OVFJBQ1QsIFNUUklDVCBMSUFCSUxJVFksIE9SIFRPUlQKKElOQ0xVRElORyBORUdMSUdFTkNFIE9SIE9USEVSV0lTRSkgQVJJU0lORyBJTiBBTlkgV0FZIE9VVCBPRiBUSEUgVVNFIE9GClRISVMgU09GVFdBUkUsIEVWRU4gSUYgQURWSVNFRCBPRiBUSEUgUE9TU0lCSUxJVFkgT0YgU1VDSCBEQU1BR0UuCg=="
            }
          }
        }
      ],
      "purl": "pkg:cargo/sshkeys@0.3.3",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/sshkeys"
        },
        {
          "type": "vcs",
          "url": "https://github.com/dnaeon/rust-sshkeys"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#ssi-caips@0.2.2",
      "author": "Spruce Systems, Inc.",
      "name": "ssi-caips",
      "version": "0.2.2",
      "description": "Implementation of CAIPS for the ssi library.",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/ssi-caips@0.2.2",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/ssi-caips/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/spruceid/ssi/"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#ssi-claims-core@0.1.3",
      "author": "Spruce Systems, Inc.",
      "name": "ssi-claims-core",
      "version": "0.1.3",
      "description": "Core types and traits for Verifiable Claims in the `ssi` library.",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/ssi-claims-core@0.1.3",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/ssi-claims/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/spruceid/ssi/"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#ssi-claims@0.4.0",
      "author": "Spruce Systems, Inc.",
      "name": "ssi-claims",
      "version": "0.4.0",
      "description": "Verifiable Claims for the `ssi` library.",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/ssi-claims@0.4.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/ssi-claims/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/spruceid/ssi/"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#ssi-contexts@0.1.10",
      "author": "Spruce Systems, Inc.",
      "name": "ssi-contexts",
      "version": "0.1.10",
      "description": "JSON-LD context files related to Verifiable Credentials, Decentralized Identifiers, and Linked Data Proofs",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/ssi-contexts@0.1.10",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/ssi-contexts/"
        },
        {
          "type": "website",
          "url": "https://github.com/spruceid/ssi/tree/main/contexts/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/spruceid/ssi/"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#ssi-core@0.2.3",
      "author": "Spruce Systems, Inc.",
      "name": "ssi-core",
      "version": "0.2.3",
      "description": "Core types and traits for the ssi library.",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/ssi-core@0.2.3",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/ssi-core/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/spruceid/ssi/"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#ssi-cose@0.1.0",
      "author": "Spruce Systems, Inc.",
      "name": "ssi-cose",
      "version": "0.1.0",
      "description": "CBOR Object Signing and Encryption for the `ssi` library.",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/ssi-cose@0.1.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/ssi-cose/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/spruceid/ssi/"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#ssi-crypto@0.2.1",
      "author": "Spruce Systems, Inc.",
      "name": "ssi-crypto",
      "version": "0.2.1",
      "description": "Implementation of various hashes and signatures for the ssi library.",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/ssi-crypto@0.2.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/ssi-crypto/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/spruceid/ssi/"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#ssi-data-integrity-core@0.3.0",
      "author": "Spruce Systems, Inc.",
      "name": "ssi-data-integrity-core",
      "version": "0.3.0",
      "description": "Verifiable Credential Data Integrity 1.0 core implementation for the `ssi` library.",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/ssi-data-integrity-core@0.3.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/ssi-data-integrity/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/spruceid/ssi/"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#ssi-data-integrity-suites@0.2.0",
      "author": "Spruce Systems, Inc.",
      "name": "ssi-data-integrity-suites",
      "version": "0.2.0",
      "description": "Verifiable Credential Data Integrity 1.0 cryptosuites for the `ssi` library.",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/ssi-data-integrity-suites@0.2.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/ssi-data-integrity/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/spruceid/ssi/"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#ssi-data-integrity@0.2.0",
      "author": "Spruce Systems, Inc.",
      "name": "ssi-data-integrity",
      "version": "0.2.0",
      "description": "Verifiable Credentials Data Model v1.1 for the `ssi` library.",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/ssi-data-integrity@0.2.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/ssi-claims/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/spruceid/ssi/"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#ssi-di-sd-primitives@0.2.1",
      "author": "Spruce Systems, Inc.",
      "name": "ssi-di-sd-primitives",
      "version": "0.2.1",
      "description": "Selective Disclosure primitive for Data-Integrity suites",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/ssi-di-sd-primitives@0.2.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/ssi-di-sd-primitives/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/spruceid/ssi/"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#ssi-dids-core@0.1.3",
      "author": "Spruce Systems, Inc.",
      "name": "ssi-dids-core",
      "version": "0.1.3",
      "description": "Core types and traits for DIDs for the ssi library.",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/ssi-dids-core@0.1.3",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/ssi-dids-core/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/spruceid/ssi/"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#ssi-dids@0.2.1",
      "author": "Spruce Systems, Inc.",
      "name": "ssi-dids",
      "version": "0.2.1",
      "description": "DID methods of the ssi library.",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/ssi-dids@0.2.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/ssi-dids/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/spruceid/ssi/"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#ssi-eip712@0.1.1",
      "author": "Spruce Systems, Inc.",
      "name": "ssi-eip712",
      "version": "0.1.1",
      "description": "Ethereum's typed structured data hashing and signing (EIP-712)",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/ssi-eip712@0.1.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/ssi-eip712/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/spruceid/ssi/"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#ssi-json-ld@0.3.2",
      "author": "Spruce Systems, Inc.",
      "name": "ssi-json-ld",
      "version": "0.3.2",
      "description": "JSON-LD-related definitions for the ssi library.",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/ssi-json-ld@0.3.2",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/ssi-json-ld/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/spruceid/ssi/"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#ssi-jwk@0.3.2",
      "author": "Spruce Systems, Inc.",
      "name": "ssi-jwk",
      "version": "0.3.2",
      "description": "Implementation of JWK for the ssi library.",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/ssi-jwk@0.3.2",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/ssi-jwk/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/spruceid/ssi/"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#ssi-jws@0.3.1",
      "author": "Spruce Systems, Inc.",
      "name": "ssi-jws",
      "version": "0.3.1",
      "description": "Implementation of JWS for the ssi library.",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/ssi-jws@0.3.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/ssi-jws/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/spruceid/ssi/"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#ssi-jwt@0.3.1",
      "author": "Spruce Systems, Inc.",
      "name": "ssi-jwt",
      "version": "0.3.1",
      "description": "Implementation of JWT for the ssi library.",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/ssi-jwt@0.3.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/ssi-jwt/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/spruceid/ssi/"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#ssi-multicodec@0.2.0",
      "author": "Spruce Systems, Inc.",
      "name": "ssi-multicodec",
      "version": "0.2.0",
      "description": "Implementation of the Multicodec specification for the ssi library",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/ssi-multicodec@0.2.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/ssi-multicodec/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/spruceid/ssi/"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#ssi-rdf@0.1.1",
      "author": "Spruce Systems, Inc.",
      "name": "ssi-rdf",
      "version": "0.1.1",
      "description": "Resource Description Framework (RDF) utilities for the `ssi` library.",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/ssi-rdf@0.1.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/ssi-rdf/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/spruceid/ssi/"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#ssi-sd-jwt@0.3.1",
      "author": "Spruce Systems, Inc.",
      "name": "ssi-sd-jwt",
      "version": "0.3.1",
      "description": "Implementation of SD-JWT for the ssi library.",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/ssi-sd-jwt@0.3.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/ssi-sd-jwt/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/spruceid/ssi/"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#ssi-security@0.1.0",
      "author": "Spruce Systems, Inc.",
      "name": "ssi-security",
      "version": "0.1.0",
      "description": "Security Vocabulary implementation for the `ssi` library.",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/ssi-security@0.1.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/ssi-vc/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/spruceid/ssi/"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#ssi-ssh@0.2.1",
      "author": "Spruce Systems, Inc.",
      "name": "ssi-ssh",
      "version": "0.2.1",
      "description": "Implementation of SSH related functionalities for the ssi library.",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/ssi-ssh@0.2.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/ssi-ssh/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/spruceid/ssi/"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#ssi-status@0.5.0",
      "author": "Spruce Systems, Inc.",
      "name": "ssi-status",
      "version": "0.5.0",
      "description": "Status Lists implementations for the `ssi` library.",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/ssi-status@0.5.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/ssi-status/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/spruceid/ssi/"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#ssi-ucan@0.2.2",
      "author": "Spruce Systems, Inc.",
      "name": "ssi-ucan",
      "version": "0.2.2",
      "description": "Implementation of UCANs for the ssi library.",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/ssi-ucan@0.2.2",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/ssi-ucan/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/spruceid/ssi/"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#ssi-vc-jose-cose@0.4.0",
      "author": "Spruce Systems, Inc.",
      "name": "ssi-vc-jose-cose",
      "version": "0.4.0",
      "description": "Securing Verifiable Credentials using JOSE and COSE with the `ssi` library.",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/ssi-vc-jose-cose@0.4.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/vc-jose-cose/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/spruceid/ssi/"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#ssi-vc@0.6.1",
      "author": "Spruce Systems, Inc.",
      "name": "ssi-vc",
      "version": "0.6.1",
      "description": "Verifiable Credentials Data Model v1.1 for the `ssi` library.",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/ssi-vc@0.6.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/ssi-claims/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/spruceid/ssi/"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#ssi-verification-methods-core@0.1.2",
      "author": "Spruce Systems, Inc.",
      "name": "ssi-verification-methods-core",
      "version": "0.1.2",
      "description": "Core traits and types for verification methods in ssi",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/ssi-verification-methods-core@0.1.2",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/ssi-verification-methods/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/spruceid/ssi/"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#ssi-verification-methods@0.1.3",
      "author": "Spruce Systems, Inc.",
      "name": "ssi-verification-methods",
      "version": "0.1.3",
      "description": "Verification methods implementation for ssi",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/ssi-verification-methods@0.1.3",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/ssi-verification-methods/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/spruceid/ssi/"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#ssi-zcap-ld@0.5.0",
      "author": "Spruce Systems, Inc.",
      "name": "ssi-zcap-ld",
      "version": "0.5.0",
      "description": "Implementation of ZCAP-LD for the ssi library.",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/ssi-zcap-ld@0.5.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/ssi-zcap-ld/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/spruceid/ssi/"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#ssi@0.12.0",
      "author": "Spruce Systems, Inc.",
      "name": "ssi",
      "version": "0.12.0",
      "description": "Core library for Verifiable Credentials and Decentralized Identifiers.",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/ssi@0.12.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/ssi/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/spruceid/ssi/"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#stable_deref_trait@1.2.0",
      "author": "Robert Grosse <n210241048576@gmail.com>",
      "name": "stable_deref_trait",
      "version": "1.2.0",
      "description": "An unsafe marker trait for types like Box and Rc that dereference to a stable address even when moved, and hence can be used with libraries such as owning_ref and rental. ",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/stable_deref_trait@1.2.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/stable_deref_trait/1.2.0/stable_deref_trait"
        },
        {
          "type": "vcs",
          "url": "https://github.com/storyyeller/stable_deref_trait"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#static-iref@3.0.0",
      "author": "Timothée Haudebourg <author@haudebourg.net>",
      "name": "static-iref",
      "version": "3.0.0",
      "description": "Build static IRI and IRI references at compile time",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/static-iref@3.0.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/static-iref"
        },
        {
          "type": "vcs",
          "url": "https://github.com/timothee-haudebourg/static-iref"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#static-regular-grammar@2.0.2",
      "author": "Timothée Haudebourg <author@haudebourg.net>",
      "name": "static-regular-grammar",
      "version": "2.0.2",
      "description": "Derive macro for static regular grammar",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/static-regular-grammar@2.0.2",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/static-regular-grammar"
        },
        {
          "type": "vcs",
          "url": "https://github.com/timothee-haudebourg/static-regular-grammar"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#static_assertions@1.1.0",
      "author": "Nikolai Vazquez",
      "name": "static_assertions",
      "version": "1.1.0",
      "description": "Compile-time assertions to ensure that invariants are met.",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/static_assertions@1.1.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/static_assertions/"
        },
        {
          "type": "website",
          "url": "https://github.com/nvzqz/static-assertions-rs"
        },
        {
          "type": "vcs",
          "url": "https://github.com/nvzqz/static-assertions-rs"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#strsim@0.10.0",
      "author": "Danny Guo <danny@dannyguo.com>",
      "name": "strsim",
      "version": "0.10.0",
      "description": "Implementations of string similarity metrics. Includes Hamming, Levenshtein, OSA, Damerau-Levenshtein, Jaro, Jaro-Winkler, and Sørensen-Dice. ",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/strsim@0.10.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/strsim/"
        },
        {
          "type": "website",
          "url": "https://github.com/dguo/strsim-rs"
        },
        {
          "type": "vcs",
          "url": "https://github.com/dguo/strsim-rs"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#strsim@0.11.1",
      "author": "Danny Guo <danny@dannyguo.com>, maxbachmann <oss@maxbachmann.de>",
      "name": "strsim",
      "version": "0.11.1",
      "description": "Implementations of string similarity metrics. Includes Hamming, Levenshtein, OSA, Damerau-Levenshtein, Jaro, Jaro-Winkler, and Sørensen-Dice. ",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/strsim@0.11.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/strsim/"
        },
        {
          "type": "website",
          "url": "https://github.com/rapidfuzz/strsim-rs"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rapidfuzz/strsim-rs"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#subtle@2.6.1",
      "author": "Isis Lovecruft <isis@patternsinthevoid.net>, Henry de Valence <hdevalence@hdevalence.ca>",
      "name": "subtle",
      "version": "2.6.1",
      "description": "Pure-Rust traits and utilities for constant-time cryptographic implementations.",
      "scope": "required",
      "licenses": [
        {
          "expression": "BSD-3-Clause"
        }
      ],
      "purl": "pkg:cargo/subtle@2.6.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/subtle"
        },
        {
          "type": "website",
          "url": "https://dalek.rs/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/dalek-cryptography/subtle"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#syn@1.0.109",
      "author": "David Tolnay <dtolnay@gmail.com>",
      "name": "syn",
      "version": "1.0.109",
      "description": "Parser for Rust source code",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/syn@1.0.109",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/syn"
        },
        {
          "type": "vcs",
          "url": "https://github.com/dtolnay/syn"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.105",
      "author": "David Tolnay <dtolnay@gmail.com>",
      "name": "syn",
      "version": "2.0.105",
      "description": "Parser for Rust source code",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/syn@2.0.105",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/syn"
        },
        {
          "type": "vcs",
          "url": "https://github.com/dtolnay/syn"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#sync_wrapper@0.1.2",
      "author": "Actyx AG <developer@actyx.io>",
      "name": "sync_wrapper",
      "version": "0.1.2",
      "description": "A tool for enlisting the compiler’s help in proving the absence of concurrency",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/sync_wrapper@0.1.2",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/sync_wrapper"
        },
        {
          "type": "website",
          "url": "https://docs.rs/sync_wrapper"
        },
        {
          "type": "vcs",
          "url": "https://github.com/Actyx/sync_wrapper"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#sync_wrapper@1.0.2",
      "author": "Actyx AG <developer@actyx.io>",
      "name": "sync_wrapper",
      "version": "1.0.2",
      "description": "A tool for enlisting the compiler's help in proving the absence of concurrency",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/sync_wrapper@1.0.2",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/sync_wrapper"
        },
        {
          "type": "website",
          "url": "https://docs.rs/sync_wrapper"
        },
        {
          "type": "vcs",
          "url": "https://github.com/Actyx/sync_wrapper"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#synstructure@0.12.6",
      "author": "Nika Layzell <nika@thelayzells.com>",
      "name": "synstructure",
      "version": "0.12.6",
      "description": "Helper methods and macros for custom derives",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/synstructure@0.12.6",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/synstructure"
        },
        {
          "type": "vcs",
          "url": "https://github.com/mystor/synstructure"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#synstructure@0.13.2",
      "author": "Nika Layzell <nika@thelayzells.com>",
      "name": "synstructure",
      "version": "0.13.2",
      "description": "Helper methods and macros for custom derives",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/synstructure@0.13.2",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/synstructure"
        },
        {
          "type": "vcs",
          "url": "https://github.com/mystor/synstructure"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#system-configuration-sys@0.5.0",
      "author": "Mullvad VPN",
      "name": "system-configuration-sys",
      "version": "0.5.0",
      "description": "Low level bindings to SystemConfiguration framework for macOS",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/system-configuration-sys@0.5.0",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/mullvad/system-configuration-rs"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#system-configuration-sys@0.6.0",
      "author": "Mullvad VPN",
      "name": "system-configuration-sys",
      "version": "0.6.0",
      "description": "Low level bindings to SystemConfiguration framework for macOS",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/system-configuration-sys@0.6.0",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/mullvad/system-configuration-rs"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#system-configuration@0.5.1",
      "author": "Mullvad VPN",
      "name": "system-configuration",
      "version": "0.5.1",
      "description": "Bindings to SystemConfiguration framework for macOS",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/system-configuration@0.5.1",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/mullvad/system-configuration-rs"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#system-configuration@0.6.1",
      "author": "Mullvad VPN",
      "name": "system-configuration",
      "version": "0.6.1",
      "description": "Bindings to SystemConfiguration framework for macOS",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/system-configuration@0.6.1",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/mullvad/system-configuration-rs"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#tagptr@0.2.0",
      "author": "Oliver Giersch",
      "name": "tagptr",
      "version": "0.2.0",
      "description": "Strongly typed atomic and non-atomic tagged pointers",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/tagptr@0.2.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/tagptr"
        },
        {
          "type": "vcs",
          "url": "https://github.com/oliver-giersch/tagptr.git"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#tap@1.0.1",
      "author": "Elliott Linder <elliott.darfink@gmail.com>, myrrlyn <self@myrrlyn.dev>",
      "name": "tap",
      "version": "1.0.1",
      "description": "Generic extensions for tapping values in Rust",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/tap@1.0.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/tap"
        },
        {
          "type": "website",
          "url": "https://github.com/myrrlyn/tap"
        },
        {
          "type": "vcs",
          "url": "https://github.com/myrrlyn/tap"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#tempfile@3.20.0",
      "author": "Steven Allen <steven@stebalien.com>, The Rust Project Developers, Ashley Mannix <ashleymannix@live.com.au>, Jason White <me@jasonwhite.io>",
      "name": "tempfile",
      "version": "3.20.0",
      "description": "A library for managing temporary files and directories.",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/tempfile@3.20.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/tempfile"
        },
        {
          "type": "website",
          "url": "https://stebalien.com/projects/tempfile-rs/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/Stebalien/tempfile"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#thiserror-impl@1.0.69",
      "author": "David Tolnay <dtolnay@gmail.com>",
      "name": "thiserror-impl",
      "version": "1.0.69",
      "description": "Implementation detail of the `thiserror` crate",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/thiserror-impl@1.0.69",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/dtolnay/thiserror"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#thiserror-impl@2.0.14",
      "author": "David Tolnay <dtolnay@gmail.com>",
      "name": "thiserror-impl",
      "version": "2.0.14",
      "description": "Implementation detail of the `thiserror` crate",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/thiserror-impl@2.0.14",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/dtolnay/thiserror"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#thiserror@1.0.69",
      "author": "David Tolnay <dtolnay@gmail.com>",
      "name": "thiserror",
      "version": "1.0.69",
      "description": "derive(Error)",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/thiserror@1.0.69",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/thiserror"
        },
        {
          "type": "vcs",
          "url": "https://github.com/dtolnay/thiserror"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#thiserror@2.0.14",
      "author": "David Tolnay <dtolnay@gmail.com>",
      "name": "thiserror",
      "version": "2.0.14",
      "description": "derive(Error)",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/thiserror@2.0.14",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/thiserror"
        },
        {
          "type": "vcs",
          "url": "https://github.com/dtolnay/thiserror"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#thread_local@1.1.9",
      "author": "Amanieu d'Antras <amanieu@gmail.com>",
      "name": "thread_local",
      "version": "1.1.9",
      "description": "Per-object thread-local storage",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/thread_local@1.1.9",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/thread_local/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/Amanieu/thread_local-rs"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#time-core@0.1.4",
      "author": "Jacob Pratt <open-source@jhpratt.dev>, Time contributors",
      "name": "time-core",
      "version": "0.1.4",
      "description": "This crate is an implementation detail and should not be relied upon directly.",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/time-core@0.1.4",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/time-rs/time"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#time-macros@0.2.22",
      "author": "Jacob Pratt <open-source@jhpratt.dev>, Time contributors",
      "name": "time-macros",
      "version": "0.2.22",
      "description": "    Procedural macros for the time crate.     This crate is an implementation detail and should not be relied upon directly. ",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/time-macros@0.2.22",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/time-rs/time"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#time@0.3.41",
      "author": "Jacob Pratt <open-source@jhpratt.dev>, Time contributors",
      "name": "time",
      "version": "0.3.41",
      "description": "Date and time library. Fully interoperable with the standard library. Mostly compatible with #![no_std].",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/time@0.3.41",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://time-rs.github.io"
        },
        {
          "type": "vcs",
          "url": "https://github.com/time-rs/time"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#tiny-keccak@2.0.2",
      "author": "debris <marek.kotewicz@gmail.com>",
      "name": "tiny-keccak",
      "version": "2.0.2",
      "description": "An implementation of Keccak derived functions.",
      "scope": "required",
      "licenses": [
        {
          "expression": "CC0-1.0"
        }
      ],
      "purl": "pkg:cargo/tiny-keccak@2.0.2",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://github.com/debris/tiny-keccak"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#tinystr@0.8.1",
      "author": "The ICU4X Project Developers",
      "name": "tinystr",
      "version": "0.8.1",
      "description": "A small ASCII-only bounded length string representation.",
      "scope": "required",
      "licenses": [
        {
          "expression": "Unicode-3.0"
        }
      ],
      "purl": "pkg:cargo/tinystr@0.8.1",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/unicode-org/icu4x"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#tinyvec@1.9.0",
      "author": "Lokathor <zefria@gmail.com>",
      "name": "tinyvec",
      "version": "1.9.0",
      "description": "`tinyvec` provides 100% safe vec-like data structures.",
      "scope": "required",
      "licenses": [
        {
          "expression": "Zlib OR Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/tinyvec@1.9.0",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/Lokathor/tinyvec"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#tinyvec_macros@0.1.1",
      "author": "Soveu <marx.tomasz@gmail.com>",
      "name": "tinyvec_macros",
      "version": "0.1.1",
      "description": "Some macros for tiny containers",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0 OR Zlib"
        }
      ],
      "purl": "pkg:cargo/tinyvec_macros@0.1.1",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/Soveu/tinyvec_macros"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#tokio-macros@2.5.0",
      "author": "Tokio Contributors <team@tokio.rs>",
      "name": "tokio-macros",
      "version": "2.5.0",
      "description": "Tokio's proc macros. ",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/tokio-macros@2.5.0",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://tokio.rs"
        },
        {
          "type": "vcs",
          "url": "https://github.com/tokio-rs/tokio"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#tokio-native-tls@0.3.1",
      "author": "Tokio Contributors <team@tokio.rs>",
      "name": "tokio-native-tls",
      "version": "0.3.1",
      "description": "An implementation of TLS/SSL streams for Tokio using native-tls giving an implementation of TLS for nonblocking I/O streams. ",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/tokio-native-tls@0.3.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/tokio-native-tls"
        },
        {
          "type": "website",
          "url": "https://tokio.rs"
        },
        {
          "type": "vcs",
          "url": "https://github.com/tokio-rs/tls"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#tokio-rustls@0.24.1",
      "name": "tokio-rustls",
      "version": "0.24.1",
      "description": "Asynchronous TLS/SSL streams for Tokio using Rustls.",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/tokio-rustls@0.24.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/tokio-rustls"
        },
        {
          "type": "website",
          "url": "https://github.com/rustls/tokio-rustls"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rustls/tokio-rustls"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#tokio-rustls@0.26.2",
      "name": "tokio-rustls",
      "version": "0.26.2",
      "description": "Asynchronous TLS/SSL streams for Tokio using Rustls.",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/tokio-rustls@0.26.2",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/tokio-rustls"
        },
        {
          "type": "website",
          "url": "https://github.com/rustls/tokio-rustls"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rustls/tokio-rustls"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#tokio-util@0.7.16",
      "author": "Tokio Contributors <team@tokio.rs>",
      "name": "tokio-util",
      "version": "0.7.16",
      "description": "Additional utilities for working with Tokio. ",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/tokio-util@0.7.16",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://tokio.rs"
        },
        {
          "type": "vcs",
          "url": "https://github.com/tokio-rs/tokio"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#tokio@1.47.1",
      "author": "Tokio Contributors <team@tokio.rs>",
      "name": "tokio",
      "version": "1.47.1",
      "description": "An event-driven, non-blocking I/O platform for writing asynchronous I/O backed applications. ",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/tokio@1.47.1",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://tokio.rs"
        },
        {
          "type": "vcs",
          "url": "https://github.com/tokio-rs/tokio"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#toml@0.5.11",
      "author": "Alex Crichton <alex@alexcrichton.com>",
      "name": "toml",
      "version": "0.5.11",
      "description": "A native Rust encoder and decoder of TOML-formatted files and streams. Provides implementations of the standard Serialize/Deserialize traits for TOML data to facilitate deserializing and serializing Rust structures. ",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/toml@0.5.11",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/toml"
        },
        {
          "type": "website",
          "url": "https://github.com/toml-rs/toml"
        },
        {
          "type": "vcs",
          "url": "https://github.com/toml-rs/toml"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#tower-http@0.6.6",
      "author": "Tower Maintainers <team@tower-rs.com>",
      "name": "tower-http",
      "version": "0.6.6",
      "description": "Tower middleware and utilities for HTTP clients and servers",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/tower-http@0.6.6",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://github.com/tower-rs/tower-http"
        },
        {
          "type": "vcs",
          "url": "https://github.com/tower-rs/tower-http"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#tower-layer@0.3.3",
      "author": "Tower Maintainers <team@tower-rs.com>",
      "name": "tower-layer",
      "version": "0.3.3",
      "description": "Decorates a `Service` to allow easy composition between `Service`s. ",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/tower-layer@0.3.3",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/tower-layer/0.3.3"
        },
        {
          "type": "website",
          "url": "https://github.com/tower-rs/tower"
        },
        {
          "type": "vcs",
          "url": "https://github.com/tower-rs/tower"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#tower-service@0.3.3",
      "author": "Tower Maintainers <team@tower-rs.com>",
      "name": "tower-service",
      "version": "0.3.3",
      "description": "Trait representing an asynchronous, request / response based, client or server. ",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/tower-service@0.3.3",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/tower-service/0.3.3"
        },
        {
          "type": "website",
          "url": "https://github.com/tower-rs/tower"
        },
        {
          "type": "vcs",
          "url": "https://github.com/tower-rs/tower"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#tower@0.5.2",
      "author": "Tower Maintainers <team@tower-rs.com>",
      "name": "tower",
      "version": "0.5.2",
      "description": "Tower is a library of modular and reusable components for building robust clients and servers. ",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/tower@0.5.2",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://github.com/tower-rs/tower"
        },
        {
          "type": "vcs",
          "url": "https://github.com/tower-rs/tower"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#tracing-attributes@0.1.30",
      "author": "Tokio Contributors <team@tokio.rs>, Eliza Weisman <eliza@buoyant.io>, David Barsky <dbarsky@amazon.com>",
      "name": "tracing-attributes",
      "version": "0.1.30",
      "description": "Procedural macro attributes for automatically instrumenting functions. ",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/tracing-attributes@0.1.30",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://tokio.rs"
        },
        {
          "type": "vcs",
          "url": "https://github.com/tokio-rs/tracing"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#tracing-core@0.1.34",
      "author": "Tokio Contributors <team@tokio.rs>",
      "name": "tracing-core",
      "version": "0.1.34",
      "description": "Core primitives for application-level tracing. ",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/tracing-core@0.1.34",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://tokio.rs"
        },
        {
          "type": "vcs",
          "url": "https://github.com/tokio-rs/tracing"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#tracing-log@0.2.0",
      "author": "Tokio Contributors <team@tokio.rs>",
      "name": "tracing-log",
      "version": "0.2.0",
      "description": "Provides compatibility between `tracing` and the `log` crate. ",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/tracing-log@0.2.0",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://tokio.rs"
        },
        {
          "type": "vcs",
          "url": "https://github.com/tokio-rs/tracing"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#tracing-serde@0.2.0",
      "author": "Tokio Contributors <team@tokio.rs>",
      "name": "tracing-serde",
      "version": "0.2.0",
      "description": "A compatibility layer for serializing trace data with `serde` ",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/tracing-serde@0.2.0",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://tokio.rs"
        },
        {
          "type": "vcs",
          "url": "https://github.com/tokio-rs/tracing"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#tracing-subscriber@0.3.19",
      "author": "Eliza Weisman <eliza@buoyant.io>, David Barsky <me@davidbarsky.com>, Tokio Contributors <team@tokio.rs>",
      "name": "tracing-subscriber",
      "version": "0.3.19",
      "description": "Utilities for implementing and composing `tracing` subscribers. ",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/tracing-subscriber@0.3.19",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://tokio.rs"
        },
        {
          "type": "vcs",
          "url": "https://github.com/tokio-rs/tracing"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#tracing@0.1.41",
      "author": "Eliza Weisman <eliza@buoyant.io>, Tokio Contributors <team@tokio.rs>",
      "name": "tracing",
      "version": "0.1.41",
      "description": "Application-level tracing for Rust. ",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/tracing@0.1.41",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://tokio.rs"
        },
        {
          "type": "vcs",
          "url": "https://github.com/tokio-rs/tracing"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#treediff@3.0.2",
      "author": "Sebastian Thiel <byronimo@gmail.com>",
      "name": "treediff",
      "version": "3.0.2",
      "description": "Find the difference between arbitrary data structures",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/treediff@3.0.2",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/treediff"
        },
        {
          "type": "vcs",
          "url": "https://github.com/Byron/treediff-rs"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#try-lock@0.2.5",
      "author": "Sean McArthur <sean@seanmonstar.com>",
      "name": "try-lock",
      "version": "0.2.5",
      "description": "A lightweight atomic lock.",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/try-lock@0.2.5",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/try-lock"
        },
        {
          "type": "website",
          "url": "https://github.com/seanmonstar/try-lock"
        },
        {
          "type": "vcs",
          "url": "https://github.com/seanmonstar/try-lock"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#typenum@1.18.0",
      "author": "Paho Lurie-Gregg <paho@paholg.com>, Andre Bogus <bogusandre@gmail.com>",
      "name": "typenum",
      "version": "1.18.0",
      "description": "Typenum is a Rust library for type-level numbers evaluated at     compile time. It currently supports bits, unsigned integers, and signed     integers. It also provides a type-level array of type-level numbers, but its     implementation is incomplete.",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/typenum@1.18.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/typenum"
        },
        {
          "type": "vcs",
          "url": "https://github.com/paholg/typenum"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#uint@0.9.5",
      "author": "Parity Technologies <admin@parity.io>",
      "name": "uint",
      "version": "0.9.5",
      "description": "Large fixed-size integer arithmetic",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/uint@0.9.5",
      "externalReferences": [
        {
          "type": "website",
          "url": "http://parity.io"
        },
        {
          "type": "vcs",
          "url": "https://github.com/paritytech/parity-common"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#unicode-ident@1.0.18",
      "author": "David Tolnay <dtolnay@gmail.com>",
      "name": "unicode-ident",
      "version": "1.0.18",
      "description": "Determine whether characters have the XID_Start or XID_Continue properties according to Unicode Standard Annex #31",
      "scope": "required",
      "licenses": [
        {
          "expression": "(MIT OR Apache-2.0) AND Unicode-3.0"
        }
      ],
      "purl": "pkg:cargo/unicode-ident@1.0.18",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/unicode-ident"
        },
        {
          "type": "vcs",
          "url": "https://github.com/dtolnay/unicode-ident"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#unicode-xid@0.2.6",
      "author": "erick.tryzelaar <erick.tryzelaar@gmail.com>, kwantam <kwantam@gmail.com>, Manish Goregaokar <manishsmail@gmail.com>",
      "name": "unicode-xid",
      "version": "0.2.6",
      "description": "Determine whether characters have the XID_Start or XID_Continue properties according to Unicode Standard Annex #31. ",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/unicode-xid@0.2.6",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://unicode-rs.github.io/unicode-xid"
        },
        {
          "type": "website",
          "url": "https://github.com/unicode-rs/unicode-xid"
        },
        {
          "type": "vcs",
          "url": "https://github.com/unicode-rs/unicode-xid"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#universal-hash@0.5.1",
      "author": "RustCrypto Developers",
      "name": "universal-hash",
      "version": "0.5.1",
      "description": "Traits which describe the functionality of universal hash functions (UHFs)",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/universal-hash@0.5.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/universal-hash"
        },
        {
          "type": "vcs",
          "url": "https://github.com/RustCrypto/traits"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#unsigned-varint@0.7.2",
      "author": "Parity Technologies <admin@parity.io>",
      "name": "unsigned-varint",
      "version": "0.7.2",
      "description": "unsigned varint encoding",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/unsigned-varint@0.7.2",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/paritytech/unsigned-varint"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#unsigned-varint@0.8.0",
      "author": "Parity Technologies <admin@parity.io>",
      "name": "unsigned-varint",
      "version": "0.8.0",
      "description": "unsigned varint encoding",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/unsigned-varint@0.8.0",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/paritytech/unsigned-varint"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#untrusted@0.9.0",
      "author": "Brian Smith <brian@briansmith.org>",
      "name": "untrusted",
      "version": "0.9.0",
      "description": "Safe, fast, zero-panic, zero-crashing, zero-allocation parsing of untrusted inputs in Rust.",
      "scope": "required",
      "licenses": [
        {
          "expression": "ISC"
        }
      ],
      "purl": "pkg:cargo/untrusted@0.9.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://briansmith.org/rustdoc/untrusted/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/briansmith/untrusted"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#url@2.5.4",
      "author": "The rust-url developers",
      "name": "url",
      "version": "2.5.4",
      "description": "URL library for Rust, based on the WHATWG URL Standard",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/url@2.5.4",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/url"
        },
        {
          "type": "vcs",
          "url": "https://github.com/servo/rust-url"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#utf8-decode@1.0.1",
      "author": "Timothée Haudebourg <author@haudebourg.net>",
      "name": "utf8-decode",
      "version": "1.0.1",
      "description": "UTF-8 incremental decoding iterators.",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/utf8-decode@1.0.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/utf8-decode"
        },
        {
          "type": "vcs",
          "url": "https://github.com/timothee-haudebourg/utf8-decode"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#utf8_iter@1.0.4",
      "author": "Henri Sivonen <hsivonen@hsivonen.fi>",
      "name": "utf8_iter",
      "version": "1.0.4",
      "description": "Iterator by char over potentially-invalid UTF-8 in &[u8]",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/utf8_iter@1.0.4",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/utf8_iter/"
        },
        {
          "type": "website",
          "url": "https://docs.rs/utf8_iter/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/hsivonen/utf8_iter"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#uuid@1.18.0",
      "author": "Ashley Mannix<ashleymannix@live.com.au>, Dylan DPC<dylan.dpc@gmail.com>, Hunar Roop Kahlon<hunar.roop@gmail.com>",
      "name": "uuid",
      "version": "1.18.0",
      "description": "A library to generate and parse UUIDs.",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/uuid@1.18.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/uuid"
        },
        {
          "type": "website",
          "url": "https://github.com/uuid-rs/uuid"
        },
        {
          "type": "vcs",
          "url": "https://github.com/uuid-rs/uuid"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#valuable-serde@0.1.1",
      "author": "Taiki Endo <te316e89@gmail.com>",
      "name": "valuable-serde",
      "version": "0.1.1",
      "description": "`serde::Serialize` implementation for `Valuable` types.",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/valuable-serde@0.1.1",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/tokio-rs/valuable"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#valuable@0.1.1",
      "name": "valuable",
      "version": "0.1.1",
      "description": "Object-safe value inspection, used to pass un-typed structured data across trait-object boundaries. ",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/valuable@0.1.1",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/tokio-rs/valuable"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#varint@0.9.0",
      "author": "Cruz Julian Bishop <cruzjbishop@gmail.com>",
      "name": "varint",
      "version": "0.9.0",
      "description": "A Rust implementation of Google Protobuf's Variable-Length Integers",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/varint@0.9.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "http://techern.github.io/Varint-rs"
        },
        {
          "type": "vcs",
          "url": "https://github.com/Techern/Varint-rs"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#version_check@0.9.5",
      "author": "Sergio Benitez <sb@sergio.bz>",
      "name": "version_check",
      "version": "0.9.5",
      "description": "Tiny crate to check the version of the installed/running rustc.",
      "scope": "excluded",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/version_check@0.9.5",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/version_check/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/SergioBenitez/version_check"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#want@0.3.1",
      "author": "Sean McArthur <sean@seanmonstar.com>",
      "name": "want",
      "version": "0.3.1",
      "description": "Detect when another Future wants a result.",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/want@0.3.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/want"
        },
        {
          "type": "vcs",
          "url": "https://github.com/seanmonstar/want"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#wasm-bindgen-backend@0.2.100",
      "author": "The wasm-bindgen Developers",
      "name": "wasm-bindgen-backend",
      "version": "0.2.100",
      "description": "Backend code generation of the wasm-bindgen tool ",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/wasm-bindgen-backend@0.2.100",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/wasm-bindgen-backend"
        },
        {
          "type": "website",
          "url": "https://rustwasm.github.io/wasm-bindgen/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rustwasm/wasm-bindgen/tree/master/crates/backend"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#wasm-bindgen-futures@0.4.50",
      "author": "The wasm-bindgen Developers",
      "name": "wasm-bindgen-futures",
      "version": "0.4.50",
      "description": "Bridging the gap between Rust Futures and JavaScript Promises",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/wasm-bindgen-futures@0.4.50",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/wasm-bindgen-futures"
        },
        {
          "type": "website",
          "url": "https://rustwasm.github.io/wasm-bindgen/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rustwasm/wasm-bindgen/tree/master/crates/futures"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#wasm-bindgen-macro-support@0.2.100",
      "author": "The wasm-bindgen Developers",
      "name": "wasm-bindgen-macro-support",
      "version": "0.2.100",
      "description": "The part of the implementation of the `#[wasm_bindgen]` attribute that is not in the shared backend crate ",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/wasm-bindgen-macro-support@0.2.100",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/wasm-bindgen"
        },
        {
          "type": "website",
          "url": "https://rustwasm.github.io/wasm-bindgen/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rustwasm/wasm-bindgen/tree/master/crates/macro-support"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#wasm-bindgen-macro@0.2.100",
      "author": "The wasm-bindgen Developers",
      "name": "wasm-bindgen-macro",
      "version": "0.2.100",
      "description": "Definition of the `#[wasm_bindgen]` attribute, an internal dependency ",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/wasm-bindgen-macro@0.2.100",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/wasm-bindgen"
        },
        {
          "type": "website",
          "url": "https://rustwasm.github.io/wasm-bindgen/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rustwasm/wasm-bindgen/tree/master/crates/macro"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#wasm-bindgen-shared@0.2.100",
      "author": "The wasm-bindgen Developers",
      "name": "wasm-bindgen-shared",
      "version": "0.2.100",
      "description": "Shared support between wasm-bindgen and wasm-bindgen cli, an internal dependency. ",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/wasm-bindgen-shared@0.2.100",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/wasm-bindgen-shared"
        },
        {
          "type": "website",
          "url": "https://rustwasm.github.io/wasm-bindgen/"
        },
        {
          "type": "other",
          "url": "wasm_bindgen"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rustwasm/wasm-bindgen/tree/master/crates/shared"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#wasm-bindgen@0.2.100",
      "author": "The wasm-bindgen Developers",
      "name": "wasm-bindgen",
      "version": "0.2.100",
      "description": "Easy support for interacting between JS and Rust. ",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/wasm-bindgen@0.2.100",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/wasm-bindgen"
        },
        {
          "type": "website",
          "url": "https://rustwasm.github.io/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rustwasm/wasm-bindgen"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#web-socket@0.7.0",
      "author": "Nur <nurmohammed840@gmail.com>",
      "name": "web-socket",
      "version": "0.7.0",
      "description": "Fastest webSocket implementation for both client and server",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/web-socket@0.7.0",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/nurmohammed840/websocket.rs"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#webpki-roots@0.25.4",
      "name": "webpki-roots",
      "version": "0.25.4",
      "description": "Mozilla's CA root certificates for use with webpki",
      "scope": "required",
      "licenses": [
        {
          "expression": "MPL-2.0"
        }
      ],
      "purl": "pkg:cargo/webpki-roots@0.25.4",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://github.com/rustls/webpki-roots"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rustls/webpki-roots"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#writeable@0.6.1",
      "author": "The ICU4X Project Developers",
      "name": "writeable",
      "version": "0.6.1",
      "description": "A more efficient alternative to fmt::Display",
      "scope": "required",
      "licenses": [
        {
          "expression": "Unicode-3.0"
        }
      ],
      "purl": "pkg:cargo/writeable@0.6.1",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/unicode-org/icu4x"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#wyz@0.2.0",
      "author": "myrrlyn <self@myrrlyn.dev>",
      "name": "wyz",
      "version": "0.2.0",
      "description": "myrrlyn’s utility collection",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/wyz@0.2.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/wyz"
        },
        {
          "type": "website",
          "url": "https://myrrlyn.net/crates/wyz"
        },
        {
          "type": "vcs",
          "url": "https://github.com/myrrlyn/wyz"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#x25519-dalek@2.0.1",
      "author": "Isis Lovecruft <isis@patternsinthevoid.net>, DebugSteven <debugsteven@gmail.com>, Henry de Valence <hdevalence@hdevalence.ca>",
      "name": "x25519-dalek",
      "version": "2.0.1",
      "description": "X25519 elliptic curve Diffie-Hellman key exchange in pure-Rust, using curve25519-dalek.",
      "scope": "required",
      "licenses": [
        {
          "expression": "BSD-3-Clause"
        }
      ],
      "purl": "pkg:cargo/x25519-dalek@2.0.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/x25519-dalek"
        },
        {
          "type": "website",
          "url": "https://github.com/dalek-cryptography/curve25519-dalek"
        },
        {
          "type": "vcs",
          "url": "https://github.com/dalek-cryptography/curve25519-dalek/tree/main/x25519-dalek"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#xsd-types@0.9.6",
      "author": "Timothée Haudebourg <author@haudebourg.net>",
      "name": "xsd-types",
      "version": "0.9.6",
      "description": "XSD data types.",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/xsd-types@0.9.6",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/xsd-types"
        },
        {
          "type": "vcs",
          "url": "https://github.com/timothee-haudebourg/xsd-types"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#yoke-derive@0.8.0",
      "author": "Manish Goregaokar <manishsmail@gmail.com>",
      "name": "yoke-derive",
      "version": "0.8.0",
      "description": "Custom derive for the yoke crate",
      "scope": "required",
      "licenses": [
        {
          "expression": "Unicode-3.0"
        }
      ],
      "purl": "pkg:cargo/yoke-derive@0.8.0",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/unicode-org/icu4x"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#yoke@0.8.0",
      "author": "Manish Goregaokar <manishsmail@gmail.com>",
      "name": "yoke",
      "version": "0.8.0",
      "description": "Abstraction allowing borrowed data to be carried along with the backing data it borrows from",
      "scope": "required",
      "licenses": [
        {
          "expression": "Unicode-3.0"
        }
      ],
      "purl": "pkg:cargo/yoke@0.8.0",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/unicode-org/icu4x"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#zerocopy@0.8.26",
      "author": "Joshua Liebow-Feeser <joshlf@google.com>, Jack Wrenn <jswrenn@amazon.com>",
      "name": "zerocopy",
      "version": "0.8.26",
      "description": "Zerocopy makes zero-cost memory manipulation effortless. We write \"unsafe\" so you don't have to.",
      "scope": "required",
      "licenses": [
        {
          "expression": "BSD-2-Clause OR Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/zerocopy@0.8.26",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/google/zerocopy"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#zerofrom-derive@0.1.6",
      "author": "Manish Goregaokar <manishsmail@gmail.com>",
      "name": "zerofrom-derive",
      "version": "0.1.6",
      "description": "Custom derive for the zerofrom crate",
      "scope": "required",
      "licenses": [
        {
          "expression": "Unicode-3.0"
        }
      ],
      "purl": "pkg:cargo/zerofrom-derive@0.1.6",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/unicode-org/icu4x"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#zerofrom@0.1.6",
      "author": "Manish Goregaokar <manishsmail@gmail.com>",
      "name": "zerofrom",
      "version": "0.1.6",
      "description": "ZeroFrom trait for constructing",
      "scope": "required",
      "licenses": [
        {
          "expression": "Unicode-3.0"
        }
      ],
      "purl": "pkg:cargo/zerofrom@0.1.6",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/unicode-org/icu4x"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#zeroize@1.8.1",
      "author": "The RustCrypto Project Developers",
      "name": "zeroize",
      "version": "1.8.1",
      "description": "Securely clear secrets from memory with a simple trait built on stable Rust primitives which guarantee memory is zeroed using an operation will not be 'optimized away' by the compiler. Uses a portable pure Rust implementation that works everywhere, even WASM! ",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/zeroize@1.8.1",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/RustCrypto/utils/tree/master/zeroize"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#zeroize_derive@1.4.2",
      "author": "The RustCrypto Project Developers",
      "name": "zeroize_derive",
      "version": "1.4.2",
      "description": "Custom derive support for zeroize",
      "scope": "required",
      "licenses": [
        {
          "expression": "Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/zeroize_derive@1.4.2",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/RustCrypto/utils/tree/master/zeroize/derive"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#zerotrie@0.2.2",
      "author": "The ICU4X Project Developers",
      "name": "zerotrie",
      "version": "0.2.2",
      "description": "A data structure that efficiently maps strings to integers",
      "scope": "required",
      "licenses": [
        {
          "expression": "Unicode-3.0"
        }
      ],
      "purl": "pkg:cargo/zerotrie@0.2.2",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://icu4x.unicode.org"
        },
        {
          "type": "vcs",
          "url": "https://github.com/unicode-org/icu4x"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#zerovec-derive@0.11.1",
      "author": "Manish Goregaokar <manishsmail@gmail.com>",
      "name": "zerovec-derive",
      "version": "0.11.1",
      "description": "Custom derive for the zerovec crate",
      "scope": "required",
      "licenses": [
        {
          "expression": "Unicode-3.0"
        }
      ],
      "purl": "pkg:cargo/zerovec-derive@0.11.1",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/unicode-org/icu4x"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#zerovec@0.11.4",
      "author": "The ICU4X Project Developers",
      "name": "zerovec",
      "version": "0.11.4",
      "description": "Zero-copy vector backed by a byte array",
      "scope": "required",
      "licenses": [
        {
          "expression": "Unicode-3.0"
        }
      ],
      "purl": "pkg:cargo/zerovec@0.11.4",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/unicode-org/icu4x"
        }
      ]
    }
  ],
  "dependencies": [
    {
      "ref": "path+file:///Users/rolstan/Documents/Affinidi/Work/Projects/affinidi-tdk-rs/crates/affinidi-did-resolver/affinidi-did-resolver-cache-sdk#0.5.6",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#ahash@0.8.12",
        "registry+https://github.com/rust-lang/crates.io-index#base64@0.22.1",
        "path+file:///Users/rolstan/Documents/Affinidi/Work/Projects/affinidi-tdk-rs/crates/affinidi-did-resolver/affinidi-did-resolver-methods/did-example#0.5.4",
        "path+file:///Users/rolstan/Documents/Affinidi/Work/Projects/affinidi-tdk-rs/crates/affinidi-did-resolver/affinidi-did-resolver-methods/did-peer#0.6.3",
        "registry+https://github.com/rust-lang/crates.io-index#didwebvh-rs@0.1.1",
        "registry+https://github.com/rust-lang/crates.io-index#futures-util@0.3.31",
        "registry+https://github.com/rust-lang/crates.io-index#highway@1.3.0",
        "registry+https://github.com/rust-lang/crates.io-index#moka@0.12.10",
        "registry+https://github.com/rust-lang/crates.io-index#rand@0.9.2",
        "registry+https://github.com/rust-lang/crates.io-index#rustls@0.23.31",
        "registry+https://github.com/rust-lang/crates.io-index#rustls-platform-verifier@0.6.1",
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219",
        "registry+https://github.com/rust-lang/crates.io-index#serde-wasm-bindgen@0.6.5",
        "registry+https://github.com/rust-lang/crates.io-index#serde_json@1.0.142",
        "registry+https://github.com/rust-lang/crates.io-index#sha1@0.10.6",
        "registry+https://github.com/rust-lang/crates.io-index#ssi@0.12.0",
        "registry+https://github.com/rust-lang/crates.io-index#thiserror@2.0.14",
        "registry+https://github.com/rust-lang/crates.io-index#tokio@1.47.1",
        "registry+https://github.com/rust-lang/crates.io-index#tokio-rustls@0.26.2",
        "registry+https://github.com/rust-lang/crates.io-index#tracing@0.1.41",
        "registry+https://github.com/rust-lang/crates.io-index#tracing-subscriber@0.3.19",
        "registry+https://github.com/rust-lang/crates.io-index#url@2.5.4",
        "registry+https://github.com/rust-lang/crates.io-index#wasm-bindgen@0.2.100",
        "registry+https://github.com/rust-lang/crates.io-index#wasm-bindgen-futures@0.4.50",
        "registry+https://github.com/rust-lang/crates.io-index#web-socket@0.7.0"
      ]
    },
    {
      "ref": "path+file:///Users/rolstan/Documents/Affinidi/Work/Projects/affinidi-tdk-rs/crates/affinidi-did-resolver/affinidi-did-resolver-methods/did-example#0.5.4",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#ahash@0.8.12",
        "registry+https://github.com/rust-lang/crates.io-index#ssi@0.12.0",
        "registry+https://github.com/rust-lang/crates.io-index#thiserror@2.0.14"
      ]
    },
    {
      "ref": "path+file:///Users/rolstan/Documents/Affinidi/Work/Projects/affinidi-tdk-rs/crates/affinidi-did-resolver/affinidi-did-resolver-methods/did-peer#0.6.3",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#base64@0.22.1",
        "registry+https://github.com/rust-lang/crates.io-index#iref@3.2.2",
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219",
        "registry+https://github.com/rust-lang/crates.io-index#serde_json@1.0.142",
        "registry+https://github.com/rust-lang/crates.io-index#ssi@0.12.0",
        "registry+https://github.com/rust-lang/crates.io-index#thiserror@2.0.14",
        "registry+https://github.com/rust-lang/crates.io-index#wasm-bindgen@0.2.100",
        "registry+https://github.com/rust-lang/crates.io-index#wasm-bindgen-futures@0.4.50"
      ]
    },
    {
      "ref": "path+file:///Users/rolstan/Documents/Affinidi/Work/Projects/affinidi-tdk-rs/crates/affinidi-meeting-place#0.1.10",
      "dependsOn": [
        "path+file:///Users/rolstan/Documents/Affinidi/Work/Projects/affinidi-tdk-rs/crates/affinidi-tdk/common/affinidi-did-authentication#0.1.10",
        "path+file:///Users/rolstan/Documents/Affinidi/Work/Projects/affinidi-tdk-rs/crates/affinidi-did-resolver/affinidi-did-resolver-cache-sdk#0.5.6",
        "path+file:///Users/rolstan/Documents/Affinidi/Work/Projects/affinidi-tdk-rs/crates/affinidi-messaging/affinidi-messaging-didcomm#0.10.8",
        "path+file:///Users/rolstan/Documents/Affinidi/Work/Projects/affinidi-tdk-rs/crates/affinidi-tdk/common/affinidi-tdk-common#0.1.12",
        "registry+https://github.com/rust-lang/crates.io-index#base64@0.22.1",
        "registry+https://github.com/rust-lang/crates.io-index#chrono@0.4.41",
        "registry+https://github.com/rust-lang/crates.io-index#reqwest@0.12.23",
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219",
        "registry+https://github.com/rust-lang/crates.io-index#serde_json@1.0.142",
        "registry+https://github.com/rust-lang/crates.io-index#ssi@0.12.0",
        "registry+https://github.com/rust-lang/crates.io-index#thiserror@2.0.14",
        "registry+https://github.com/rust-lang/crates.io-index#tracing@0.1.41",
        "registry+https://github.com/rust-lang/crates.io-index#uuid@1.18.0"
      ]
    },
    {
      "ref": "path+file:///Users/rolstan/Documents/Affinidi/Work/Projects/affinidi-tdk-rs/crates/affinidi-messaging/affinidi-messaging-didcomm#0.10.8",
      "dependsOn": [
        "path+file:///Users/rolstan/Documents/Affinidi/Work/Projects/affinidi-tdk-rs/crates/affinidi-did-resolver/affinidi-did-resolver-cache-sdk#0.5.6",
        "path+file:///Users/rolstan/Documents/Affinidi/Work/Projects/affinidi-tdk-rs/crates/affinidi-tdk/common/affinidi-secrets-resolver#0.1.12",
        "registry+https://github.com/rust-lang/crates.io-index#ahash@0.8.12",
        "registry+https://github.com/rust-lang/crates.io-index#anyhow@1.0.99",
        "registry+https://github.com/rust-lang/crates.io-index#askar-crypto@0.3.6",
        "registry+https://github.com/rust-lang/crates.io-index#base64@0.22.1",
        "registry+https://github.com/rust-lang/crates.io-index#bs58@0.5.1",
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219",
        "registry+https://github.com/rust-lang/crates.io-index#serde-enum-str@0.4.0",
        "registry+https://github.com/rust-lang/crates.io-index#serde_json@1.0.142",
        "registry+https://github.com/rust-lang/crates.io-index#sha2@0.10.9",
        "registry+https://github.com/rust-lang/crates.io-index#sha256@1.6.0",
        "registry+https://github.com/rust-lang/crates.io-index#ssi@0.12.0",
        "registry+https://github.com/rust-lang/crates.io-index#thiserror@2.0.14",
        "registry+https://github.com/rust-lang/crates.io-index#tokio@1.47.1",
        "registry+https://github.com/rust-lang/crates.io-index#tracing@0.1.41",
        "registry+https://github.com/rust-lang/crates.io-index#uuid@1.18.0",
        "registry+https://github.com/rust-lang/crates.io-index#varint@0.9.0"
      ]
    },
    {
      "ref": "path+file:///Users/rolstan/Documents/Affinidi/Work/Projects/affinidi-tdk-rs/crates/affinidi-tdk/common/affinidi-did-authentication#0.1.10",
      "dependsOn": [
        "path+file:///Users/rolstan/Documents/Affinidi/Work/Projects/affinidi-tdk-rs/crates/affinidi-did-resolver/affinidi-did-resolver-cache-sdk#0.5.6",
        "path+file:///Users/rolstan/Documents/Affinidi/Work/Projects/affinidi-tdk-rs/crates/affinidi-messaging/affinidi-messaging-didcomm#0.10.8",
        "path+file:///Users/rolstan/Documents/Affinidi/Work/Projects/affinidi-tdk-rs/crates/affinidi-tdk/common/affinidi-secrets-resolver#0.1.12",
        "registry+https://github.com/rust-lang/crates.io-index#base64@0.22.1",
        "registry+https://github.com/rust-lang/crates.io-index#chrono@0.4.41",
        "registry+https://github.com/rust-lang/crates.io-index#reqwest@0.12.23",
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219",
        "registry+https://github.com/rust-lang/crates.io-index#serde_json@1.0.142",
        "registry+https://github.com/rust-lang/crates.io-index#ssi@0.12.0",
        "registry+https://github.com/rust-lang/crates.io-index#thiserror@2.0.14",
        "registry+https://github.com/rust-lang/crates.io-index#tokio@1.47.1",
        "registry+https://github.com/rust-lang/crates.io-index#tracing@0.1.41",
        "registry+https://github.com/rust-lang/crates.io-index#uuid@1.18.0"
      ]
    },
    {
      "ref": "path+file:///Users/rolstan/Documents/Affinidi/Work/Projects/affinidi-tdk-rs/crates/affinidi-tdk/common/affinidi-secrets-resolver#0.1.12",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#ahash@0.8.12",
        "registry+https://github.com/rust-lang/crates.io-index#base58@0.2.0",
        "registry+https://github.com/rust-lang/crates.io-index#base64@0.22.1",
        "registry+https://github.com/rust-lang/crates.io-index#multibase@0.9.1",
        "registry+https://github.com/rust-lang/crates.io-index#multihash@0.19.3",
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219",
        "registry+https://github.com/rust-lang/crates.io-index#serde_json@1.0.142",
        "registry+https://github.com/rust-lang/crates.io-index#sha2@0.10.9",
        "registry+https://github.com/rust-lang/crates.io-index#ssi@0.12.0",
        "registry+https://github.com/rust-lang/crates.io-index#thiserror@2.0.14",
        "registry+https://github.com/rust-lang/crates.io-index#tokio@1.47.1",
        "registry+https://github.com/rust-lang/crates.io-index#tracing@0.1.41"
      ]
    },
    {
      "ref": "path+file:///Users/rolstan/Documents/Affinidi/Work/Projects/affinidi-tdk-rs/crates/affinidi-tdk/common/affinidi-tdk-common#0.1.12",
      "dependsOn": [
        "path+file:///Users/rolstan/Documents/Affinidi/Work/Projects/affinidi-tdk-rs/crates/affinidi-tdk/common/affinidi-did-authentication#0.1.10",
        "path+file:///Users/rolstan/Documents/Affinidi/Work/Projects/affinidi-tdk-rs/crates/affinidi-did-resolver/affinidi-did-resolver-cache-sdk#0.5.6",
        "path+file:///Users/rolstan/Documents/Affinidi/Work/Projects/affinidi-tdk-rs/crates/affinidi-tdk/common/affinidi-secrets-resolver#0.1.12",
        "registry+https://github.com/rust-lang/crates.io-index#ahash@0.8.12",
        "registry+https://github.com/rust-lang/crates.io-index#base64@0.22.1",
        "path+file:///Users/rolstan/Documents/Affinidi/Work/Projects/affinidi-tdk-rs/crates/affinidi-did-resolver/affinidi-did-resolver-methods/did-peer#0.6.3",
        "registry+https://github.com/rust-lang/crates.io-index#keyring@3.6.3",
        "registry+https://github.com/rust-lang/crates.io-index#moka@0.12.10",
        "registry+https://github.com/rust-lang/crates.io-index#reqwest@0.12.23",
        "registry+https://github.com/rust-lang/crates.io-index#rustls@0.23.31",
        "registry+https://github.com/rust-lang/crates.io-index#rustls-platform-verifier@0.6.1",
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219",
        "registry+https://github.com/rust-lang/crates.io-index#serde_json@1.0.142",
        "registry+https://github.com/rust-lang/crates.io-index#thiserror@2.0.14",
        "registry+https://github.com/rust-lang/crates.io-index#tokio@1.47.1",
        "registry+https://github.com/rust-lang/crates.io-index#tracing@0.1.41"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#abnf-core@0.5.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#nom@7.1.3"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#abnf@0.13.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#abnf-core@0.5.0",
        "registry+https://github.com/rust-lang/crates.io-index#nom@7.1.3"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#adler2@2.0.1",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#aead@0.5.2",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#crypto-common@0.1.6",
        "registry+https://github.com/rust-lang/crates.io-index#generic-array@0.14.7"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#aes-gcm@0.10.3",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#aead@0.5.2",
        "registry+https://github.com/rust-lang/crates.io-index#aes@0.8.4",
        "registry+https://github.com/rust-lang/crates.io-index#cipher@0.4.4",
        "registry+https://github.com/rust-lang/crates.io-index#ctr@0.9.2",
        "registry+https://github.com/rust-lang/crates.io-index#ghash@0.5.1",
        "registry+https://github.com/rust-lang/crates.io-index#subtle@2.6.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#aes@0.8.4",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#cfg-if@1.0.1",
        "registry+https://github.com/rust-lang/crates.io-index#cipher@0.4.4",
        "registry+https://github.com/rust-lang/crates.io-index#cpufeatures@0.2.17"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#affinidi-data-integrity@0.2.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#affinidi-secrets-resolver@0.1.12",
        "registry+https://github.com/rust-lang/crates.io-index#chrono@0.4.41",
        "registry+https://github.com/rust-lang/crates.io-index#ed25519-dalek@2.2.0",
        "registry+https://github.com/rust-lang/crates.io-index#multibase@0.9.1",
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219",
        "registry+https://github.com/rust-lang/crates.io-index#serde_json@1.0.142",
        "registry+https://github.com/rust-lang/crates.io-index#serde_json_canonicalizer@0.3.1",
        "registry+https://github.com/rust-lang/crates.io-index#sha2@0.10.9",
        "registry+https://github.com/rust-lang/crates.io-index#ssi@0.12.0",
        "registry+https://github.com/rust-lang/crates.io-index#thiserror@2.0.14",
        "registry+https://github.com/rust-lang/crates.io-index#tracing@0.1.41"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#affinidi-secrets-resolver@0.1.12",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#ahash@0.8.12",
        "registry+https://github.com/rust-lang/crates.io-index#base58@0.2.0",
        "registry+https://github.com/rust-lang/crates.io-index#base64@0.22.1",
        "registry+https://github.com/rust-lang/crates.io-index#multibase@0.9.1",
        "registry+https://github.com/rust-lang/crates.io-index#multihash@0.19.3",
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219",
        "registry+https://github.com/rust-lang/crates.io-index#serde_json@1.0.142",
        "registry+https://github.com/rust-lang/crates.io-index#sha2@0.10.9",
        "registry+https://github.com/rust-lang/crates.io-index#ssi@0.12.0",
        "registry+https://github.com/rust-lang/crates.io-index#thiserror@2.0.14",
        "registry+https://github.com/rust-lang/crates.io-index#tokio@1.47.1",
        "registry+https://github.com/rust-lang/crates.io-index#tracing@0.1.41"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#ahash@0.7.8",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#getrandom@0.2.16",
        "registry+https://github.com/rust-lang/crates.io-index#once_cell@1.21.3",
        "registry+https://github.com/rust-lang/crates.io-index#version_check@0.9.5"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#ahash@0.8.12",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#cfg-if@1.0.1",
        "registry+https://github.com/rust-lang/crates.io-index#getrandom@0.3.3",
        "registry+https://github.com/rust-lang/crates.io-index#once_cell@1.21.3",
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219",
        "registry+https://github.com/rust-lang/crates.io-index#version_check@0.9.5",
        "registry+https://github.com/rust-lang/crates.io-index#zerocopy@0.8.26"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#aho-corasick@1.1.3",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#memchr@2.7.5"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#allocator-api2@0.2.21",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#anyhow@1.0.99",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#arrayref@0.3.9",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#arrayvec@0.5.2",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#arrayvec@0.7.6",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#askar-crypto@0.3.6",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#aead@0.5.2",
        "registry+https://github.com/rust-lang/crates.io-index#aes@0.8.4",
        "registry+https://github.com/rust-lang/crates.io-index#aes-gcm@0.10.3",
        "registry+https://github.com/rust-lang/crates.io-index#base64@0.22.1",
        "registry+https://github.com/rust-lang/crates.io-index#blake2@0.10.6",
        "registry+https://github.com/rust-lang/crates.io-index#block-modes@0.9.1",
        "registry+https://github.com/rust-lang/crates.io-index#bls12_381@0.8.0",
        "registry+https://github.com/rust-lang/crates.io-index#cbc@0.1.2",
        "registry+https://github.com/rust-lang/crates.io-index#chacha20@0.9.1",
        "registry+https://github.com/rust-lang/crates.io-index#chacha20poly1305@0.10.1",
        "registry+https://github.com/rust-lang/crates.io-index#cipher@0.4.4",
        "registry+https://github.com/rust-lang/crates.io-index#crypto_box@0.9.1",
        "registry+https://github.com/rust-lang/crates.io-index#curve25519-dalek@4.1.3",
        "registry+https://github.com/rust-lang/crates.io-index#digest@0.10.7",
        "registry+https://github.com/rust-lang/crates.io-index#ed25519-dalek@2.2.0",
        "registry+https://github.com/rust-lang/crates.io-index#elliptic-curve@0.13.8",
        "registry+https://github.com/rust-lang/crates.io-index#group@0.13.0",
        "registry+https://github.com/rust-lang/crates.io-index#hkdf@0.12.4",
        "registry+https://github.com/rust-lang/crates.io-index#hmac@0.12.1",
        "registry+https://github.com/rust-lang/crates.io-index#k256@0.13.4",
        "registry+https://github.com/rust-lang/crates.io-index#p256@0.13.2",
        "registry+https://github.com/rust-lang/crates.io-index#p384@0.13.1",
        "registry+https://github.com/rust-lang/crates.io-index#rand@0.8.5",
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219",
        "registry+https://github.com/rust-lang/crates.io-index#serde-json-core@0.6.0",
        "registry+https://github.com/rust-lang/crates.io-index#sha2@0.10.9",
        "registry+https://github.com/rust-lang/crates.io-index#subtle@2.6.1",
        "registry+https://github.com/rust-lang/crates.io-index#x25519-dalek@2.0.1",
        "registry+https://github.com/rust-lang/crates.io-index#zeroize@1.8.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#async-lock@3.4.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#event-listener@5.4.1",
        "registry+https://github.com/rust-lang/crates.io-index#event-listener-strategy@0.5.4",
        "registry+https://github.com/rust-lang/crates.io-index#pin-project-lite@0.2.16"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#async-trait@0.1.88",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.97",
        "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.40",
        "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.105"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#atomic-waker@1.1.2",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#atomic@0.6.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#bytemuck@1.23.2"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#autocfg@1.5.0",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#aws-lc-rs@1.13.3",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#aws-lc-sys@0.30.0",
        "registry+https://github.com/rust-lang/crates.io-index#zeroize@1.8.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#aws-lc-sys@0.30.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#cc@1.2.32",
        "registry+https://github.com/rust-lang/crates.io-index#cmake@0.1.54",
        "registry+https://github.com/rust-lang/crates.io-index#dunce@1.0.5",
        "registry+https://github.com/rust-lang/crates.io-index#fs_extra@1.3.0"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#base-x@0.2.11",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#base16ct@0.2.0",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#base58@0.2.0",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#base64@0.13.1",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#base64@0.21.7",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#base64@0.22.1",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#base64ct@1.8.0",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#bech32@0.8.1",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#bit_utils@0.1.1",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#bitflags@1.3.2",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#bitflags@2.9.1",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#bitmaps@2.1.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#typenum@1.18.0"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#bitvec@0.20.4",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#funty@1.1.0",
        "registry+https://github.com/rust-lang/crates.io-index#radium@0.6.2",
        "registry+https://github.com/rust-lang/crates.io-index#tap@1.0.1",
        "registry+https://github.com/rust-lang/crates.io-index#wyz@0.2.0"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#blake2@0.10.6",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#digest@0.10.7"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#blake2b_simd@0.5.11",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#arrayref@0.3.9",
        "registry+https://github.com/rust-lang/crates.io-index#arrayvec@0.5.2",
        "registry+https://github.com/rust-lang/crates.io-index#constant_time_eq@0.1.5"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#blake2b_simd@1.0.3",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#arrayref@0.3.9",
        "registry+https://github.com/rust-lang/crates.io-index#arrayvec@0.7.6",
        "registry+https://github.com/rust-lang/crates.io-index#constant_time_eq@0.3.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#blake2s_simd@1.0.3",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#arrayref@0.3.9",
        "registry+https://github.com/rust-lang/crates.io-index#arrayvec@0.7.6",
        "registry+https://github.com/rust-lang/crates.io-index#constant_time_eq@0.3.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#blake3@1.8.2",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#arrayref@0.3.9",
        "registry+https://github.com/rust-lang/crates.io-index#arrayvec@0.7.6",
        "registry+https://github.com/rust-lang/crates.io-index#cc@1.2.32",
        "registry+https://github.com/rust-lang/crates.io-index#cfg-if@1.0.1",
        "registry+https://github.com/rust-lang/crates.io-index#constant_time_eq@0.3.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#block-buffer@0.10.4",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#generic-array@0.14.7"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#block-buffer@0.9.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#generic-array@0.14.7"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#block-modes@0.9.1",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#block-padding@0.3.3",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#generic-array@0.14.7"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#bls12_381@0.8.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#ff@0.13.1",
        "registry+https://github.com/rust-lang/crates.io-index#group@0.13.0",
        "registry+https://github.com/rust-lang/crates.io-index#rand_core@0.6.4",
        "registry+https://github.com/rust-lang/crates.io-index#subtle@2.6.1",
        "registry+https://github.com/rust-lang/crates.io-index#zeroize@1.8.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#bs58@0.4.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#sha2@0.9.9"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#bs58@0.5.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#tinyvec@1.9.0"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#btree-range-map@0.7.2",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#btree-slab@0.6.1",
        "registry+https://github.com/rust-lang/crates.io-index#cc-traits@2.0.0",
        "registry+https://github.com/rust-lang/crates.io-index#range-traits@0.3.2",
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219",
        "registry+https://github.com/rust-lang/crates.io-index#slab@0.4.11"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#btree-slab@0.6.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#cc-traits@2.0.0",
        "registry+https://github.com/rust-lang/crates.io-index#slab@0.4.11",
        "registry+https://github.com/rust-lang/crates.io-index#smallvec@1.15.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#bumpalo@3.19.0",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#bytemuck@1.23.2",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#byteorder@1.5.0",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#bytes@1.10.1",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#cached@0.30.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#hashbrown@0.11.2",
        "registry+https://github.com/rust-lang/crates.io-index#once_cell@1.21.3"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#cbc@0.1.2",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#cipher@0.4.4"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#cc-traits@2.0.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#slab@0.4.11"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#cc@1.2.32",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#jobserver@0.1.33",
        "registry+https://github.com/rust-lang/crates.io-index#libc@0.2.175",
        "registry+https://github.com/rust-lang/crates.io-index#shlex@1.3.0"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#cfg-if@1.0.1",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#cfg_aliases@0.2.1",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#chacha20@0.9.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#cfg-if@1.0.1",
        "registry+https://github.com/rust-lang/crates.io-index#cipher@0.4.4"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#chacha20poly1305@0.10.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#aead@0.5.2",
        "registry+https://github.com/rust-lang/crates.io-index#chacha20@0.9.1",
        "registry+https://github.com/rust-lang/crates.io-index#cipher@0.4.4",
        "registry+https://github.com/rust-lang/crates.io-index#poly1305@0.8.0",
        "registry+https://github.com/rust-lang/crates.io-index#zeroize@1.8.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#chrono@0.4.41",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#iana-time-zone@0.1.63",
        "registry+https://github.com/rust-lang/crates.io-index#num-traits@0.2.19",
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#ciborium-io@0.2.2",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#ciborium-ll@0.2.2",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#ciborium-io@0.2.2",
        "registry+https://github.com/rust-lang/crates.io-index#half@2.6.0"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#ciborium@0.2.2",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#ciborium-io@0.2.2",
        "registry+https://github.com/rust-lang/crates.io-index#ciborium-ll@0.2.2",
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#cid@0.8.6",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#core2@0.4.0",
        "registry+https://github.com/rust-lang/crates.io-index#multibase@0.9.1",
        "registry+https://github.com/rust-lang/crates.io-index#multihash@0.16.3",
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219",
        "registry+https://github.com/rust-lang/crates.io-index#serde_bytes@0.11.17",
        "registry+https://github.com/rust-lang/crates.io-index#unsigned-varint@0.7.2"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#cipher@0.4.4",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#crypto-common@0.1.6",
        "registry+https://github.com/rust-lang/crates.io-index#inout@0.1.4",
        "registry+https://github.com/rust-lang/crates.io-index#zeroize@1.8.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#clear_on_drop@0.2.5",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#cc@1.2.32"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#cmake@0.1.54",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#cc@1.2.32"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#combination@0.1.5",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#concurrent-queue@2.5.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#crossbeam-utils@0.8.21"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#const-oid@0.7.1",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#const-oid@0.9.6",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#constant_time_eq@0.1.5",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#constant_time_eq@0.3.1",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#contextual@0.1.6",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#core-foundation-sys@0.8.7",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#core-foundation@0.10.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#core-foundation-sys@0.8.7",
        "registry+https://github.com/rust-lang/crates.io-index#libc@0.2.175"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#core-foundation@0.9.4",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#core-foundation-sys@0.8.7",
        "registry+https://github.com/rust-lang/crates.io-index#libc@0.2.175"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#core2@0.4.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#memchr@2.7.5"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#coset@0.3.8",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#ciborium@0.2.2",
        "registry+https://github.com/rust-lang/crates.io-index#ciborium-io@0.2.2"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#cpufeatures@0.2.17",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#libc@0.2.175"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#crc32fast@1.5.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#cfg-if@1.0.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#crossbeam-channel@0.5.15",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#crossbeam-utils@0.8.21"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#crossbeam-epoch@0.9.18",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#crossbeam-utils@0.8.21"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#crossbeam-utils@0.8.21",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#crunchy@0.2.4",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#crypto-bigint@0.3.2",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#generic-array@0.14.7",
        "registry+https://github.com/rust-lang/crates.io-index#subtle@2.6.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#crypto-bigint@0.5.5",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#generic-array@0.14.7",
        "registry+https://github.com/rust-lang/crates.io-index#rand_core@0.6.4",
        "registry+https://github.com/rust-lang/crates.io-index#subtle@2.6.1",
        "registry+https://github.com/rust-lang/crates.io-index#zeroize@1.8.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#crypto-common@0.1.6",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#generic-array@0.14.7",
        "registry+https://github.com/rust-lang/crates.io-index#rand_core@0.6.4",
        "registry+https://github.com/rust-lang/crates.io-index#typenum@1.18.0"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#crypto_box@0.9.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#aead@0.5.2",
        "registry+https://github.com/rust-lang/crates.io-index#crypto_secretbox@0.1.1",
        "registry+https://github.com/rust-lang/crates.io-index#curve25519-dalek@4.1.3",
        "registry+https://github.com/rust-lang/crates.io-index#salsa20@0.10.2",
        "registry+https://github.com/rust-lang/crates.io-index#subtle@2.6.1",
        "registry+https://github.com/rust-lang/crates.io-index#zeroize@1.8.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#crypto_secretbox@0.1.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#aead@0.5.2",
        "registry+https://github.com/rust-lang/crates.io-index#cipher@0.4.4",
        "registry+https://github.com/rust-lang/crates.io-index#generic-array@0.14.7",
        "registry+https://github.com/rust-lang/crates.io-index#poly1305@0.8.0",
        "registry+https://github.com/rust-lang/crates.io-index#salsa20@0.10.2",
        "registry+https://github.com/rust-lang/crates.io-index#subtle@2.6.1",
        "registry+https://github.com/rust-lang/crates.io-index#zeroize@1.8.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#csv-core@0.1.12",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#memchr@2.7.5"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#csv@1.3.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#csv-core@0.1.12",
        "registry+https://github.com/rust-lang/crates.io-index#itoa@1.0.15",
        "registry+https://github.com/rust-lang/crates.io-index#ryu@1.0.20",
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#ctr@0.9.2",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#cipher@0.4.4"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#curve25519-dalek@4.1.3",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#cfg-if@1.0.1",
        "registry+https://github.com/rust-lang/crates.io-index#digest@0.10.7",
        "registry+https://github.com/rust-lang/crates.io-index#rustc_version@0.4.1",
        "registry+https://github.com/rust-lang/crates.io-index#subtle@2.6.1",
        "registry+https://github.com/rust-lang/crates.io-index#zeroize@1.8.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#darling@0.13.4",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#darling_core@0.13.4",
        "registry+https://github.com/rust-lang/crates.io-index#darling_macro@0.13.4"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#darling@0.14.4",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#darling_core@0.14.4",
        "registry+https://github.com/rust-lang/crates.io-index#darling_macro@0.14.4"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#darling@0.20.11",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#darling_core@0.20.11",
        "registry+https://github.com/rust-lang/crates.io-index#darling_macro@0.20.11"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#darling_core@0.13.4",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#fnv@1.0.7",
        "registry+https://github.com/rust-lang/crates.io-index#ident_case@1.0.1",
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.97",
        "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.40",
        "registry+https://github.com/rust-lang/crates.io-index#strsim@0.10.0",
        "registry+https://github.com/rust-lang/crates.io-index#syn@1.0.109"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#darling_core@0.14.4",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#fnv@1.0.7",
        "registry+https://github.com/rust-lang/crates.io-index#ident_case@1.0.1",
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.97",
        "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.40",
        "registry+https://github.com/rust-lang/crates.io-index#syn@1.0.109"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#darling_core@0.20.11",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#fnv@1.0.7",
        "registry+https://github.com/rust-lang/crates.io-index#ident_case@1.0.1",
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.97",
        "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.40",
        "registry+https://github.com/rust-lang/crates.io-index#strsim@0.11.1",
        "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.105"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#darling_macro@0.13.4",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#darling_core@0.13.4",
        "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.40",
        "registry+https://github.com/rust-lang/crates.io-index#syn@1.0.109"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#darling_macro@0.14.4",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#darling_core@0.14.4",
        "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.40",
        "registry+https://github.com/rust-lang/crates.io-index#syn@1.0.109"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#darling_macro@0.20.11",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#darling_core@0.20.11",
        "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.40",
        "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.105"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#data-encoding-macro-internal@0.1.16",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#data-encoding@2.9.0",
        "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.105"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#data-encoding-macro@0.1.18",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#data-encoding@2.9.0",
        "registry+https://github.com/rust-lang/crates.io-index#data-encoding-macro-internal@0.1.16"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#data-encoding@2.9.0",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#decoded-char@0.1.1",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#der@0.5.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#const-oid@0.7.1",
        "registry+https://github.com/rust-lang/crates.io-index#crypto-bigint@0.3.2",
        "registry+https://github.com/rust-lang/crates.io-index#pem-rfc7468@0.3.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#der@0.7.10",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#const-oid@0.9.6",
        "registry+https://github.com/rust-lang/crates.io-index#pem-rfc7468@0.7.0",
        "registry+https://github.com/rust-lang/crates.io-index#zeroize@1.8.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#deranged@0.4.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#powerfmt@0.2.0",
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#derivative@2.2.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.97",
        "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.40",
        "registry+https://github.com/rust-lang/crates.io-index#syn@1.0.109"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#did-ethr@0.3.2",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#hex@0.4.3",
        "registry+https://github.com/rust-lang/crates.io-index#iref@3.2.2",
        "registry+https://github.com/rust-lang/crates.io-index#serde_json@1.0.142",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-caips@0.2.2",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-dids-core@0.1.3",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-jwk@0.3.2",
        "registry+https://github.com/rust-lang/crates.io-index#static-iref@3.0.0",
        "registry+https://github.com/rust-lang/crates.io-index#thiserror@1.0.69"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#did-ion@0.3.2",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#base64@0.22.1",
        "registry+https://github.com/rust-lang/crates.io-index#iref@3.2.2",
        "registry+https://github.com/rust-lang/crates.io-index#json-patch@0.2.7",
        "registry+https://github.com/rust-lang/crates.io-index#reqwest@0.11.27",
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219",
        "registry+https://github.com/rust-lang/crates.io-index#serde_jcs@0.1.0",
        "registry+https://github.com/rust-lang/crates.io-index#serde_json@1.0.142",
        "registry+https://github.com/rust-lang/crates.io-index#sha2@0.10.9",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-dids-core@0.1.3",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-jwk@0.3.2",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-jws@0.3.1",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-jwt@0.3.1",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-verification-methods@0.1.3",
        "registry+https://github.com/rust-lang/crates.io-index#thiserror@1.0.69"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#did-jwk@0.2.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#async-trait@0.1.88",
        "registry+https://github.com/rust-lang/crates.io-index#iref@3.2.2",
        "registry+https://github.com/rust-lang/crates.io-index#multibase@0.8.0",
        "registry+https://github.com/rust-lang/crates.io-index#serde_jcs@0.1.0",
        "registry+https://github.com/rust-lang/crates.io-index#serde_json@1.0.142",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-crypto@0.2.1",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-dids-core@0.1.3",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-jwk@0.3.2",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-verification-methods@0.1.3",
        "registry+https://github.com/rust-lang/crates.io-index#static-iref@3.0.0",
        "registry+https://github.com/rust-lang/crates.io-index#thiserror@1.0.69"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#did-method-key@0.3.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#bs58@0.4.0",
        "registry+https://github.com/rust-lang/crates.io-index#iref@3.2.2",
        "registry+https://github.com/rust-lang/crates.io-index#k256@0.13.4",
        "registry+https://github.com/rust-lang/crates.io-index#multibase@0.9.1",
        "registry+https://github.com/rust-lang/crates.io-index#p256@0.13.2",
        "registry+https://github.com/rust-lang/crates.io-index#serde_json@1.0.142",
        "registry+https://github.com/rust-lang/crates.io-index#simple_asn1@0.5.4",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-dids-core@0.1.3",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-json-ld@0.3.2",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-jwk@0.3.2",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-multicodec@0.2.0",
        "registry+https://github.com/rust-lang/crates.io-index#static-iref@3.0.0",
        "registry+https://github.com/rust-lang/crates.io-index#thiserror@1.0.69"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#did-pkh@0.3.2",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#async-trait@0.1.88",
        "registry+https://github.com/rust-lang/crates.io-index#bech32@0.8.1",
        "registry+https://github.com/rust-lang/crates.io-index#bs58@0.4.0",
        "registry+https://github.com/rust-lang/crates.io-index#chrono@0.4.41",
        "registry+https://github.com/rust-lang/crates.io-index#iref@3.2.2",
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219",
        "registry+https://github.com/rust-lang/crates.io-index#serde_json@1.0.142",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-caips@0.2.2",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-crypto@0.2.1",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-dids-core@0.1.3",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-jwk@0.3.2",
        "registry+https://github.com/rust-lang/crates.io-index#static-iref@3.0.0",
        "registry+https://github.com/rust-lang/crates.io-index#thiserror@1.0.69"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#did-tz@0.3.2",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#async-trait@0.1.88",
        "registry+https://github.com/rust-lang/crates.io-index#bs58@0.4.0",
        "registry+https://github.com/rust-lang/crates.io-index#chrono@0.4.41",
        "registry+https://github.com/rust-lang/crates.io-index#iref@3.2.2",
        "registry+https://github.com/rust-lang/crates.io-index#json-patch@0.2.7",
        "registry+https://github.com/rust-lang/crates.io-index#reqwest@0.11.27",
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219",
        "registry+https://github.com/rust-lang/crates.io-index#serde_json@1.0.142",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-core@0.2.3",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-dids-core@0.1.3",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-jwk@0.3.2",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-jws@0.3.1",
        "registry+https://github.com/rust-lang/crates.io-index#static-iref@3.0.0",
        "registry+https://github.com/rust-lang/crates.io-index#thiserror@1.0.69",
        "registry+https://github.com/rust-lang/crates.io-index#url@2.5.4"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#did-web@0.3.4",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#http@0.2.12",
        "registry+https://github.com/rust-lang/crates.io-index#iref@3.2.2",
        "registry+https://github.com/rust-lang/crates.io-index#reqwest@0.11.27",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-dids-core@0.1.3",
        "registry+https://github.com/rust-lang/crates.io-index#thiserror@1.0.69"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#didwebvh-rs@0.1.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#affinidi-data-integrity@0.2.0",
        "registry+https://github.com/rust-lang/crates.io-index#affinidi-secrets-resolver@0.1.12",
        "registry+https://github.com/rust-lang/crates.io-index#ahash@0.8.12",
        "registry+https://github.com/rust-lang/crates.io-index#base58@0.2.0",
        "registry+https://github.com/rust-lang/crates.io-index#chrono@0.4.41",
        "registry+https://github.com/rust-lang/crates.io-index#iref@3.2.2",
        "registry+https://github.com/rust-lang/crates.io-index#multihash@0.19.3",
        "registry+https://github.com/rust-lang/crates.io-index#reqwest@0.12.23",
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219",
        "registry+https://github.com/rust-lang/crates.io-index#serde_json@1.0.142",
        "registry+https://github.com/rust-lang/crates.io-index#serde_json_canonicalizer@0.3.1",
        "registry+https://github.com/rust-lang/crates.io-index#serde_with@3.14.0",
        "registry+https://github.com/rust-lang/crates.io-index#sha2@0.10.9",
        "registry+https://github.com/rust-lang/crates.io-index#ssi@0.12.0",
        "registry+https://github.com/rust-lang/crates.io-index#thiserror@2.0.14",
        "registry+https://github.com/rust-lang/crates.io-index#tokio@1.47.1",
        "registry+https://github.com/rust-lang/crates.io-index#tracing@0.1.41",
        "registry+https://github.com/rust-lang/crates.io-index#url@2.5.4"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#digest@0.10.7",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#block-buffer@0.10.4",
        "registry+https://github.com/rust-lang/crates.io-index#const-oid@0.9.6",
        "registry+https://github.com/rust-lang/crates.io-index#crypto-common@0.1.6",
        "registry+https://github.com/rust-lang/crates.io-index#subtle@2.6.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#digest@0.9.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#generic-array@0.14.7"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#displaydoc@0.2.5",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.97",
        "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.40",
        "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.105"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#document-features@0.2.11",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#litrs@0.4.2"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#dunce@1.0.5",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#dyn-clone@1.0.20",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#ecdsa@0.16.9",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#der@0.7.10",
        "registry+https://github.com/rust-lang/crates.io-index#digest@0.10.7",
        "registry+https://github.com/rust-lang/crates.io-index#elliptic-curve@0.13.8",
        "registry+https://github.com/rust-lang/crates.io-index#rfc6979@0.4.0",
        "registry+https://github.com/rust-lang/crates.io-index#signature@2.2.0",
        "registry+https://github.com/rust-lang/crates.io-index#spki@0.7.3"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#ed25519-dalek@2.2.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#curve25519-dalek@4.1.3",
        "registry+https://github.com/rust-lang/crates.io-index#ed25519@2.2.3",
        "registry+https://github.com/rust-lang/crates.io-index#rand_core@0.6.4",
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219",
        "registry+https://github.com/rust-lang/crates.io-index#sha2@0.10.9",
        "registry+https://github.com/rust-lang/crates.io-index#subtle@2.6.1",
        "registry+https://github.com/rust-lang/crates.io-index#zeroize@1.8.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#ed25519@2.2.3",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#pkcs8@0.10.2",
        "registry+https://github.com/rust-lang/crates.io-index#signature@2.2.0"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#educe@0.4.23",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#enum-ordinalize@3.1.15",
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.97",
        "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.40",
        "registry+https://github.com/rust-lang/crates.io-index#syn@1.0.109"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#educe@0.5.11",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#enum-ordinalize@4.3.0",
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.97",
        "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.40",
        "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.105"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#elliptic-curve@0.13.8",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#base16ct@0.2.0",
        "registry+https://github.com/rust-lang/crates.io-index#crypto-bigint@0.5.5",
        "registry+https://github.com/rust-lang/crates.io-index#digest@0.10.7",
        "registry+https://github.com/rust-lang/crates.io-index#ff@0.13.1",
        "registry+https://github.com/rust-lang/crates.io-index#generic-array@0.14.7",
        "registry+https://github.com/rust-lang/crates.io-index#group@0.13.0",
        "registry+https://github.com/rust-lang/crates.io-index#hkdf@0.12.4",
        "registry+https://github.com/rust-lang/crates.io-index#pem-rfc7468@0.7.0",
        "registry+https://github.com/rust-lang/crates.io-index#pkcs8@0.10.2",
        "registry+https://github.com/rust-lang/crates.io-index#rand_core@0.6.4",
        "registry+https://github.com/rust-lang/crates.io-index#sec1@0.7.3",
        "registry+https://github.com/rust-lang/crates.io-index#subtle@2.6.1",
        "registry+https://github.com/rust-lang/crates.io-index#zeroize@1.8.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#encoding_rs@0.8.35",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#cfg-if@1.0.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#enum-ordinalize-derive@4.3.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.97",
        "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.40",
        "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.105"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#enum-ordinalize@3.1.15",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#num-bigint@0.4.6",
        "registry+https://github.com/rust-lang/crates.io-index#num-traits@0.2.19",
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.97",
        "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.40",
        "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.105"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#enum-ordinalize@4.3.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#enum-ordinalize-derive@4.3.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#equivalent@1.0.2",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#errno@0.3.13",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#libc@0.2.175"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#event-listener-strategy@0.5.4",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#event-listener@5.4.1",
        "registry+https://github.com/rust-lang/crates.io-index#pin-project-lite@0.2.16"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#event-listener@5.4.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#concurrent-queue@2.5.0",
        "registry+https://github.com/rust-lang/crates.io-index#parking@2.2.1",
        "registry+https://github.com/rust-lang/crates.io-index#pin-project-lite@0.2.16"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#fastrand@2.3.0",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#ff@0.13.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#rand_core@0.6.4",
        "registry+https://github.com/rust-lang/crates.io-index#subtle@2.6.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#fixed-hash@0.7.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#static_assertions@1.1.0"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#flate2@1.1.2",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#crc32fast@1.5.0",
        "registry+https://github.com/rust-lang/crates.io-index#miniz_oxide@0.8.9"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#fnv@1.0.7",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#foldhash@0.1.5",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#form_urlencoded@1.2.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#percent-encoding@2.3.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#fs_extra@1.3.0",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#funty@1.1.0",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#futures-channel@0.3.31",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#futures-core@0.3.31",
        "registry+https://github.com/rust-lang/crates.io-index#futures-sink@0.3.31"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#futures-core@0.3.31",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#futures-executor@0.3.31",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#futures-core@0.3.31",
        "registry+https://github.com/rust-lang/crates.io-index#futures-task@0.3.31",
        "registry+https://github.com/rust-lang/crates.io-index#futures-util@0.3.31"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#futures-io@0.3.31",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#futures-macro@0.3.31",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.97",
        "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.40",
        "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.105"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#futures-sink@0.3.31",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#futures-task@0.3.31",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#futures-util@0.3.31",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#futures-channel@0.3.31",
        "registry+https://github.com/rust-lang/crates.io-index#futures-core@0.3.31",
        "registry+https://github.com/rust-lang/crates.io-index#futures-io@0.3.31",
        "registry+https://github.com/rust-lang/crates.io-index#futures-macro@0.3.31",
        "registry+https://github.com/rust-lang/crates.io-index#futures-sink@0.3.31",
        "registry+https://github.com/rust-lang/crates.io-index#futures-task@0.3.31",
        "registry+https://github.com/rust-lang/crates.io-index#memchr@2.7.5",
        "registry+https://github.com/rust-lang/crates.io-index#pin-project-lite@0.2.16",
        "registry+https://github.com/rust-lang/crates.io-index#pin-utils@0.1.0",
        "registry+https://github.com/rust-lang/crates.io-index#slab@0.4.11"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#futures@0.3.31",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#futures-channel@0.3.31",
        "registry+https://github.com/rust-lang/crates.io-index#futures-core@0.3.31",
        "registry+https://github.com/rust-lang/crates.io-index#futures-executor@0.3.31",
        "registry+https://github.com/rust-lang/crates.io-index#futures-io@0.3.31",
        "registry+https://github.com/rust-lang/crates.io-index#futures-sink@0.3.31",
        "registry+https://github.com/rust-lang/crates.io-index#futures-task@0.3.31",
        "registry+https://github.com/rust-lang/crates.io-index#futures-util@0.3.31"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#generic-array@0.14.7",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#typenum@1.18.0",
        "registry+https://github.com/rust-lang/crates.io-index#version_check@0.9.5",
        "registry+https://github.com/rust-lang/crates.io-index#zeroize@1.8.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#getrandom@0.2.16",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#cfg-if@1.0.1",
        "registry+https://github.com/rust-lang/crates.io-index#libc@0.2.175"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#getrandom@0.3.3",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#cfg-if@1.0.1",
        "registry+https://github.com/rust-lang/crates.io-index#libc@0.2.175"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#ghash@0.5.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#opaque-debug@0.3.1",
        "registry+https://github.com/rust-lang/crates.io-index#polyval@0.6.2"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#group@0.13.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#ff@0.13.1",
        "registry+https://github.com/rust-lang/crates.io-index#rand_core@0.6.4",
        "registry+https://github.com/rust-lang/crates.io-index#subtle@2.6.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#h2@0.3.27",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#bytes@1.10.1",
        "registry+https://github.com/rust-lang/crates.io-index#fnv@1.0.7",
        "registry+https://github.com/rust-lang/crates.io-index#futures-core@0.3.31",
        "registry+https://github.com/rust-lang/crates.io-index#futures-sink@0.3.31",
        "registry+https://github.com/rust-lang/crates.io-index#futures-util@0.3.31",
        "registry+https://github.com/rust-lang/crates.io-index#http@0.2.12",
        "registry+https://github.com/rust-lang/crates.io-index#indexmap@2.10.0",
        "registry+https://github.com/rust-lang/crates.io-index#slab@0.4.11",
        "registry+https://github.com/rust-lang/crates.io-index#tokio@1.47.1",
        "registry+https://github.com/rust-lang/crates.io-index#tokio-util@0.7.16",
        "registry+https://github.com/rust-lang/crates.io-index#tracing@0.1.41"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#h2@0.4.12",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#atomic-waker@1.1.2",
        "registry+https://github.com/rust-lang/crates.io-index#bytes@1.10.1",
        "registry+https://github.com/rust-lang/crates.io-index#fnv@1.0.7",
        "registry+https://github.com/rust-lang/crates.io-index#futures-core@0.3.31",
        "registry+https://github.com/rust-lang/crates.io-index#futures-sink@0.3.31",
        "registry+https://github.com/rust-lang/crates.io-index#http@1.3.1",
        "registry+https://github.com/rust-lang/crates.io-index#indexmap@2.10.0",
        "registry+https://github.com/rust-lang/crates.io-index#slab@0.4.11",
        "registry+https://github.com/rust-lang/crates.io-index#tokio@1.47.1",
        "registry+https://github.com/rust-lang/crates.io-index#tokio-util@0.7.16",
        "registry+https://github.com/rust-lang/crates.io-index#tracing@0.1.41"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#half@1.8.3",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#half@2.6.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#cfg-if@1.0.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#hashbrown@0.11.2",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#hashbrown@0.12.3",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#ahash@0.7.8"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#hashbrown@0.13.2",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#ahash@0.8.12"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#hashbrown@0.14.5",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#ahash@0.8.12",
        "registry+https://github.com/rust-lang/crates.io-index#allocator-api2@0.2.21"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#hashbrown@0.15.5",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#allocator-api2@0.2.21",
        "registry+https://github.com/rust-lang/crates.io-index#equivalent@1.0.2",
        "registry+https://github.com/rust-lang/crates.io-index#foldhash@0.1.5"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#hex@0.4.3",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#hex_fmt@0.3.0",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#highway@1.3.0",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#hkdf@0.12.4",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#hmac@0.12.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#hmac@0.12.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#digest@0.10.7"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#http-body-util@0.1.3",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#bytes@1.10.1",
        "registry+https://github.com/rust-lang/crates.io-index#futures-core@0.3.31",
        "registry+https://github.com/rust-lang/crates.io-index#http@1.3.1",
        "registry+https://github.com/rust-lang/crates.io-index#http-body@1.0.1",
        "registry+https://github.com/rust-lang/crates.io-index#pin-project-lite@0.2.16"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#http-body@0.4.6",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#bytes@1.10.1",
        "registry+https://github.com/rust-lang/crates.io-index#http@0.2.12",
        "registry+https://github.com/rust-lang/crates.io-index#pin-project-lite@0.2.16"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#http-body@1.0.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#bytes@1.10.1",
        "registry+https://github.com/rust-lang/crates.io-index#http@1.3.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#http@0.2.12",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#bytes@1.10.1",
        "registry+https://github.com/rust-lang/crates.io-index#fnv@1.0.7",
        "registry+https://github.com/rust-lang/crates.io-index#itoa@1.0.15"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#http@1.3.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#bytes@1.10.1",
        "registry+https://github.com/rust-lang/crates.io-index#fnv@1.0.7",
        "registry+https://github.com/rust-lang/crates.io-index#itoa@1.0.15"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#httparse@1.10.1",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#httpdate@1.0.3",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#hyper-rustls@0.24.2",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#futures-util@0.3.31",
        "registry+https://github.com/rust-lang/crates.io-index#http@0.2.12",
        "registry+https://github.com/rust-lang/crates.io-index#hyper@0.14.32",
        "registry+https://github.com/rust-lang/crates.io-index#log@0.4.27",
        "registry+https://github.com/rust-lang/crates.io-index#rustls@0.21.12",
        "registry+https://github.com/rust-lang/crates.io-index#rustls-native-certs@0.6.3",
        "registry+https://github.com/rust-lang/crates.io-index#tokio@1.47.1",
        "registry+https://github.com/rust-lang/crates.io-index#tokio-rustls@0.24.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#hyper-rustls@0.27.7",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#http@1.3.1",
        "registry+https://github.com/rust-lang/crates.io-index#hyper@1.6.0",
        "registry+https://github.com/rust-lang/crates.io-index#hyper-util@0.1.16",
        "registry+https://github.com/rust-lang/crates.io-index#rustls@0.23.31",
        "registry+https://github.com/rust-lang/crates.io-index#rustls-native-certs@0.8.1",
        "registry+https://github.com/rust-lang/crates.io-index#rustls-pki-types@1.12.0",
        "registry+https://github.com/rust-lang/crates.io-index#tokio@1.47.1",
        "registry+https://github.com/rust-lang/crates.io-index#tokio-rustls@0.26.2",
        "registry+https://github.com/rust-lang/crates.io-index#tower-service@0.3.3"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#hyper-tls@0.5.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#bytes@1.10.1",
        "registry+https://github.com/rust-lang/crates.io-index#hyper@0.14.32",
        "registry+https://github.com/rust-lang/crates.io-index#native-tls@0.2.14",
        "registry+https://github.com/rust-lang/crates.io-index#tokio@1.47.1",
        "registry+https://github.com/rust-lang/crates.io-index#tokio-native-tls@0.3.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#hyper-tls@0.6.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#bytes@1.10.1",
        "registry+https://github.com/rust-lang/crates.io-index#http-body-util@0.1.3",
        "registry+https://github.com/rust-lang/crates.io-index#hyper@1.6.0",
        "registry+https://github.com/rust-lang/crates.io-index#hyper-util@0.1.16",
        "registry+https://github.com/rust-lang/crates.io-index#native-tls@0.2.14",
        "registry+https://github.com/rust-lang/crates.io-index#tokio@1.47.1",
        "registry+https://github.com/rust-lang/crates.io-index#tokio-native-tls@0.3.1",
        "registry+https://github.com/rust-lang/crates.io-index#tower-service@0.3.3"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#hyper-util@0.1.16",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#base64@0.22.1",
        "registry+https://github.com/rust-lang/crates.io-index#bytes@1.10.1",
        "registry+https://github.com/rust-lang/crates.io-index#futures-channel@0.3.31",
        "registry+https://github.com/rust-lang/crates.io-index#futures-core@0.3.31",
        "registry+https://github.com/rust-lang/crates.io-index#futures-util@0.3.31",
        "registry+https://github.com/rust-lang/crates.io-index#http@1.3.1",
        "registry+https://github.com/rust-lang/crates.io-index#http-body@1.0.1",
        "registry+https://github.com/rust-lang/crates.io-index#hyper@1.6.0",
        "registry+https://github.com/rust-lang/crates.io-index#ipnet@2.11.0",
        "registry+https://github.com/rust-lang/crates.io-index#libc@0.2.175",
        "registry+https://github.com/rust-lang/crates.io-index#percent-encoding@2.3.1",
        "registry+https://github.com/rust-lang/crates.io-index#pin-project-lite@0.2.16",
        "registry+https://github.com/rust-lang/crates.io-index#socket2@0.6.0",
        "registry+https://github.com/rust-lang/crates.io-index#system-configuration@0.6.1",
        "registry+https://github.com/rust-lang/crates.io-index#tokio@1.47.1",
        "registry+https://github.com/rust-lang/crates.io-index#tower-service@0.3.3",
        "registry+https://github.com/rust-lang/crates.io-index#tracing@0.1.41"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#hyper@0.14.32",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#bytes@1.10.1",
        "registry+https://github.com/rust-lang/crates.io-index#futures-channel@0.3.31",
        "registry+https://github.com/rust-lang/crates.io-index#futures-core@0.3.31",
        "registry+https://github.com/rust-lang/crates.io-index#futures-util@0.3.31",
        "registry+https://github.com/rust-lang/crates.io-index#h2@0.3.27",
        "registry+https://github.com/rust-lang/crates.io-index#http@0.2.12",
        "registry+https://github.com/rust-lang/crates.io-index#http-body@0.4.6",
        "registry+https://github.com/rust-lang/crates.io-index#httparse@1.10.1",
        "registry+https://github.com/rust-lang/crates.io-index#httpdate@1.0.3",
        "registry+https://github.com/rust-lang/crates.io-index#itoa@1.0.15",
        "registry+https://github.com/rust-lang/crates.io-index#pin-project-lite@0.2.16",
        "registry+https://github.com/rust-lang/crates.io-index#socket2@0.5.10",
        "registry+https://github.com/rust-lang/crates.io-index#tokio@1.47.1",
        "registry+https://github.com/rust-lang/crates.io-index#tower-service@0.3.3",
        "registry+https://github.com/rust-lang/crates.io-index#tracing@0.1.41",
        "registry+https://github.com/rust-lang/crates.io-index#want@0.3.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#hyper@1.6.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#bytes@1.10.1",
        "registry+https://github.com/rust-lang/crates.io-index#futures-channel@0.3.31",
        "registry+https://github.com/rust-lang/crates.io-index#futures-util@0.3.31",
        "registry+https://github.com/rust-lang/crates.io-index#h2@0.4.12",
        "registry+https://github.com/rust-lang/crates.io-index#http@1.3.1",
        "registry+https://github.com/rust-lang/crates.io-index#http-body@1.0.1",
        "registry+https://github.com/rust-lang/crates.io-index#httparse@1.10.1",
        "registry+https://github.com/rust-lang/crates.io-index#httpdate@1.0.3",
        "registry+https://github.com/rust-lang/crates.io-index#itoa@1.0.15",
        "registry+https://github.com/rust-lang/crates.io-index#pin-project-lite@0.2.16",
        "registry+https://github.com/rust-lang/crates.io-index#smallvec@1.15.1",
        "registry+https://github.com/rust-lang/crates.io-index#tokio@1.47.1",
        "registry+https://github.com/rust-lang/crates.io-index#want@0.3.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#iana-time-zone@0.1.63",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#core-foundation-sys@0.8.7"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#icu_collections@2.0.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#displaydoc@0.2.5",
        "registry+https://github.com/rust-lang/crates.io-index#potential_utf@0.1.2",
        "registry+https://github.com/rust-lang/crates.io-index#yoke@0.8.0",
        "registry+https://github.com/rust-lang/crates.io-index#zerofrom@0.1.6",
        "registry+https://github.com/rust-lang/crates.io-index#zerovec@0.11.4"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#icu_locale_core@2.0.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#displaydoc@0.2.5",
        "registry+https://github.com/rust-lang/crates.io-index#litemap@0.8.0",
        "registry+https://github.com/rust-lang/crates.io-index#tinystr@0.8.1",
        "registry+https://github.com/rust-lang/crates.io-index#writeable@0.6.1",
        "registry+https://github.com/rust-lang/crates.io-index#zerovec@0.11.4"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#icu_normalizer@2.0.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#displaydoc@0.2.5",
        "registry+https://github.com/rust-lang/crates.io-index#icu_collections@2.0.0",
        "registry+https://github.com/rust-lang/crates.io-index#icu_normalizer_data@2.0.0",
        "registry+https://github.com/rust-lang/crates.io-index#icu_properties@2.0.1",
        "registry+https://github.com/rust-lang/crates.io-index#icu_provider@2.0.0",
        "registry+https://github.com/rust-lang/crates.io-index#smallvec@1.15.1",
        "registry+https://github.com/rust-lang/crates.io-index#zerovec@0.11.4"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#icu_normalizer_data@2.0.0",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#icu_properties@2.0.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#displaydoc@0.2.5",
        "registry+https://github.com/rust-lang/crates.io-index#icu_collections@2.0.0",
        "registry+https://github.com/rust-lang/crates.io-index#icu_locale_core@2.0.0",
        "registry+https://github.com/rust-lang/crates.io-index#icu_properties_data@2.0.1",
        "registry+https://github.com/rust-lang/crates.io-index#icu_provider@2.0.0",
        "registry+https://github.com/rust-lang/crates.io-index#potential_utf@0.1.2",
        "registry+https://github.com/rust-lang/crates.io-index#zerotrie@0.2.2",
        "registry+https://github.com/rust-lang/crates.io-index#zerovec@0.11.4"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#icu_properties_data@2.0.1",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#icu_provider@2.0.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#displaydoc@0.2.5",
        "registry+https://github.com/rust-lang/crates.io-index#icu_locale_core@2.0.0",
        "registry+https://github.com/rust-lang/crates.io-index#stable_deref_trait@1.2.0",
        "registry+https://github.com/rust-lang/crates.io-index#tinystr@0.8.1",
        "registry+https://github.com/rust-lang/crates.io-index#writeable@0.6.1",
        "registry+https://github.com/rust-lang/crates.io-index#yoke@0.8.0",
        "registry+https://github.com/rust-lang/crates.io-index#zerofrom@0.1.6",
        "registry+https://github.com/rust-lang/crates.io-index#zerotrie@0.2.2",
        "registry+https://github.com/rust-lang/crates.io-index#zerovec@0.11.4"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#ident_case@1.0.1",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#idna@1.0.3",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#idna_adapter@1.2.1",
        "registry+https://github.com/rust-lang/crates.io-index#smallvec@1.15.1",
        "registry+https://github.com/rust-lang/crates.io-index#utf8_iter@1.0.4"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#idna_adapter@1.2.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#icu_normalizer@2.0.0",
        "registry+https://github.com/rust-lang/crates.io-index#icu_properties@2.0.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#im@15.1.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#bitmaps@2.1.0",
        "registry+https://github.com/rust-lang/crates.io-index#rand_core@0.6.4",
        "registry+https://github.com/rust-lang/crates.io-index#rand_xoshiro@0.6.0",
        "registry+https://github.com/rust-lang/crates.io-index#sized-chunks@0.6.5",
        "registry+https://github.com/rust-lang/crates.io-index#typenum@1.18.0",
        "registry+https://github.com/rust-lang/crates.io-index#version_check@0.9.5"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#indexmap@1.9.3",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#autocfg@1.5.0",
        "registry+https://github.com/rust-lang/crates.io-index#hashbrown@0.12.3",
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#indexmap@2.10.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#equivalent@1.0.2",
        "registry+https://github.com/rust-lang/crates.io-index#hashbrown@0.15.5",
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#indoc@2.0.6",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#inout@0.1.4",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#block-padding@0.3.3",
        "registry+https://github.com/rust-lang/crates.io-index#generic-array@0.14.7"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#ipnet@2.11.0",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#iref-core@3.2.2",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#base64@0.22.1",
        "registry+https://github.com/rust-lang/crates.io-index#pct-str@2.0.0",
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219",
        "registry+https://github.com/rust-lang/crates.io-index#smallvec@1.15.1",
        "registry+https://github.com/rust-lang/crates.io-index#static-regular-grammar@2.0.2",
        "registry+https://github.com/rust-lang/crates.io-index#thiserror@1.0.69"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#iref@3.2.2",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#iref-core@3.2.2"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#iri-string@0.7.8",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#memchr@2.7.5",
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#itoa@1.0.15",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#jobserver@0.1.33",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#libc@0.2.175"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#js-sys@0.3.77",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#once_cell@1.21.3",
        "registry+https://github.com/rust-lang/crates.io-index#wasm-bindgen@0.2.100"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#json-ld-compaction@0.21.2",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#contextual@0.1.6",
        "registry+https://github.com/rust-lang/crates.io-index#educe@0.4.23",
        "registry+https://github.com/rust-lang/crates.io-index#futures@0.3.31",
        "registry+https://github.com/rust-lang/crates.io-index#indexmap@2.10.0",
        "registry+https://github.com/rust-lang/crates.io-index#iref@3.2.2",
        "registry+https://github.com/rust-lang/crates.io-index#json-ld-context-processing@0.21.2",
        "registry+https://github.com/rust-lang/crates.io-index#json-ld-core@0.21.2",
        "registry+https://github.com/rust-lang/crates.io-index#json-ld-expansion@0.21.2",
        "registry+https://github.com/rust-lang/crates.io-index#json-ld-syntax@0.21.2",
        "registry+https://github.com/rust-lang/crates.io-index#json-syntax@0.12.5",
        "registry+https://github.com/rust-lang/crates.io-index#langtag@0.4.0",
        "registry+https://github.com/rust-lang/crates.io-index#mown@0.2.2",
        "registry+https://github.com/rust-lang/crates.io-index#rdf-types@0.22.5",
        "registry+https://github.com/rust-lang/crates.io-index#thiserror@1.0.69"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#json-ld-context-processing@0.21.2",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#contextual@0.1.6",
        "registry+https://github.com/rust-lang/crates.io-index#futures@0.3.31",
        "registry+https://github.com/rust-lang/crates.io-index#iref@3.2.2",
        "registry+https://github.com/rust-lang/crates.io-index#json-ld-core@0.21.2",
        "registry+https://github.com/rust-lang/crates.io-index#json-ld-syntax@0.21.2",
        "registry+https://github.com/rust-lang/crates.io-index#mown@0.2.2",
        "registry+https://github.com/rust-lang/crates.io-index#owning_ref@0.4.1",
        "registry+https://github.com/rust-lang/crates.io-index#rdf-types@0.22.5",
        "registry+https://github.com/rust-lang/crates.io-index#thiserror@1.0.69"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#json-ld-core@0.21.2",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#contextual@0.1.6",
        "registry+https://github.com/rust-lang/crates.io-index#educe@0.4.23",
        "registry+https://github.com/rust-lang/crates.io-index#futures@0.3.31",
        "registry+https://github.com/rust-lang/crates.io-index#hashbrown@0.13.2",
        "registry+https://github.com/rust-lang/crates.io-index#indexmap@2.10.0",
        "registry+https://github.com/rust-lang/crates.io-index#iref@3.2.2",
        "registry+https://github.com/rust-lang/crates.io-index#json-ld-syntax@0.21.2",
        "registry+https://github.com/rust-lang/crates.io-index#json-syntax@0.12.5",
        "registry+https://github.com/rust-lang/crates.io-index#langtag@0.4.0",
        "registry+https://github.com/rust-lang/crates.io-index#linked-data@0.1.2",
        "registry+https://github.com/rust-lang/crates.io-index#log@0.4.27",
        "registry+https://github.com/rust-lang/crates.io-index#mime@0.3.17",
        "registry+https://github.com/rust-lang/crates.io-index#once_cell@1.21.3",
        "registry+https://github.com/rust-lang/crates.io-index#permutohedron@0.2.4",
        "registry+https://github.com/rust-lang/crates.io-index#pretty_dtoa@0.3.0",
        "registry+https://github.com/rust-lang/crates.io-index#rdf-types@0.22.5",
        "registry+https://github.com/rust-lang/crates.io-index#ryu-js@0.2.2",
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219",
        "registry+https://github.com/rust-lang/crates.io-index#smallvec@1.15.1",
        "registry+https://github.com/rust-lang/crates.io-index#static-iref@3.0.0",
        "registry+https://github.com/rust-lang/crates.io-index#thiserror@1.0.69"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#json-ld-expansion@0.21.2",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#contextual@0.1.6",
        "registry+https://github.com/rust-lang/crates.io-index#educe@0.4.23",
        "registry+https://github.com/rust-lang/crates.io-index#futures@0.3.31",
        "registry+https://github.com/rust-lang/crates.io-index#indexmap@2.10.0",
        "registry+https://github.com/rust-lang/crates.io-index#iref@3.2.2",
        "registry+https://github.com/rust-lang/crates.io-index#json-ld-context-processing@0.21.2",
        "registry+https://github.com/rust-lang/crates.io-index#json-ld-core@0.21.2",
        "registry+https://github.com/rust-lang/crates.io-index#json-ld-syntax@0.21.2",
        "registry+https://github.com/rust-lang/crates.io-index#json-syntax@0.12.5",
        "registry+https://github.com/rust-lang/crates.io-index#langtag@0.4.0",
        "registry+https://github.com/rust-lang/crates.io-index#mown@0.2.2",
        "registry+https://github.com/rust-lang/crates.io-index#rdf-types@0.22.5",
        "registry+https://github.com/rust-lang/crates.io-index#thiserror@1.0.69"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#json-ld-serialization@0.21.2",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#indexmap@2.10.0",
        "registry+https://github.com/rust-lang/crates.io-index#iref@3.2.2",
        "registry+https://github.com/rust-lang/crates.io-index#json-ld-core@0.21.2",
        "registry+https://github.com/rust-lang/crates.io-index#json-syntax@0.12.5",
        "registry+https://github.com/rust-lang/crates.io-index#linked-data@0.1.2",
        "registry+https://github.com/rust-lang/crates.io-index#rdf-types@0.22.5",
        "registry+https://github.com/rust-lang/crates.io-index#thiserror@1.0.69",
        "registry+https://github.com/rust-lang/crates.io-index#xsd-types@0.9.6"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#json-ld-syntax@0.21.2",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#contextual@0.1.6",
        "registry+https://github.com/rust-lang/crates.io-index#decoded-char@0.1.1",
        "registry+https://github.com/rust-lang/crates.io-index#educe@0.4.23",
        "registry+https://github.com/rust-lang/crates.io-index#hashbrown@0.13.2",
        "registry+https://github.com/rust-lang/crates.io-index#indexmap@2.10.0",
        "registry+https://github.com/rust-lang/crates.io-index#iref@3.2.2",
        "registry+https://github.com/rust-lang/crates.io-index#json-syntax@0.12.5",
        "registry+https://github.com/rust-lang/crates.io-index#langtag@0.4.0",
        "registry+https://github.com/rust-lang/crates.io-index#locspan@0.8.2",
        "registry+https://github.com/rust-lang/crates.io-index#rdf-types@0.22.5",
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219",
        "registry+https://github.com/rust-lang/crates.io-index#smallvec@1.15.1",
        "registry+https://github.com/rust-lang/crates.io-index#thiserror@1.0.69"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#json-ld@0.21.2",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#contextual@0.1.6",
        "registry+https://github.com/rust-lang/crates.io-index#futures@0.3.31",
        "registry+https://github.com/rust-lang/crates.io-index#iref@3.2.2",
        "registry+https://github.com/rust-lang/crates.io-index#json-ld-compaction@0.21.2",
        "registry+https://github.com/rust-lang/crates.io-index#json-ld-context-processing@0.21.2",
        "registry+https://github.com/rust-lang/crates.io-index#json-ld-core@0.21.2",
        "registry+https://github.com/rust-lang/crates.io-index#json-ld-expansion@0.21.2",
        "registry+https://github.com/rust-lang/crates.io-index#json-ld-serialization@0.21.2",
        "registry+https://github.com/rust-lang/crates.io-index#json-ld-syntax@0.21.2",
        "registry+https://github.com/rust-lang/crates.io-index#json-syntax@0.12.5",
        "registry+https://github.com/rust-lang/crates.io-index#locspan@0.8.2",
        "registry+https://github.com/rust-lang/crates.io-index#rdf-types@0.22.5",
        "registry+https://github.com/rust-lang/crates.io-index#thiserror@1.0.69"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#json-number@0.4.9",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#lexical@7.0.4",
        "registry+https://github.com/rust-lang/crates.io-index#ryu-js@0.2.2",
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219",
        "registry+https://github.com/rust-lang/crates.io-index#smallvec@1.15.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#json-patch@0.2.7",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219",
        "registry+https://github.com/rust-lang/crates.io-index#serde_json@1.0.142",
        "registry+https://github.com/rust-lang/crates.io-index#treediff@3.0.2"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#json-syntax@0.12.5",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#contextual@0.1.6",
        "registry+https://github.com/rust-lang/crates.io-index#decoded-char@0.1.1",
        "registry+https://github.com/rust-lang/crates.io-index#hashbrown@0.12.3",
        "registry+https://github.com/rust-lang/crates.io-index#indexmap@1.9.3",
        "registry+https://github.com/rust-lang/crates.io-index#json-number@0.4.9",
        "registry+https://github.com/rust-lang/crates.io-index#locspan@0.8.2",
        "registry+https://github.com/rust-lang/crates.io-index#locspan-derive@0.6.0",
        "registry+https://github.com/rust-lang/crates.io-index#ryu-js@0.2.2",
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219",
        "registry+https://github.com/rust-lang/crates.io-index#smallstr@0.3.1",
        "registry+https://github.com/rust-lang/crates.io-index#smallvec@1.15.1",
        "registry+https://github.com/rust-lang/crates.io-index#utf8-decode@1.0.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#k256@0.13.4",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#cfg-if@1.0.1",
        "registry+https://github.com/rust-lang/crates.io-index#ecdsa@0.16.9",
        "registry+https://github.com/rust-lang/crates.io-index#elliptic-curve@0.13.8",
        "registry+https://github.com/rust-lang/crates.io-index#once_cell@1.21.3",
        "registry+https://github.com/rust-lang/crates.io-index#sha2@0.10.9",
        "registry+https://github.com/rust-lang/crates.io-index#signature@2.2.0"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#keccak-hash@0.7.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#primitive-types@0.9.1",
        "registry+https://github.com/rust-lang/crates.io-index#tiny-keccak@2.0.2"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#keccak@0.1.5",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#cpufeatures@0.2.17"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#keyring@3.6.3",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#log@0.4.27",
        "registry+https://github.com/rust-lang/crates.io-index#security-framework@3.3.0"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#langtag@0.4.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#static-regular-grammar@2.0.2",
        "registry+https://github.com/rust-lang/crates.io-index#thiserror@1.0.69"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#lazy_static@1.5.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#spin@0.9.8"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#lexical-core@1.0.5",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#lexical-parse-float@1.0.5",
        "registry+https://github.com/rust-lang/crates.io-index#lexical-parse-integer@1.0.5",
        "registry+https://github.com/rust-lang/crates.io-index#lexical-util@1.0.6",
        "registry+https://github.com/rust-lang/crates.io-index#lexical-write-float@1.0.5",
        "registry+https://github.com/rust-lang/crates.io-index#lexical-write-integer@1.0.5"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#lexical-parse-float@1.0.5",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#lexical-parse-integer@1.0.5",
        "registry+https://github.com/rust-lang/crates.io-index#lexical-util@1.0.6",
        "registry+https://github.com/rust-lang/crates.io-index#static_assertions@1.1.0"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#lexical-parse-integer@1.0.5",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#lexical-util@1.0.6",
        "registry+https://github.com/rust-lang/crates.io-index#static_assertions@1.1.0"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#lexical-util@1.0.6",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#static_assertions@1.1.0"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#lexical-write-float@1.0.5",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#lexical-util@1.0.6",
        "registry+https://github.com/rust-lang/crates.io-index#lexical-write-integer@1.0.5",
        "registry+https://github.com/rust-lang/crates.io-index#static_assertions@1.1.0"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#lexical-write-integer@1.0.5",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#lexical-util@1.0.6",
        "registry+https://github.com/rust-lang/crates.io-index#static_assertions@1.1.0"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#lexical@7.0.4",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#lexical-core@1.0.5"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#libc@0.2.175",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#libipld-cbor-derive@0.14.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro-crate@1.1.3",
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.97",
        "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.40",
        "registry+https://github.com/rust-lang/crates.io-index#syn@1.0.109",
        "registry+https://github.com/rust-lang/crates.io-index#synstructure@0.12.6"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#libipld-cbor@0.14.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#byteorder@1.5.0",
        "registry+https://github.com/rust-lang/crates.io-index#libipld-core@0.14.0",
        "registry+https://github.com/rust-lang/crates.io-index#thiserror@1.0.69"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#libipld-core@0.14.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#anyhow@1.0.99",
        "registry+https://github.com/rust-lang/crates.io-index#cid@0.8.6",
        "registry+https://github.com/rust-lang/crates.io-index#core2@0.4.0",
        "registry+https://github.com/rust-lang/crates.io-index#multibase@0.9.1",
        "registry+https://github.com/rust-lang/crates.io-index#multihash@0.16.3",
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219",
        "registry+https://github.com/rust-lang/crates.io-index#thiserror@1.0.69"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#libipld-json@0.14.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#libipld-core@0.14.0",
        "registry+https://github.com/rust-lang/crates.io-index#multihash@0.16.3",
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219",
        "registry+https://github.com/rust-lang/crates.io-index#serde_json@1.0.142"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#libipld-macro@0.14.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#libipld-core@0.14.0"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#libipld@0.14.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#async-trait@0.1.88",
        "registry+https://github.com/rust-lang/crates.io-index#cached@0.30.0",
        "registry+https://github.com/rust-lang/crates.io-index#fnv@1.0.7",
        "registry+https://github.com/rust-lang/crates.io-index#libipld-cbor@0.14.0",
        "registry+https://github.com/rust-lang/crates.io-index#libipld-cbor-derive@0.14.0",
        "registry+https://github.com/rust-lang/crates.io-index#libipld-core@0.14.0",
        "registry+https://github.com/rust-lang/crates.io-index#libipld-json@0.14.0",
        "registry+https://github.com/rust-lang/crates.io-index#libipld-macro@0.14.0",
        "registry+https://github.com/rust-lang/crates.io-index#log@0.4.27",
        "registry+https://github.com/rust-lang/crates.io-index#multihash@0.16.3",
        "registry+https://github.com/rust-lang/crates.io-index#parking_lot@0.12.4",
        "registry+https://github.com/rust-lang/crates.io-index#thiserror@1.0.69"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#libm@0.2.15",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#linked-data-derive@0.1.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#iref@3.2.2",
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro-error@1.0.4",
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.97",
        "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.40",
        "registry+https://github.com/rust-lang/crates.io-index#static-iref@3.0.0",
        "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.105",
        "registry+https://github.com/rust-lang/crates.io-index#thiserror@1.0.69"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#linked-data@0.1.2",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#educe@0.4.23",
        "registry+https://github.com/rust-lang/crates.io-index#im@15.1.0",
        "registry+https://github.com/rust-lang/crates.io-index#iref@3.2.2",
        "registry+https://github.com/rust-lang/crates.io-index#json-syntax@0.12.5",
        "registry+https://github.com/rust-lang/crates.io-index#linked-data-derive@0.1.0",
        "registry+https://github.com/rust-lang/crates.io-index#rdf-types@0.22.5",
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219",
        "registry+https://github.com/rust-lang/crates.io-index#static-iref@3.0.0",
        "registry+https://github.com/rust-lang/crates.io-index#thiserror@1.0.69",
        "registry+https://github.com/rust-lang/crates.io-index#xsd-types@0.9.6"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#litemap@0.8.0",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#litrs@0.4.2",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#lock_api@0.4.13",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#autocfg@1.5.0",
        "registry+https://github.com/rust-lang/crates.io-index#scopeguard@1.2.0"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#locspan-derive@0.6.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro-error@1.0.4",
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.97",
        "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.40",
        "registry+https://github.com/rust-lang/crates.io-index#syn@1.0.109"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#locspan@0.8.2",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#log@0.4.27",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#lru-slab@0.1.2",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#matchers@0.1.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#regex-automata@0.1.10"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#memchr@2.7.5",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#mime@0.3.17",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#minimal-lexical@0.2.1",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#miniz_oxide@0.8.9",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#adler2@2.0.1",
        "registry+https://github.com/rust-lang/crates.io-index#simd-adler32@0.3.7"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#mio@1.0.4",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#libc@0.2.175",
        "registry+https://github.com/rust-lang/crates.io-index#log@0.4.27"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#moka@0.12.10",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#async-lock@3.4.1",
        "registry+https://github.com/rust-lang/crates.io-index#crossbeam-channel@0.5.15",
        "registry+https://github.com/rust-lang/crates.io-index#crossbeam-epoch@0.9.18",
        "registry+https://github.com/rust-lang/crates.io-index#crossbeam-utils@0.8.21",
        "registry+https://github.com/rust-lang/crates.io-index#event-listener@5.4.1",
        "registry+https://github.com/rust-lang/crates.io-index#futures-util@0.3.31",
        "registry+https://github.com/rust-lang/crates.io-index#parking_lot@0.12.4",
        "registry+https://github.com/rust-lang/crates.io-index#portable-atomic@1.11.1",
        "registry+https://github.com/rust-lang/crates.io-index#smallvec@1.15.1",
        "registry+https://github.com/rust-lang/crates.io-index#tagptr@0.2.0",
        "registry+https://github.com/rust-lang/crates.io-index#thiserror@1.0.69",
        "registry+https://github.com/rust-lang/crates.io-index#uuid@1.18.0"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#mown@0.2.2",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#multibase@0.8.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#base-x@0.2.11",
        "registry+https://github.com/rust-lang/crates.io-index#data-encoding@2.9.0",
        "registry+https://github.com/rust-lang/crates.io-index#data-encoding-macro@0.1.18"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#multibase@0.9.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#base-x@0.2.11",
        "registry+https://github.com/rust-lang/crates.io-index#data-encoding@2.9.0",
        "registry+https://github.com/rust-lang/crates.io-index#data-encoding-macro@0.1.18"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#multihash-derive@0.8.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro-crate@1.1.3",
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro-error@1.0.4",
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.97",
        "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.40",
        "registry+https://github.com/rust-lang/crates.io-index#syn@1.0.109",
        "registry+https://github.com/rust-lang/crates.io-index#synstructure@0.12.6"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#multihash@0.16.3",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#blake2b_simd@1.0.3",
        "registry+https://github.com/rust-lang/crates.io-index#blake2s_simd@1.0.3",
        "registry+https://github.com/rust-lang/crates.io-index#blake3@1.8.2",
        "registry+https://github.com/rust-lang/crates.io-index#core2@0.4.0",
        "registry+https://github.com/rust-lang/crates.io-index#digest@0.10.7",
        "registry+https://github.com/rust-lang/crates.io-index#multihash-derive@0.8.1",
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219",
        "registry+https://github.com/rust-lang/crates.io-index#serde-big-array@0.3.3",
        "registry+https://github.com/rust-lang/crates.io-index#sha2@0.10.9",
        "registry+https://github.com/rust-lang/crates.io-index#sha3@0.10.8",
        "registry+https://github.com/rust-lang/crates.io-index#unsigned-varint@0.7.2"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#multihash@0.19.3",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#core2@0.4.0",
        "registry+https://github.com/rust-lang/crates.io-index#unsigned-varint@0.8.0"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#native-tls@0.2.14",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#libc@0.2.175",
        "registry+https://github.com/rust-lang/crates.io-index#security-framework@2.11.1",
        "registry+https://github.com/rust-lang/crates.io-index#security-framework-sys@2.14.0",
        "registry+https://github.com/rust-lang/crates.io-index#tempfile@3.20.0"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#nom@7.1.3",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#memchr@2.7.5",
        "registry+https://github.com/rust-lang/crates.io-index#minimal-lexical@0.2.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#nu-ansi-term@0.46.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#overload@0.1.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#num-bigint-dig@0.8.4",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#byteorder@1.5.0",
        "registry+https://github.com/rust-lang/crates.io-index#lazy_static@1.5.0",
        "registry+https://github.com/rust-lang/crates.io-index#libm@0.2.15",
        "registry+https://github.com/rust-lang/crates.io-index#num-integer@0.1.46",
        "registry+https://github.com/rust-lang/crates.io-index#num-iter@0.1.45",
        "registry+https://github.com/rust-lang/crates.io-index#num-traits@0.2.19",
        "registry+https://github.com/rust-lang/crates.io-index#rand@0.8.5",
        "registry+https://github.com/rust-lang/crates.io-index#smallvec@1.15.1",
        "registry+https://github.com/rust-lang/crates.io-index#zeroize@1.8.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#num-bigint@0.4.6",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#num-integer@0.1.46",
        "registry+https://github.com/rust-lang/crates.io-index#num-traits@0.2.19"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#num-conv@0.1.0",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#num-derive@0.3.3",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.97",
        "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.40",
        "registry+https://github.com/rust-lang/crates.io-index#syn@1.0.109"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#num-integer@0.1.46",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#num-traits@0.2.19"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#num-iter@0.1.45",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#autocfg@1.5.0",
        "registry+https://github.com/rust-lang/crates.io-index#num-integer@0.1.46",
        "registry+https://github.com/rust-lang/crates.io-index#num-traits@0.2.19"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#num-rational@0.4.2",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#num-bigint@0.4.6",
        "registry+https://github.com/rust-lang/crates.io-index#num-integer@0.1.46",
        "registry+https://github.com/rust-lang/crates.io-index#num-traits@0.2.19"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#num-traits@0.2.19",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#autocfg@1.5.0",
        "registry+https://github.com/rust-lang/crates.io-index#libm@0.2.15"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#num_threads@0.1.7",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#libc@0.2.175"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#once_cell@1.21.3",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#opaque-debug@0.3.1",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#ordered-float@3.9.2",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#num-traits@0.2.19"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#ordered-float@4.6.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#num-traits@0.2.19",
        "registry+https://github.com/rust-lang/crates.io-index#rand@0.8.5",
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#overload@0.1.1",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#owning_ref@0.4.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#stable_deref_trait@1.2.0"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#p256@0.13.2",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#ecdsa@0.16.9",
        "registry+https://github.com/rust-lang/crates.io-index#elliptic-curve@0.13.8",
        "registry+https://github.com/rust-lang/crates.io-index#primeorder@0.13.6",
        "registry+https://github.com/rust-lang/crates.io-index#sha2@0.10.9"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#p384@0.13.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#ecdsa@0.16.9",
        "registry+https://github.com/rust-lang/crates.io-index#elliptic-curve@0.13.8",
        "registry+https://github.com/rust-lang/crates.io-index#primeorder@0.13.6",
        "registry+https://github.com/rust-lang/crates.io-index#sha2@0.10.9"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#parking@2.2.1",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#parking_lot@0.12.4",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#lock_api@0.4.13",
        "registry+https://github.com/rust-lang/crates.io-index#parking_lot_core@0.9.11"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#parking_lot_core@0.9.11",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#cfg-if@1.0.1",
        "registry+https://github.com/rust-lang/crates.io-index#libc@0.2.175",
        "registry+https://github.com/rust-lang/crates.io-index#smallvec@1.15.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#pct-str@2.0.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#thiserror@1.0.69",
        "registry+https://github.com/rust-lang/crates.io-index#utf8-decode@1.0.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#pem-rfc7468@0.3.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#base64ct@1.8.0"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#pem-rfc7468@0.7.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#base64ct@1.8.0"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#percent-encoding@2.3.1",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#permutohedron@0.2.4",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#pin-project-internal@1.1.10",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.97",
        "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.40",
        "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.105"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#pin-project-lite@0.2.16",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#pin-project@1.1.10",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#pin-project-internal@1.1.10"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#pin-utils@0.1.0",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#pkcs1@0.3.3",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#der@0.5.1",
        "registry+https://github.com/rust-lang/crates.io-index#pkcs8@0.8.0",
        "registry+https://github.com/rust-lang/crates.io-index#zeroize@1.8.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#pkcs8@0.10.2",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#der@0.7.10",
        "registry+https://github.com/rust-lang/crates.io-index#spki@0.7.3"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#pkcs8@0.8.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#der@0.5.1",
        "registry+https://github.com/rust-lang/crates.io-index#spki@0.5.4",
        "registry+https://github.com/rust-lang/crates.io-index#zeroize@1.8.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#poly1305@0.8.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#opaque-debug@0.3.1",
        "registry+https://github.com/rust-lang/crates.io-index#universal-hash@0.5.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#polyval@0.6.2",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#cfg-if@1.0.1",
        "registry+https://github.com/rust-lang/crates.io-index#cpufeatures@0.2.17",
        "registry+https://github.com/rust-lang/crates.io-index#opaque-debug@0.3.1",
        "registry+https://github.com/rust-lang/crates.io-index#universal-hash@0.5.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#portable-atomic@1.11.1",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#potential_utf@0.1.2",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#zerovec@0.11.4"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#powerfmt@0.2.0",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#ppv-lite86@0.2.21",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#zerocopy@0.8.26"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#pretty_dtoa@0.3.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#ryu_floating_decimal@0.1.0"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#primeorder@0.13.6",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#elliptic-curve@0.13.8"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#primitive-types@0.9.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#fixed-hash@0.7.0",
        "registry+https://github.com/rust-lang/crates.io-index#uint@0.9.5"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#proc-macro-crate@1.1.3",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#thiserror@1.0.69",
        "registry+https://github.com/rust-lang/crates.io-index#toml@0.5.11"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#proc-macro-error-attr@1.0.4",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.97",
        "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.40",
        "registry+https://github.com/rust-lang/crates.io-index#version_check@0.9.5"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#proc-macro-error@1.0.4",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro-error-attr@1.0.4",
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.97",
        "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.40",
        "registry+https://github.com/rust-lang/crates.io-index#syn@1.0.109",
        "registry+https://github.com/rust-lang/crates.io-index#version_check@0.9.5"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.97",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#unicode-ident@1.0.18"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#quinn-proto@0.11.12",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#bytes@1.10.1",
        "registry+https://github.com/rust-lang/crates.io-index#lru-slab@0.1.2",
        "registry+https://github.com/rust-lang/crates.io-index#rand@0.9.2",
        "registry+https://github.com/rust-lang/crates.io-index#ring@0.17.14",
        "registry+https://github.com/rust-lang/crates.io-index#rustc-hash@2.1.1",
        "registry+https://github.com/rust-lang/crates.io-index#rustls@0.23.31",
        "registry+https://github.com/rust-lang/crates.io-index#slab@0.4.11",
        "registry+https://github.com/rust-lang/crates.io-index#thiserror@2.0.14",
        "registry+https://github.com/rust-lang/crates.io-index#tinyvec@1.9.0",
        "registry+https://github.com/rust-lang/crates.io-index#tracing@0.1.41"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#quinn-udp@0.5.13",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#cfg_aliases@0.2.1",
        "registry+https://github.com/rust-lang/crates.io-index#libc@0.2.175",
        "registry+https://github.com/rust-lang/crates.io-index#socket2@0.5.10",
        "registry+https://github.com/rust-lang/crates.io-index#tracing@0.1.41"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#quinn@0.11.8",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#bytes@1.10.1",
        "registry+https://github.com/rust-lang/crates.io-index#cfg_aliases@0.2.1",
        "registry+https://github.com/rust-lang/crates.io-index#pin-project-lite@0.2.16",
        "registry+https://github.com/rust-lang/crates.io-index#quinn-proto@0.11.12",
        "registry+https://github.com/rust-lang/crates.io-index#quinn-udp@0.5.13",
        "registry+https://github.com/rust-lang/crates.io-index#rustc-hash@2.1.1",
        "registry+https://github.com/rust-lang/crates.io-index#rustls@0.23.31",
        "registry+https://github.com/rust-lang/crates.io-index#socket2@0.5.10",
        "registry+https://github.com/rust-lang/crates.io-index#thiserror@2.0.14",
        "registry+https://github.com/rust-lang/crates.io-index#tokio@1.47.1",
        "registry+https://github.com/rust-lang/crates.io-index#tracing@0.1.41"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.40",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.97"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#radium@0.6.2",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#rand@0.8.5",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#libc@0.2.175",
        "registry+https://github.com/rust-lang/crates.io-index#rand_chacha@0.3.1",
        "registry+https://github.com/rust-lang/crates.io-index#rand_core@0.6.4",
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#rand@0.9.2",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#rand_chacha@0.9.0",
        "registry+https://github.com/rust-lang/crates.io-index#rand_core@0.9.3"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#rand_chacha@0.3.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#ppv-lite86@0.2.21",
        "registry+https://github.com/rust-lang/crates.io-index#rand_core@0.6.4"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#rand_chacha@0.9.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#ppv-lite86@0.2.21",
        "registry+https://github.com/rust-lang/crates.io-index#rand_core@0.9.3"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#rand_core@0.6.4",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#getrandom@0.2.16",
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#rand_core@0.9.3",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#getrandom@0.3.3"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#rand_xoshiro@0.6.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#rand_core@0.6.4"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#range-traits@0.3.2",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#raw-btree@0.3.3",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#rdf-types@0.22.5",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#contextual@0.1.6",
        "registry+https://github.com/rust-lang/crates.io-index#educe@0.5.11",
        "registry+https://github.com/rust-lang/crates.io-index#indexmap@2.10.0",
        "registry+https://github.com/rust-lang/crates.io-index#iref@3.2.2",
        "registry+https://github.com/rust-lang/crates.io-index#langtag@0.4.0",
        "registry+https://github.com/rust-lang/crates.io-index#raw-btree@0.3.3",
        "registry+https://github.com/rust-lang/crates.io-index#replace_with@0.1.8",
        "registry+https://github.com/rust-lang/crates.io-index#slab@0.4.11",
        "registry+https://github.com/rust-lang/crates.io-index#static-iref@3.0.0",
        "registry+https://github.com/rust-lang/crates.io-index#thiserror@1.0.69"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#ref-cast-impl@1.0.24",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.97",
        "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.40",
        "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.105"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#ref-cast@1.0.24",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#ref-cast-impl@1.0.24"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#regex-automata@0.1.10",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#regex-syntax@0.6.29"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#regex-automata@0.4.9",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#aho-corasick@1.1.3",
        "registry+https://github.com/rust-lang/crates.io-index#memchr@2.7.5",
        "registry+https://github.com/rust-lang/crates.io-index#regex-syntax@0.8.5"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#regex-syntax@0.6.29",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#regex-syntax@0.8.5",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#regex@1.11.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#aho-corasick@1.1.3",
        "registry+https://github.com/rust-lang/crates.io-index#memchr@2.7.5",
        "registry+https://github.com/rust-lang/crates.io-index#regex-automata@0.4.9",
        "registry+https://github.com/rust-lang/crates.io-index#regex-syntax@0.8.5"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#replace_with@0.1.8",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#reqwest@0.11.27",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#base64@0.21.7",
        "registry+https://github.com/rust-lang/crates.io-index#bytes@1.10.1",
        "registry+https://github.com/rust-lang/crates.io-index#encoding_rs@0.8.35",
        "registry+https://github.com/rust-lang/crates.io-index#futures-core@0.3.31",
        "registry+https://github.com/rust-lang/crates.io-index#futures-util@0.3.31",
        "registry+https://github.com/rust-lang/crates.io-index#h2@0.3.27",
        "registry+https://github.com/rust-lang/crates.io-index#http@0.2.12",
        "registry+https://github.com/rust-lang/crates.io-index#http-body@0.4.6",
        "registry+https://github.com/rust-lang/crates.io-index#hyper@0.14.32",
        "registry+https://github.com/rust-lang/crates.io-index#hyper-rustls@0.24.2",
        "registry+https://github.com/rust-lang/crates.io-index#hyper-tls@0.5.0",
        "registry+https://github.com/rust-lang/crates.io-index#ipnet@2.11.0",
        "registry+https://github.com/rust-lang/crates.io-index#log@0.4.27",
        "registry+https://github.com/rust-lang/crates.io-index#mime@0.3.17",
        "registry+https://github.com/rust-lang/crates.io-index#native-tls@0.2.14",
        "registry+https://github.com/rust-lang/crates.io-index#once_cell@1.21.3",
        "registry+https://github.com/rust-lang/crates.io-index#percent-encoding@2.3.1",
        "registry+https://github.com/rust-lang/crates.io-index#pin-project-lite@0.2.16",
        "registry+https://github.com/rust-lang/crates.io-index#rustls@0.21.12",
        "registry+https://github.com/rust-lang/crates.io-index#rustls-pemfile@1.0.4",
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219",
        "registry+https://github.com/rust-lang/crates.io-index#serde_json@1.0.142",
        "registry+https://github.com/rust-lang/crates.io-index#serde_urlencoded@0.7.1",
        "registry+https://github.com/rust-lang/crates.io-index#sync_wrapper@0.1.2",
        "registry+https://github.com/rust-lang/crates.io-index#system-configuration@0.5.1",
        "registry+https://github.com/rust-lang/crates.io-index#tokio@1.47.1",
        "registry+https://github.com/rust-lang/crates.io-index#tokio-native-tls@0.3.1",
        "registry+https://github.com/rust-lang/crates.io-index#tokio-rustls@0.24.1",
        "registry+https://github.com/rust-lang/crates.io-index#tower-service@0.3.3",
        "registry+https://github.com/rust-lang/crates.io-index#url@2.5.4",
        "registry+https://github.com/rust-lang/crates.io-index#webpki-roots@0.25.4"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#reqwest@0.12.23",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#base64@0.22.1",
        "registry+https://github.com/rust-lang/crates.io-index#bytes@1.10.1",
        "registry+https://github.com/rust-lang/crates.io-index#encoding_rs@0.8.35",
        "registry+https://github.com/rust-lang/crates.io-index#futures-core@0.3.31",
        "registry+https://github.com/rust-lang/crates.io-index#h2@0.4.12",
        "registry+https://github.com/rust-lang/crates.io-index#http@1.3.1",
        "registry+https://github.com/rust-lang/crates.io-index#http-body@1.0.1",
        "registry+https://github.com/rust-lang/crates.io-index#http-body-util@0.1.3",
        "registry+https://github.com/rust-lang/crates.io-index#hyper@1.6.0",
        "registry+https://github.com/rust-lang/crates.io-index#hyper-rustls@0.27.7",
        "registry+https://github.com/rust-lang/crates.io-index#hyper-tls@0.6.0",
        "registry+https://github.com/rust-lang/crates.io-index#hyper-util@0.1.16",
        "registry+https://github.com/rust-lang/crates.io-index#log@0.4.27",
        "registry+https://github.com/rust-lang/crates.io-index#mime@0.3.17",
        "registry+https://github.com/rust-lang/crates.io-index#native-tls@0.2.14",
        "registry+https://github.com/rust-lang/crates.io-index#percent-encoding@2.3.1",
        "registry+https://github.com/rust-lang/crates.io-index#pin-project-lite@0.2.16",
        "registry+https://github.com/rust-lang/crates.io-index#quinn@0.11.8",
        "registry+https://github.com/rust-lang/crates.io-index#rustls@0.23.31",
        "registry+https://github.com/rust-lang/crates.io-index#rustls-pki-types@1.12.0",
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219",
        "registry+https://github.com/rust-lang/crates.io-index#serde_json@1.0.142",
        "registry+https://github.com/rust-lang/crates.io-index#serde_urlencoded@0.7.1",
        "registry+https://github.com/rust-lang/crates.io-index#sync_wrapper@1.0.2",
        "registry+https://github.com/rust-lang/crates.io-index#tokio@1.47.1",
        "registry+https://github.com/rust-lang/crates.io-index#tokio-native-tls@0.3.1",
        "registry+https://github.com/rust-lang/crates.io-index#tokio-rustls@0.26.2",
        "registry+https://github.com/rust-lang/crates.io-index#tower@0.5.2",
        "registry+https://github.com/rust-lang/crates.io-index#tower-http@0.6.6",
        "registry+https://github.com/rust-lang/crates.io-index#tower-service@0.3.3",
        "registry+https://github.com/rust-lang/crates.io-index#url@2.5.4"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#rfc6979@0.4.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#hmac@0.12.1",
        "registry+https://github.com/rust-lang/crates.io-index#subtle@2.6.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#ring@0.17.14",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#cc@1.2.32",
        "registry+https://github.com/rust-lang/crates.io-index#cfg-if@1.0.1",
        "registry+https://github.com/rust-lang/crates.io-index#getrandom@0.2.16",
        "registry+https://github.com/rust-lang/crates.io-index#libc@0.2.175",
        "registry+https://github.com/rust-lang/crates.io-index#untrusted@0.9.0"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#ripemd160@0.9.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#block-buffer@0.9.0",
        "registry+https://github.com/rust-lang/crates.io-index#digest@0.9.0",
        "registry+https://github.com/rust-lang/crates.io-index#opaque-debug@0.3.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#rsa@0.6.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#byteorder@1.5.0",
        "registry+https://github.com/rust-lang/crates.io-index#digest@0.10.7",
        "registry+https://github.com/rust-lang/crates.io-index#num-bigint-dig@0.8.4",
        "registry+https://github.com/rust-lang/crates.io-index#num-integer@0.1.46",
        "registry+https://github.com/rust-lang/crates.io-index#num-iter@0.1.45",
        "registry+https://github.com/rust-lang/crates.io-index#num-traits@0.2.19",
        "registry+https://github.com/rust-lang/crates.io-index#pkcs1@0.3.3",
        "registry+https://github.com/rust-lang/crates.io-index#pkcs8@0.8.0",
        "registry+https://github.com/rust-lang/crates.io-index#rand_core@0.6.4",
        "registry+https://github.com/rust-lang/crates.io-index#smallvec@1.15.1",
        "registry+https://github.com/rust-lang/crates.io-index#subtle@2.6.1",
        "registry+https://github.com/rust-lang/crates.io-index#zeroize@1.8.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#rustc-hash@2.1.1",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#rustc_version@0.4.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#semver@1.0.26"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#rustix@1.0.8",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#bitflags@2.9.1",
        "registry+https://github.com/rust-lang/crates.io-index#errno@0.3.13",
        "registry+https://github.com/rust-lang/crates.io-index#libc@0.2.175"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#rustls-native-certs@0.6.3",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#rustls-pemfile@1.0.4",
        "registry+https://github.com/rust-lang/crates.io-index#security-framework@2.11.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#rustls-native-certs@0.8.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#rustls-pki-types@1.12.0",
        "registry+https://github.com/rust-lang/crates.io-index#security-framework@3.3.0"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#rustls-pemfile@1.0.4",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#base64@0.21.7"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#rustls-pki-types@1.12.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#zeroize@1.8.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#rustls-platform-verifier@0.6.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#core-foundation@0.10.1",
        "registry+https://github.com/rust-lang/crates.io-index#core-foundation-sys@0.8.7",
        "registry+https://github.com/rust-lang/crates.io-index#log@0.4.27",
        "registry+https://github.com/rust-lang/crates.io-index#rustls@0.23.31",
        "registry+https://github.com/rust-lang/crates.io-index#security-framework@3.3.0",
        "registry+https://github.com/rust-lang/crates.io-index#security-framework-sys@2.14.0"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#rustls-webpki@0.101.7",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#ring@0.17.14",
        "registry+https://github.com/rust-lang/crates.io-index#untrusted@0.9.0"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#rustls-webpki@0.103.4",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#aws-lc-rs@1.13.3",
        "registry+https://github.com/rust-lang/crates.io-index#ring@0.17.14",
        "registry+https://github.com/rust-lang/crates.io-index#rustls-pki-types@1.12.0",
        "registry+https://github.com/rust-lang/crates.io-index#untrusted@0.9.0"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#rustls@0.21.12",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#log@0.4.27",
        "registry+https://github.com/rust-lang/crates.io-index#ring@0.17.14",
        "registry+https://github.com/rust-lang/crates.io-index#rustls-webpki@0.101.7",
        "registry+https://github.com/rust-lang/crates.io-index#sct@0.7.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#rustls@0.23.31",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#aws-lc-rs@1.13.3",
        "registry+https://github.com/rust-lang/crates.io-index#log@0.4.27",
        "registry+https://github.com/rust-lang/crates.io-index#once_cell@1.21.3",
        "registry+https://github.com/rust-lang/crates.io-index#ring@0.17.14",
        "registry+https://github.com/rust-lang/crates.io-index#rustls-pki-types@1.12.0",
        "registry+https://github.com/rust-lang/crates.io-index#rustls-webpki@0.103.4",
        "registry+https://github.com/rust-lang/crates.io-index#subtle@2.6.1",
        "registry+https://github.com/rust-lang/crates.io-index#zeroize@1.8.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#rustversion@1.0.22",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#ryu-js@0.2.2",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#ryu-js@1.0.2",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#ryu@1.0.20",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#ryu_floating_decimal@0.1.0",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#salsa20@0.10.2",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#cipher@0.4.4"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#schemars@0.9.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#dyn-clone@1.0.20",
        "registry+https://github.com/rust-lang/crates.io-index#ref-cast@1.0.24",
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219",
        "registry+https://github.com/rust-lang/crates.io-index#serde_json@1.0.142"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#schemars@1.0.4",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#dyn-clone@1.0.20",
        "registry+https://github.com/rust-lang/crates.io-index#ref-cast@1.0.24",
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219",
        "registry+https://github.com/rust-lang/crates.io-index#serde_json@1.0.142"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#scopeguard@1.2.0",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#sct@0.7.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#ring@0.17.14",
        "registry+https://github.com/rust-lang/crates.io-index#untrusted@0.9.0"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#sec1@0.7.3",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#base16ct@0.2.0",
        "registry+https://github.com/rust-lang/crates.io-index#der@0.7.10",
        "registry+https://github.com/rust-lang/crates.io-index#generic-array@0.14.7",
        "registry+https://github.com/rust-lang/crates.io-index#pkcs8@0.10.2",
        "registry+https://github.com/rust-lang/crates.io-index#subtle@2.6.1",
        "registry+https://github.com/rust-lang/crates.io-index#zeroize@1.8.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#security-framework-sys@2.14.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#core-foundation-sys@0.8.7",
        "registry+https://github.com/rust-lang/crates.io-index#libc@0.2.175"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#security-framework@2.11.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#bitflags@2.9.1",
        "registry+https://github.com/rust-lang/crates.io-index#core-foundation@0.9.4",
        "registry+https://github.com/rust-lang/crates.io-index#core-foundation-sys@0.8.7",
        "registry+https://github.com/rust-lang/crates.io-index#libc@0.2.175",
        "registry+https://github.com/rust-lang/crates.io-index#security-framework-sys@2.14.0"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#security-framework@3.3.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#bitflags@2.9.1",
        "registry+https://github.com/rust-lang/crates.io-index#core-foundation@0.10.1",
        "registry+https://github.com/rust-lang/crates.io-index#core-foundation-sys@0.8.7",
        "registry+https://github.com/rust-lang/crates.io-index#libc@0.2.175",
        "registry+https://github.com/rust-lang/crates.io-index#security-framework-sys@2.14.0"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#self_cell@1.2.0",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#semver@1.0.26",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#serde-attributes@0.2.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#darling_core@0.14.4",
        "registry+https://github.com/rust-lang/crates.io-index#serde-rename-rule@0.2.2",
        "registry+https://github.com/rust-lang/crates.io-index#syn@1.0.109"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#serde-big-array@0.3.3",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#serde-enum-str@0.4.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#darling@0.14.4",
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.97",
        "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.40",
        "registry+https://github.com/rust-lang/crates.io-index#serde-attributes@0.2.1",
        "registry+https://github.com/rust-lang/crates.io-index#syn@1.0.109"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#serde-json-core@0.6.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#ryu@1.0.20",
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#serde-rename-rule@0.2.2",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#serde-wasm-bindgen@0.6.5",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#js-sys@0.3.77",
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219",
        "registry+https://github.com/rust-lang/crates.io-index#wasm-bindgen@0.2.100"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#serde_derive@1.0.219"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#serde_bytes@0.11.17",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#serde_cbor@0.11.2",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#half@1.8.3",
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#serde_derive@1.0.219",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.97",
        "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.40",
        "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.105"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#serde_jcs@0.1.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#ryu-js@0.2.2",
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219",
        "registry+https://github.com/rust-lang/crates.io-index#serde_json@1.0.142"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#serde_json@1.0.142",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#itoa@1.0.15",
        "registry+https://github.com/rust-lang/crates.io-index#memchr@2.7.5",
        "registry+https://github.com/rust-lang/crates.io-index#ryu@1.0.20",
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#serde_json_canonicalizer@0.3.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#ryu-js@1.0.2",
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219",
        "registry+https://github.com/rust-lang/crates.io-index#serde_json@1.0.142"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#serde_urlencoded@0.7.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#form_urlencoded@1.2.1",
        "registry+https://github.com/rust-lang/crates.io-index#itoa@1.0.15",
        "registry+https://github.com/rust-lang/crates.io-index#ryu@1.0.20",
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#serde_with@1.14.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#base64@0.13.1",
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219",
        "registry+https://github.com/rust-lang/crates.io-index#serde_with_macros@1.5.2"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#serde_with@2.3.3",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#base64@0.13.1",
        "registry+https://github.com/rust-lang/crates.io-index#chrono@0.4.41",
        "registry+https://github.com/rust-lang/crates.io-index#hex@0.4.3",
        "registry+https://github.com/rust-lang/crates.io-index#indexmap@1.9.3",
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219",
        "registry+https://github.com/rust-lang/crates.io-index#serde_json@1.0.142",
        "registry+https://github.com/rust-lang/crates.io-index#serde_with_macros@2.3.3",
        "registry+https://github.com/rust-lang/crates.io-index#time@0.3.41"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#serde_with@3.14.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#base64@0.22.1",
        "registry+https://github.com/rust-lang/crates.io-index#chrono@0.4.41",
        "registry+https://github.com/rust-lang/crates.io-index#hex@0.4.3",
        "registry+https://github.com/rust-lang/crates.io-index#indexmap@1.9.3",
        "registry+https://github.com/rust-lang/crates.io-index#indexmap@2.10.0",
        "registry+https://github.com/rust-lang/crates.io-index#schemars@0.9.0",
        "registry+https://github.com/rust-lang/crates.io-index#schemars@1.0.4",
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219",
        "registry+https://github.com/rust-lang/crates.io-index#serde_derive@1.0.219",
        "registry+https://github.com/rust-lang/crates.io-index#serde_json@1.0.142",
        "registry+https://github.com/rust-lang/crates.io-index#serde_with_macros@3.14.0",
        "registry+https://github.com/rust-lang/crates.io-index#time@0.3.41"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#serde_with_macros@1.5.2",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#darling@0.13.4",
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.97",
        "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.40",
        "registry+https://github.com/rust-lang/crates.io-index#syn@1.0.109"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#serde_with_macros@2.3.3",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#darling@0.20.11",
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.97",
        "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.40",
        "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.105"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#serde_with_macros@3.14.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#darling@0.20.11",
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.97",
        "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.40",
        "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.105"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#sha1@0.10.6",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#cfg-if@1.0.1",
        "registry+https://github.com/rust-lang/crates.io-index#cpufeatures@0.2.17",
        "registry+https://github.com/rust-lang/crates.io-index#digest@0.10.7"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#sha256@1.6.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#async-trait@0.1.88",
        "registry+https://github.com/rust-lang/crates.io-index#bytes@1.10.1",
        "registry+https://github.com/rust-lang/crates.io-index#hex@0.4.3",
        "registry+https://github.com/rust-lang/crates.io-index#sha2@0.10.9",
        "registry+https://github.com/rust-lang/crates.io-index#tokio@1.47.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#sha2@0.10.9",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#cfg-if@1.0.1",
        "registry+https://github.com/rust-lang/crates.io-index#cpufeatures@0.2.17",
        "registry+https://github.com/rust-lang/crates.io-index#digest@0.10.7"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#sha2@0.9.9",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#block-buffer@0.9.0",
        "registry+https://github.com/rust-lang/crates.io-index#cfg-if@1.0.1",
        "registry+https://github.com/rust-lang/crates.io-index#cpufeatures@0.2.17",
        "registry+https://github.com/rust-lang/crates.io-index#digest@0.9.0",
        "registry+https://github.com/rust-lang/crates.io-index#opaque-debug@0.3.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#sha3@0.10.8",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#digest@0.10.7",
        "registry+https://github.com/rust-lang/crates.io-index#keccak@0.1.5"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#sharded-slab@0.1.7",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#lazy_static@1.5.0"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#shlex@1.3.0",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#signal-hook-registry@1.4.6",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#libc@0.2.175"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#signature@2.2.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#digest@0.10.7",
        "registry+https://github.com/rust-lang/crates.io-index#rand_core@0.6.4"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#simd-adler32@0.3.7",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#simple_asn1@0.5.4",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#chrono@0.4.41",
        "registry+https://github.com/rust-lang/crates.io-index#num-bigint@0.4.6",
        "registry+https://github.com/rust-lang/crates.io-index#num-traits@0.2.19",
        "registry+https://github.com/rust-lang/crates.io-index#thiserror@1.0.69"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#sized-chunks@0.6.5",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#bitmaps@2.1.0",
        "registry+https://github.com/rust-lang/crates.io-index#typenum@1.18.0"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#slab@0.4.11",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#smallstr@0.3.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219",
        "registry+https://github.com/rust-lang/crates.io-index#smallvec@1.15.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#smallvec@1.15.1",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#socket2@0.5.10",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#libc@0.2.175"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#socket2@0.6.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#libc@0.2.175"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#spin@0.9.8",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#spki@0.5.4",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#base64ct@1.8.0",
        "registry+https://github.com/rust-lang/crates.io-index#der@0.5.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#spki@0.7.3",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#base64ct@1.8.0",
        "registry+https://github.com/rust-lang/crates.io-index#der@0.7.10"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#sshkeys@0.3.3",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#base64@0.22.1",
        "registry+https://github.com/rust-lang/crates.io-index#byteorder@1.5.0",
        "registry+https://github.com/rust-lang/crates.io-index#sha2@0.10.9"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#ssi-caips@0.2.2",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#bs58@0.4.0",
        "registry+https://github.com/rust-lang/crates.io-index#linked-data@0.1.2",
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-jwk@0.3.2",
        "registry+https://github.com/rust-lang/crates.io-index#thiserror@1.0.69",
        "registry+https://github.com/rust-lang/crates.io-index#xsd-types@0.9.6"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#ssi-claims-core@0.1.3",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#chrono@0.4.41",
        "registry+https://github.com/rust-lang/crates.io-index#educe@0.4.23",
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-core@0.2.3",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-crypto@0.2.1",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-eip712@0.1.1",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-json-ld@0.3.2",
        "registry+https://github.com/rust-lang/crates.io-index#thiserror@1.0.69"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#ssi-claims@0.4.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#educe@0.4.23",
        "registry+https://github.com/rust-lang/crates.io-index#iref@3.2.2",
        "registry+https://github.com/rust-lang/crates.io-index#json-syntax@0.12.5",
        "registry+https://github.com/rust-lang/crates.io-index#linked-data@0.1.2",
        "registry+https://github.com/rust-lang/crates.io-index#locspan@0.8.2",
        "registry+https://github.com/rust-lang/crates.io-index#pin-project@1.1.10",
        "registry+https://github.com/rust-lang/crates.io-index#rdf-types@0.22.5",
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219",
        "registry+https://github.com/rust-lang/crates.io-index#serde_json@1.0.142",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-claims-core@0.1.3",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-core@0.2.3",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-cose@0.1.0",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-crypto@0.2.1",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-data-integrity@0.2.0",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-dids-core@0.1.3",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-eip712@0.1.1",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-json-ld@0.3.2",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-jwk@0.3.2",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-jws@0.3.1",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-jwt@0.3.1",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-sd-jwt@0.3.1",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-security@0.1.0",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-vc@0.6.1",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-vc-jose-cose@0.4.0",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-verification-methods@0.1.3",
        "registry+https://github.com/rust-lang/crates.io-index#thiserror@1.0.69"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#ssi-contexts@0.1.10",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#ssi-core@0.2.3",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#async-trait@0.1.88",
        "registry+https://github.com/rust-lang/crates.io-index#pin-project@1.1.10",
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219",
        "registry+https://github.com/rust-lang/crates.io-index#thiserror@1.0.69"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#ssi-cose@0.1.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#ciborium@0.2.2",
        "registry+https://github.com/rust-lang/crates.io-index#coset@0.3.8",
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-claims-core@0.1.3",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-crypto@0.2.1",
        "registry+https://github.com/rust-lang/crates.io-index#thiserror@1.0.69"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#ssi-crypto@0.2.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#async-trait@0.1.88",
        "registry+https://github.com/rust-lang/crates.io-index#bs58@0.4.0",
        "registry+https://github.com/rust-lang/crates.io-index#digest@0.9.0",
        "registry+https://github.com/rust-lang/crates.io-index#ed25519-dalek@2.2.0",
        "registry+https://github.com/rust-lang/crates.io-index#getrandom@0.2.16",
        "registry+https://github.com/rust-lang/crates.io-index#hex@0.4.3",
        "registry+https://github.com/rust-lang/crates.io-index#iref@3.2.2",
        "registry+https://github.com/rust-lang/crates.io-index#k256@0.13.4",
        "registry+https://github.com/rust-lang/crates.io-index#keccak-hash@0.7.0",
        "registry+https://github.com/rust-lang/crates.io-index#p256@0.13.2",
        "registry+https://github.com/rust-lang/crates.io-index#p384@0.13.1",
        "registry+https://github.com/rust-lang/crates.io-index#pin-project@1.1.10",
        "registry+https://github.com/rust-lang/crates.io-index#rand@0.8.5",
        "registry+https://github.com/rust-lang/crates.io-index#ripemd160@0.9.1",
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219",
        "registry+https://github.com/rust-lang/crates.io-index#sha2@0.10.9",
        "registry+https://github.com/rust-lang/crates.io-index#static-iref@3.0.0",
        "registry+https://github.com/rust-lang/crates.io-index#thiserror@1.0.69",
        "registry+https://github.com/rust-lang/crates.io-index#zeroize@1.8.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#ssi-data-integrity-core@0.3.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#chrono@0.4.41",
        "registry+https://github.com/rust-lang/crates.io-index#contextual@0.1.6",
        "registry+https://github.com/rust-lang/crates.io-index#derivative@2.2.0",
        "registry+https://github.com/rust-lang/crates.io-index#digest@0.10.7",
        "registry+https://github.com/rust-lang/crates.io-index#educe@0.4.23",
        "registry+https://github.com/rust-lang/crates.io-index#futures@0.3.31",
        "registry+https://github.com/rust-lang/crates.io-index#hex@0.4.3",
        "registry+https://github.com/rust-lang/crates.io-index#iref@3.2.2",
        "registry+https://github.com/rust-lang/crates.io-index#json-syntax@0.12.5",
        "registry+https://github.com/rust-lang/crates.io-index#linked-data@0.1.2",
        "registry+https://github.com/rust-lang/crates.io-index#locspan@0.8.2",
        "registry+https://github.com/rust-lang/crates.io-index#multibase@0.9.1",
        "registry+https://github.com/rust-lang/crates.io-index#rdf-types@0.22.5",
        "registry+https://github.com/rust-lang/crates.io-index#self_cell@1.2.0",
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219",
        "registry+https://github.com/rust-lang/crates.io-index#serde_json@1.0.142",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-claims-core@0.1.3",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-core@0.2.3",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-crypto@0.2.1",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-json-ld@0.3.2",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-jwk@0.3.2",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-jws@0.3.1",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-rdf@0.1.1",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-security@0.1.0",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-verification-methods@0.1.3",
        "registry+https://github.com/rust-lang/crates.io-index#static-iref@3.0.0",
        "registry+https://github.com/rust-lang/crates.io-index#thiserror@1.0.69",
        "registry+https://github.com/rust-lang/crates.io-index#xsd-types@0.9.6"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#ssi-data-integrity-suites@0.2.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#async-trait@0.1.88",
        "registry+https://github.com/rust-lang/crates.io-index#base64@0.22.1",
        "registry+https://github.com/rust-lang/crates.io-index#chrono@0.4.41",
        "registry+https://github.com/rust-lang/crates.io-index#contextual@0.1.6",
        "registry+https://github.com/rust-lang/crates.io-index#derivative@2.2.0",
        "registry+https://github.com/rust-lang/crates.io-index#educe@0.4.23",
        "registry+https://github.com/rust-lang/crates.io-index#futures@0.3.31",
        "registry+https://github.com/rust-lang/crates.io-index#getrandom@0.2.16",
        "registry+https://github.com/rust-lang/crates.io-index#hex@0.4.3",
        "registry+https://github.com/rust-lang/crates.io-index#iref@3.2.2",
        "registry+https://github.com/rust-lang/crates.io-index#json-syntax@0.12.5",
        "registry+https://github.com/rust-lang/crates.io-index#k256@0.13.4",
        "registry+https://github.com/rust-lang/crates.io-index#lazy_static@1.5.0",
        "registry+https://github.com/rust-lang/crates.io-index#linked-data@0.1.2",
        "registry+https://github.com/rust-lang/crates.io-index#locspan@0.8.2",
        "registry+https://github.com/rust-lang/crates.io-index#multibase@0.9.1",
        "registry+https://github.com/rust-lang/crates.io-index#p256@0.13.2",
        "registry+https://github.com/rust-lang/crates.io-index#p384@0.13.1",
        "registry+https://github.com/rust-lang/crates.io-index#pin-project@1.1.10",
        "registry+https://github.com/rust-lang/crates.io-index#rand@0.8.5",
        "registry+https://github.com/rust-lang/crates.io-index#rdf-types@0.22.5",
        "registry+https://github.com/rust-lang/crates.io-index#self_cell@1.2.0",
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219",
        "registry+https://github.com/rust-lang/crates.io-index#serde_cbor@0.11.2",
        "registry+https://github.com/rust-lang/crates.io-index#serde_json@1.0.142",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-caips@0.2.2",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-claims-core@0.1.3",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-contexts@0.1.10",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-core@0.2.3",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-crypto@0.2.1",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-data-integrity-core@0.3.0",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-di-sd-primitives@0.2.1",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-eip712@0.1.1",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-json-ld@0.3.2",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-jwk@0.3.2",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-jws@0.3.1",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-multicodec@0.2.0",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-rdf@0.1.1",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-security@0.1.0",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-verification-methods@0.1.3",
        "registry+https://github.com/rust-lang/crates.io-index#static-iref@3.0.0",
        "registry+https://github.com/rust-lang/crates.io-index#thiserror@1.0.69",
        "registry+https://github.com/rust-lang/crates.io-index#xsd-types@0.9.6"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#ssi-data-integrity@0.2.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#chrono@0.4.41",
        "registry+https://github.com/rust-lang/crates.io-index#iref@3.2.2",
        "registry+https://github.com/rust-lang/crates.io-index#json-syntax@0.12.5",
        "registry+https://github.com/rust-lang/crates.io-index#linked-data@0.1.2",
        "registry+https://github.com/rust-lang/crates.io-index#rdf-types@0.22.5",
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219",
        "registry+https://github.com/rust-lang/crates.io-index#serde_json@1.0.142",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-claims-core@0.1.3",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-core@0.2.3",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-crypto@0.2.1",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-data-integrity-core@0.3.0",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-data-integrity-suites@0.2.0",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-di-sd-primitives@0.2.1",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-eip712@0.1.1",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-json-ld@0.3.2",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-jwk@0.3.2",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-jws@0.3.1",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-rdf@0.1.1",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-security@0.1.0",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-verification-methods@0.1.3",
        "registry+https://github.com/rust-lang/crates.io-index#thiserror@1.0.69"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#ssi-di-sd-primitives@0.2.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#base64@0.22.1",
        "registry+https://github.com/rust-lang/crates.io-index#digest@0.10.7",
        "registry+https://github.com/rust-lang/crates.io-index#getrandom@0.2.16",
        "registry+https://github.com/rust-lang/crates.io-index#hex@0.4.3",
        "registry+https://github.com/rust-lang/crates.io-index#hmac@0.12.1",
        "registry+https://github.com/rust-lang/crates.io-index#iref@3.2.2",
        "registry+https://github.com/rust-lang/crates.io-index#linked-data@0.1.2",
        "registry+https://github.com/rust-lang/crates.io-index#rdf-types@0.22.5",
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219",
        "registry+https://github.com/rust-lang/crates.io-index#sha2@0.10.9",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-core@0.2.3",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-json-ld@0.3.2",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-rdf@0.1.1",
        "registry+https://github.com/rust-lang/crates.io-index#thiserror@1.0.69",
        "registry+https://github.com/rust-lang/crates.io-index#uuid@1.18.0"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#ssi-dids-core@0.1.3",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#async-trait@0.1.88",
        "registry+https://github.com/rust-lang/crates.io-index#iref@3.2.2",
        "registry+https://github.com/rust-lang/crates.io-index#percent-encoding@2.3.1",
        "registry+https://github.com/rust-lang/crates.io-index#pin-project@1.1.10",
        "registry+https://github.com/rust-lang/crates.io-index#reqwest@0.11.27",
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219",
        "registry+https://github.com/rust-lang/crates.io-index#serde_json@1.0.142",
        "registry+https://github.com/rust-lang/crates.io-index#serde_urlencoded@0.7.1",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-claims-core@0.1.3",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-core@0.2.3",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-crypto@0.2.1",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-json-ld@0.3.2",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-jwk@0.3.2",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-jws@0.3.1",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-verification-methods-core@0.1.2",
        "registry+https://github.com/rust-lang/crates.io-index#static-iref@3.0.0",
        "registry+https://github.com/rust-lang/crates.io-index#thiserror@1.0.69"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#ssi-dids@0.2.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#did-ethr@0.3.2",
        "registry+https://github.com/rust-lang/crates.io-index#did-ion@0.3.2",
        "registry+https://github.com/rust-lang/crates.io-index#did-jwk@0.2.1",
        "registry+https://github.com/rust-lang/crates.io-index#did-method-key@0.3.1",
        "registry+https://github.com/rust-lang/crates.io-index#did-pkh@0.3.2",
        "registry+https://github.com/rust-lang/crates.io-index#did-tz@0.3.2",
        "registry+https://github.com/rust-lang/crates.io-index#did-web@0.3.4",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-dids-core@0.1.3",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-jwk@0.3.2",
        "registry+https://github.com/rust-lang/crates.io-index#thiserror@1.0.69"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#ssi-eip712@0.1.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#hex@0.4.3",
        "registry+https://github.com/rust-lang/crates.io-index#indexmap@2.10.0",
        "registry+https://github.com/rust-lang/crates.io-index#iref@3.2.2",
        "registry+https://github.com/rust-lang/crates.io-index#json-syntax@0.12.5",
        "registry+https://github.com/rust-lang/crates.io-index#keccak-hash@0.7.0",
        "registry+https://github.com/rust-lang/crates.io-index#linked-data@0.1.2",
        "registry+https://github.com/rust-lang/crates.io-index#rdf-types@0.22.5",
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219",
        "registry+https://github.com/rust-lang/crates.io-index#serde_jcs@0.1.0",
        "registry+https://github.com/rust-lang/crates.io-index#serde_json@1.0.142",
        "registry+https://github.com/rust-lang/crates.io-index#thiserror@1.0.69"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#ssi-json-ld@0.3.2",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#combination@0.1.5",
        "registry+https://github.com/rust-lang/crates.io-index#iref@3.2.2",
        "registry+https://github.com/rust-lang/crates.io-index#json-ld@0.21.2",
        "registry+https://github.com/rust-lang/crates.io-index#json-syntax@0.12.5",
        "registry+https://github.com/rust-lang/crates.io-index#lazy_static@1.5.0",
        "registry+https://github.com/rust-lang/crates.io-index#linked-data@0.1.2",
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-contexts@0.1.10",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-rdf@0.1.1",
        "registry+https://github.com/rust-lang/crates.io-index#static-iref@3.0.0",
        "registry+https://github.com/rust-lang/crates.io-index#thiserror@1.0.69"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#ssi-jwk@0.3.2",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#base64@0.22.1",
        "registry+https://github.com/rust-lang/crates.io-index#blake2b_simd@0.5.11",
        "registry+https://github.com/rust-lang/crates.io-index#bs58@0.4.0",
        "registry+https://github.com/rust-lang/crates.io-index#ed25519-dalek@2.2.0",
        "registry+https://github.com/rust-lang/crates.io-index#json-syntax@0.12.5",
        "registry+https://github.com/rust-lang/crates.io-index#k256@0.13.4",
        "registry+https://github.com/rust-lang/crates.io-index#lazy_static@1.5.0",
        "registry+https://github.com/rust-lang/crates.io-index#linked-data@0.1.2",
        "registry+https://github.com/rust-lang/crates.io-index#multibase@0.9.1",
        "registry+https://github.com/rust-lang/crates.io-index#num-bigint@0.4.6",
        "registry+https://github.com/rust-lang/crates.io-index#num-derive@0.3.3",
        "registry+https://github.com/rust-lang/crates.io-index#num-traits@0.2.19",
        "registry+https://github.com/rust-lang/crates.io-index#p256@0.13.2",
        "registry+https://github.com/rust-lang/crates.io-index#p384@0.13.1",
        "registry+https://github.com/rust-lang/crates.io-index#rand@0.8.5",
        "registry+https://github.com/rust-lang/crates.io-index#rsa@0.6.1",
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219",
        "registry+https://github.com/rust-lang/crates.io-index#serde_jcs@0.1.0",
        "registry+https://github.com/rust-lang/crates.io-index#serde_json@1.0.142",
        "registry+https://github.com/rust-lang/crates.io-index#simple_asn1@0.5.4",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-claims-core@0.1.3",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-crypto@0.2.1",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-multicodec@0.2.0",
        "registry+https://github.com/rust-lang/crates.io-index#thiserror@1.0.69",
        "registry+https://github.com/rust-lang/crates.io-index#zeroize@1.8.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#ssi-jws@0.3.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#base64@0.22.1",
        "registry+https://github.com/rust-lang/crates.io-index#blake2@0.10.6",
        "registry+https://github.com/rust-lang/crates.io-index#clear_on_drop@0.2.5",
        "registry+https://github.com/rust-lang/crates.io-index#ed25519-dalek@2.2.0",
        "registry+https://github.com/rust-lang/crates.io-index#hex@0.4.3",
        "registry+https://github.com/rust-lang/crates.io-index#iref@3.2.2",
        "registry+https://github.com/rust-lang/crates.io-index#k256@0.13.4",
        "registry+https://github.com/rust-lang/crates.io-index#linked-data@0.1.2",
        "registry+https://github.com/rust-lang/crates.io-index#p256@0.13.2",
        "registry+https://github.com/rust-lang/crates.io-index#p384@0.13.1",
        "registry+https://github.com/rust-lang/crates.io-index#rand@0.8.5",
        "registry+https://github.com/rust-lang/crates.io-index#rsa@0.6.1",
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219",
        "registry+https://github.com/rust-lang/crates.io-index#serde_json@1.0.142",
        "registry+https://github.com/rust-lang/crates.io-index#sha2@0.10.9",
        "registry+https://github.com/rust-lang/crates.io-index#sha3@0.10.8",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-claims-core@0.1.3",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-core@0.2.3",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-crypto@0.2.1",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-jwk@0.3.2",
        "registry+https://github.com/rust-lang/crates.io-index#thiserror@1.0.69"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#ssi-jwt@0.3.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#async-trait@0.1.88",
        "registry+https://github.com/rust-lang/crates.io-index#chrono@0.4.41",
        "registry+https://github.com/rust-lang/crates.io-index#hashbrown@0.14.5",
        "registry+https://github.com/rust-lang/crates.io-index#iref@3.2.2",
        "registry+https://github.com/rust-lang/crates.io-index#json-syntax@0.12.5",
        "registry+https://github.com/rust-lang/crates.io-index#ordered-float@4.6.0",
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219",
        "registry+https://github.com/rust-lang/crates.io-index#serde_json@1.0.142",
        "registry+https://github.com/rust-lang/crates.io-index#serde_with@2.3.3",
        "registry+https://github.com/rust-lang/crates.io-index#slab@0.4.11",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-claims-core@0.1.3",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-core@0.2.3",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-crypto@0.2.1",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-jwk@0.3.2",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-jws@0.3.1",
        "registry+https://github.com/rust-lang/crates.io-index#thiserror@1.0.69"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#ssi-multicodec@0.2.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#csv@1.3.1",
        "registry+https://github.com/rust-lang/crates.io-index#ed25519-dalek@2.2.0",
        "registry+https://github.com/rust-lang/crates.io-index#k256@0.13.4",
        "registry+https://github.com/rust-lang/crates.io-index#p256@0.13.2",
        "registry+https://github.com/rust-lang/crates.io-index#p384@0.13.1",
        "registry+https://github.com/rust-lang/crates.io-index#thiserror@1.0.69",
        "registry+https://github.com/rust-lang/crates.io-index#unsigned-varint@0.7.2"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#ssi-rdf@0.1.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#combination@0.1.5",
        "registry+https://github.com/rust-lang/crates.io-index#indexmap@2.10.0",
        "registry+https://github.com/rust-lang/crates.io-index#iref@3.2.2",
        "registry+https://github.com/rust-lang/crates.io-index#linked-data@0.1.2",
        "registry+https://github.com/rust-lang/crates.io-index#rdf-types@0.22.5",
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-crypto@0.2.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#ssi-sd-jwt@0.3.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#base64@0.22.1",
        "registry+https://github.com/rust-lang/crates.io-index#indexmap@2.10.0",
        "registry+https://github.com/rust-lang/crates.io-index#rand@0.8.5",
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219",
        "registry+https://github.com/rust-lang/crates.io-index#serde_json@1.0.142",
        "registry+https://github.com/rust-lang/crates.io-index#sha2@0.10.9",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-claims-core@0.1.3",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-core@0.2.3",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-jwk@0.3.2",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-jws@0.3.1",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-jwt@0.3.1",
        "registry+https://github.com/rust-lang/crates.io-index#thiserror@1.0.69"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#ssi-security@0.1.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#iref@3.2.2",
        "registry+https://github.com/rust-lang/crates.io-index#linked-data@0.1.2",
        "registry+https://github.com/rust-lang/crates.io-index#multibase@0.9.1",
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219",
        "registry+https://github.com/rust-lang/crates.io-index#static-iref@3.0.0",
        "registry+https://github.com/rust-lang/crates.io-index#xsd-types@0.9.6"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#ssi-ssh@0.2.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#sshkeys@0.3.3",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-jwk@0.3.2",
        "registry+https://github.com/rust-lang/crates.io-index#thiserror@1.0.69"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#ssi-status@0.5.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#base64@0.22.1",
        "registry+https://github.com/rust-lang/crates.io-index#flate2@1.1.2",
        "registry+https://github.com/rust-lang/crates.io-index#iref@3.2.2",
        "registry+https://github.com/rust-lang/crates.io-index#log@0.4.27",
        "registry+https://github.com/rust-lang/crates.io-index#multibase@0.9.1",
        "registry+https://github.com/rust-lang/crates.io-index#parking_lot@0.12.4",
        "registry+https://github.com/rust-lang/crates.io-index#rdf-types@0.22.5",
        "registry+https://github.com/rust-lang/crates.io-index#reqwest@0.12.23",
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219",
        "registry+https://github.com/rust-lang/crates.io-index#serde_json@1.0.142",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-claims-core@0.1.3",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-data-integrity@0.2.0",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-json-ld@0.3.2",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-jwk@0.3.2",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-jws@0.3.1",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-jwt@0.3.1",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-sd-jwt@0.3.1",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-vc@0.6.1",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-vc-jose-cose@0.4.0",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-verification-methods@0.1.3",
        "registry+https://github.com/rust-lang/crates.io-index#thiserror@1.0.69",
        "registry+https://github.com/rust-lang/crates.io-index#xsd-types@0.9.6"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#ssi-ucan@0.2.2",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#base64@0.22.1",
        "registry+https://github.com/rust-lang/crates.io-index#bs58@0.4.0",
        "registry+https://github.com/rust-lang/crates.io-index#chrono@0.4.41",
        "registry+https://github.com/rust-lang/crates.io-index#hex@0.4.3",
        "registry+https://github.com/rust-lang/crates.io-index#iref@3.2.2",
        "registry+https://github.com/rust-lang/crates.io-index#libipld@0.14.0",
        "registry+https://github.com/rust-lang/crates.io-index#multibase@0.9.1",
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219",
        "registry+https://github.com/rust-lang/crates.io-index#serde_json@1.0.142",
        "registry+https://github.com/rust-lang/crates.io-index#serde_with@1.14.0",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-caips@0.2.2",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-core@0.2.3",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-dids-core@0.1.3",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-jwk@0.3.2",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-jws@0.3.1",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-jwt@0.3.1",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-verification-methods@0.1.3",
        "registry+https://github.com/rust-lang/crates.io-index#thiserror@1.0.69"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#ssi-vc-jose-cose@0.4.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#base64@0.22.1",
        "registry+https://github.com/rust-lang/crates.io-index#ciborium@0.2.2",
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219",
        "registry+https://github.com/rust-lang/crates.io-index#serde_json@1.0.142",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-claims-core@0.1.3",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-cose@0.1.0",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-json-ld@0.3.2",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-jws@0.3.1",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-jwt@0.3.1",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-sd-jwt@0.3.1",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-vc@0.6.1",
        "registry+https://github.com/rust-lang/crates.io-index#thiserror@1.0.69",
        "registry+https://github.com/rust-lang/crates.io-index#xsd-types@0.9.6"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#ssi-vc@0.6.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#base64@0.22.1",
        "registry+https://github.com/rust-lang/crates.io-index#bitvec@0.20.4",
        "registry+https://github.com/rust-lang/crates.io-index#chrono@0.4.41",
        "registry+https://github.com/rust-lang/crates.io-index#educe@0.4.23",
        "registry+https://github.com/rust-lang/crates.io-index#flate2@1.1.2",
        "registry+https://github.com/rust-lang/crates.io-index#iref@3.2.2",
        "registry+https://github.com/rust-lang/crates.io-index#json-syntax@0.12.5",
        "registry+https://github.com/rust-lang/crates.io-index#linked-data@0.1.2",
        "registry+https://github.com/rust-lang/crates.io-index#rdf-types@0.22.5",
        "registry+https://github.com/rust-lang/crates.io-index#reqwest@0.11.27",
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219",
        "registry+https://github.com/rust-lang/crates.io-index#serde_json@1.0.142",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-claims-core@0.1.3",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-core@0.2.3",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-data-integrity@0.2.0",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-dids-core@0.1.3",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-json-ld@0.3.2",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-jwt@0.3.1",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-rdf@0.1.1",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-verification-methods@0.1.3",
        "registry+https://github.com/rust-lang/crates.io-index#static-iref@3.0.0",
        "registry+https://github.com/rust-lang/crates.io-index#thiserror@1.0.69",
        "registry+https://github.com/rust-lang/crates.io-index#xsd-types@0.9.6"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#ssi-verification-methods-core@0.1.2",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#bs58@0.4.0",
        "registry+https://github.com/rust-lang/crates.io-index#educe@0.4.23",
        "registry+https://github.com/rust-lang/crates.io-index#hex@0.4.3",
        "registry+https://github.com/rust-lang/crates.io-index#iref@3.2.2",
        "registry+https://github.com/rust-lang/crates.io-index#linked-data@0.1.2",
        "registry+https://github.com/rust-lang/crates.io-index#multibase@0.9.1",
        "registry+https://github.com/rust-lang/crates.io-index#rdf-types@0.22.5",
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219",
        "registry+https://github.com/rust-lang/crates.io-index#serde_json@1.0.142",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-claims-core@0.1.3",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-core@0.2.3",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-crypto@0.2.1",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-json-ld@0.3.2",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-jwk@0.3.2",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-jws@0.3.1",
        "registry+https://github.com/rust-lang/crates.io-index#static-iref@3.0.0",
        "registry+https://github.com/rust-lang/crates.io-index#thiserror@1.0.69"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#ssi-verification-methods@0.1.3",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#async-trait@0.1.88",
        "registry+https://github.com/rust-lang/crates.io-index#derivative@2.2.0",
        "registry+https://github.com/rust-lang/crates.io-index#ed25519-dalek@2.2.0",
        "registry+https://github.com/rust-lang/crates.io-index#educe@0.4.23",
        "registry+https://github.com/rust-lang/crates.io-index#futures@0.3.31",
        "registry+https://github.com/rust-lang/crates.io-index#hex@0.4.3",
        "registry+https://github.com/rust-lang/crates.io-index#iref@3.2.2",
        "registry+https://github.com/rust-lang/crates.io-index#json-syntax@0.12.5",
        "registry+https://github.com/rust-lang/crates.io-index#k256@0.13.4",
        "registry+https://github.com/rust-lang/crates.io-index#linked-data@0.1.2",
        "registry+https://github.com/rust-lang/crates.io-index#multibase@0.9.1",
        "registry+https://github.com/rust-lang/crates.io-index#p256@0.13.2",
        "registry+https://github.com/rust-lang/crates.io-index#p384@0.13.1",
        "registry+https://github.com/rust-lang/crates.io-index#pin-project@1.1.10",
        "registry+https://github.com/rust-lang/crates.io-index#rand_core@0.6.4",
        "registry+https://github.com/rust-lang/crates.io-index#rdf-types@0.22.5",
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219",
        "registry+https://github.com/rust-lang/crates.io-index#serde_json@1.0.142",
        "registry+https://github.com/rust-lang/crates.io-index#sha2@0.10.9",
        "registry+https://github.com/rust-lang/crates.io-index#sha3@0.10.8",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-caips@0.2.2",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-claims-core@0.1.3",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-core@0.2.3",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-crypto@0.2.1",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-eip712@0.1.1",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-jwk@0.3.2",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-jws@0.3.1",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-multicodec@0.2.0",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-security@0.1.0",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-verification-methods-core@0.1.2",
        "registry+https://github.com/rust-lang/crates.io-index#static-iref@3.0.0",
        "registry+https://github.com/rust-lang/crates.io-index#thiserror@1.0.69"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#ssi-zcap-ld@0.5.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#async-trait@0.1.88",
        "registry+https://github.com/rust-lang/crates.io-index#iref@3.2.2",
        "registry+https://github.com/rust-lang/crates.io-index#json-syntax@0.12.5",
        "registry+https://github.com/rust-lang/crates.io-index#rdf-types@0.22.5",
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219",
        "registry+https://github.com/rust-lang/crates.io-index#serde_json@1.0.142",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-claims@0.4.0",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-core@0.2.3",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-dids-core@0.1.3",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-eip712@0.1.1",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-json-ld@0.3.2",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-jwk@0.3.2",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-rdf@0.1.1",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-verification-methods@0.1.3",
        "registry+https://github.com/rust-lang/crates.io-index#static-iref@3.0.0",
        "registry+https://github.com/rust-lang/crates.io-index#thiserror@1.0.69"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#ssi@0.12.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#document-features@0.2.11",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-caips@0.2.2",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-claims@0.4.0",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-core@0.2.3",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-crypto@0.2.1",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-dids@0.2.1",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-eip712@0.1.1",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-json-ld@0.3.2",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-jwk@0.3.2",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-jws@0.3.1",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-multicodec@0.2.0",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-rdf@0.1.1",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-security@0.1.0",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-ssh@0.2.1",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-status@0.5.0",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-ucan@0.2.2",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-verification-methods@0.1.3",
        "registry+https://github.com/rust-lang/crates.io-index#ssi-zcap-ld@0.5.0",
        "registry+https://github.com/rust-lang/crates.io-index#xsd-types@0.9.6"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#stable_deref_trait@1.2.0",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#static-iref@3.0.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#iref@3.2.2",
        "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.40",
        "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.105"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#static-regular-grammar@2.0.2",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#abnf@0.13.0",
        "registry+https://github.com/rust-lang/crates.io-index#btree-range-map@0.7.2",
        "registry+https://github.com/rust-lang/crates.io-index#ciborium@0.2.2",
        "registry+https://github.com/rust-lang/crates.io-index#hex_fmt@0.3.0",
        "registry+https://github.com/rust-lang/crates.io-index#indoc@2.0.6",
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro-error@1.0.4",
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.97",
        "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.40",
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219",
        "registry+https://github.com/rust-lang/crates.io-index#sha2@0.10.9",
        "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.105",
        "registry+https://github.com/rust-lang/crates.io-index#thiserror@1.0.69"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#static_assertions@1.1.0",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#strsim@0.10.0",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#strsim@0.11.1",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#subtle@2.6.1",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#syn@1.0.109",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.97",
        "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.40",
        "registry+https://github.com/rust-lang/crates.io-index#unicode-ident@1.0.18"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.105",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.97",
        "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.40",
        "registry+https://github.com/rust-lang/crates.io-index#unicode-ident@1.0.18"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#sync_wrapper@0.1.2",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#sync_wrapper@1.0.2",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#futures-core@0.3.31"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#synstructure@0.12.6",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.97",
        "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.40",
        "registry+https://github.com/rust-lang/crates.io-index#syn@1.0.109",
        "registry+https://github.com/rust-lang/crates.io-index#unicode-xid@0.2.6"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#synstructure@0.13.2",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.97",
        "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.40",
        "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.105"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#system-configuration-sys@0.5.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#core-foundation-sys@0.8.7",
        "registry+https://github.com/rust-lang/crates.io-index#libc@0.2.175"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#system-configuration-sys@0.6.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#core-foundation-sys@0.8.7",
        "registry+https://github.com/rust-lang/crates.io-index#libc@0.2.175"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#system-configuration@0.5.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#bitflags@1.3.2",
        "registry+https://github.com/rust-lang/crates.io-index#core-foundation@0.9.4",
        "registry+https://github.com/rust-lang/crates.io-index#system-configuration-sys@0.5.0"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#system-configuration@0.6.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#bitflags@2.9.1",
        "registry+https://github.com/rust-lang/crates.io-index#core-foundation@0.9.4",
        "registry+https://github.com/rust-lang/crates.io-index#system-configuration-sys@0.6.0"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#tagptr@0.2.0",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#tap@1.0.1",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#tempfile@3.20.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#fastrand@2.3.0",
        "registry+https://github.com/rust-lang/crates.io-index#getrandom@0.3.3",
        "registry+https://github.com/rust-lang/crates.io-index#once_cell@1.21.3",
        "registry+https://github.com/rust-lang/crates.io-index#rustix@1.0.8"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#thiserror-impl@1.0.69",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.97",
        "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.40",
        "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.105"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#thiserror-impl@2.0.14",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.97",
        "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.40",
        "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.105"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#thiserror@1.0.69",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#thiserror-impl@1.0.69"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#thiserror@2.0.14",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#thiserror-impl@2.0.14"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#thread_local@1.1.9",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#cfg-if@1.0.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#time-core@0.1.4",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#time-macros@0.2.22",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#num-conv@0.1.0",
        "registry+https://github.com/rust-lang/crates.io-index#time-core@0.1.4"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#time@0.3.41",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#deranged@0.4.0",
        "registry+https://github.com/rust-lang/crates.io-index#itoa@1.0.15",
        "registry+https://github.com/rust-lang/crates.io-index#libc@0.2.175",
        "registry+https://github.com/rust-lang/crates.io-index#num-conv@0.1.0",
        "registry+https://github.com/rust-lang/crates.io-index#num_threads@0.1.7",
        "registry+https://github.com/rust-lang/crates.io-index#powerfmt@0.2.0",
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219",
        "registry+https://github.com/rust-lang/crates.io-index#time-core@0.1.4",
        "registry+https://github.com/rust-lang/crates.io-index#time-macros@0.2.22"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#tiny-keccak@2.0.2",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#crunchy@0.2.4"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#tinystr@0.8.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#displaydoc@0.2.5",
        "registry+https://github.com/rust-lang/crates.io-index#zerovec@0.11.4"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#tinyvec@1.9.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#tinyvec_macros@0.1.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#tinyvec_macros@0.1.1",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#tokio-macros@2.5.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.97",
        "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.40",
        "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.105"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#tokio-native-tls@0.3.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#native-tls@0.2.14",
        "registry+https://github.com/rust-lang/crates.io-index#tokio@1.47.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#tokio-rustls@0.24.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#rustls@0.21.12",
        "registry+https://github.com/rust-lang/crates.io-index#tokio@1.47.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#tokio-rustls@0.26.2",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#rustls@0.23.31",
        "registry+https://github.com/rust-lang/crates.io-index#tokio@1.47.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#tokio-util@0.7.16",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#bytes@1.10.1",
        "registry+https://github.com/rust-lang/crates.io-index#futures-core@0.3.31",
        "registry+https://github.com/rust-lang/crates.io-index#futures-sink@0.3.31",
        "registry+https://github.com/rust-lang/crates.io-index#pin-project-lite@0.2.16",
        "registry+https://github.com/rust-lang/crates.io-index#tokio@1.47.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#tokio@1.47.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#bytes@1.10.1",
        "registry+https://github.com/rust-lang/crates.io-index#libc@0.2.175",
        "registry+https://github.com/rust-lang/crates.io-index#mio@1.0.4",
        "registry+https://github.com/rust-lang/crates.io-index#parking_lot@0.12.4",
        "registry+https://github.com/rust-lang/crates.io-index#pin-project-lite@0.2.16",
        "registry+https://github.com/rust-lang/crates.io-index#signal-hook-registry@1.4.6",
        "registry+https://github.com/rust-lang/crates.io-index#socket2@0.6.0",
        "registry+https://github.com/rust-lang/crates.io-index#tokio-macros@2.5.0"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#toml@0.5.11",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#tower-http@0.6.6",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#bitflags@2.9.1",
        "registry+https://github.com/rust-lang/crates.io-index#bytes@1.10.1",
        "registry+https://github.com/rust-lang/crates.io-index#futures-util@0.3.31",
        "registry+https://github.com/rust-lang/crates.io-index#http@1.3.1",
        "registry+https://github.com/rust-lang/crates.io-index#http-body@1.0.1",
        "registry+https://github.com/rust-lang/crates.io-index#http-body-util@0.1.3",
        "registry+https://github.com/rust-lang/crates.io-index#iri-string@0.7.8",
        "registry+https://github.com/rust-lang/crates.io-index#pin-project-lite@0.2.16",
        "registry+https://github.com/rust-lang/crates.io-index#tower@0.5.2",
        "registry+https://github.com/rust-lang/crates.io-index#tower-layer@0.3.3",
        "registry+https://github.com/rust-lang/crates.io-index#tower-service@0.3.3",
        "registry+https://github.com/rust-lang/crates.io-index#tracing@0.1.41"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#tower-layer@0.3.3",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#tower-service@0.3.3",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#tower@0.5.2",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#futures-core@0.3.31",
        "registry+https://github.com/rust-lang/crates.io-index#futures-util@0.3.31",
        "registry+https://github.com/rust-lang/crates.io-index#pin-project-lite@0.2.16",
        "registry+https://github.com/rust-lang/crates.io-index#sync_wrapper@1.0.2",
        "registry+https://github.com/rust-lang/crates.io-index#tokio@1.47.1",
        "registry+https://github.com/rust-lang/crates.io-index#tower-layer@0.3.3",
        "registry+https://github.com/rust-lang/crates.io-index#tower-service@0.3.3",
        "registry+https://github.com/rust-lang/crates.io-index#tracing@0.1.41"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#tracing-attributes@0.1.30",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.97",
        "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.40",
        "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.105"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#tracing-core@0.1.34",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#once_cell@1.21.3",
        "registry+https://github.com/rust-lang/crates.io-index#valuable@0.1.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#tracing-log@0.2.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#log@0.4.27",
        "registry+https://github.com/rust-lang/crates.io-index#once_cell@1.21.3",
        "registry+https://github.com/rust-lang/crates.io-index#tracing-core@0.1.34"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#tracing-serde@0.2.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219",
        "registry+https://github.com/rust-lang/crates.io-index#tracing-core@0.1.34",
        "registry+https://github.com/rust-lang/crates.io-index#valuable@0.1.1",
        "registry+https://github.com/rust-lang/crates.io-index#valuable-serde@0.1.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#tracing-subscriber@0.3.19",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#matchers@0.1.0",
        "registry+https://github.com/rust-lang/crates.io-index#nu-ansi-term@0.46.0",
        "registry+https://github.com/rust-lang/crates.io-index#once_cell@1.21.3",
        "registry+https://github.com/rust-lang/crates.io-index#regex@1.11.1",
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219",
        "registry+https://github.com/rust-lang/crates.io-index#serde_json@1.0.142",
        "registry+https://github.com/rust-lang/crates.io-index#sharded-slab@0.1.7",
        "registry+https://github.com/rust-lang/crates.io-index#smallvec@1.15.1",
        "registry+https://github.com/rust-lang/crates.io-index#thread_local@1.1.9",
        "registry+https://github.com/rust-lang/crates.io-index#tracing@0.1.41",
        "registry+https://github.com/rust-lang/crates.io-index#tracing-core@0.1.34",
        "registry+https://github.com/rust-lang/crates.io-index#tracing-log@0.2.0",
        "registry+https://github.com/rust-lang/crates.io-index#tracing-serde@0.2.0",
        "registry+https://github.com/rust-lang/crates.io-index#valuable@0.1.1",
        "registry+https://github.com/rust-lang/crates.io-index#valuable-serde@0.1.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#tracing@0.1.41",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#log@0.4.27",
        "registry+https://github.com/rust-lang/crates.io-index#pin-project-lite@0.2.16",
        "registry+https://github.com/rust-lang/crates.io-index#tracing-attributes@0.1.30",
        "registry+https://github.com/rust-lang/crates.io-index#tracing-core@0.1.34"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#treediff@3.0.2",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#serde_json@1.0.142"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#try-lock@0.2.5",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#typenum@1.18.0",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#uint@0.9.5",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#byteorder@1.5.0",
        "registry+https://github.com/rust-lang/crates.io-index#crunchy@0.2.4",
        "registry+https://github.com/rust-lang/crates.io-index#hex@0.4.3",
        "registry+https://github.com/rust-lang/crates.io-index#static_assertions@1.1.0"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#unicode-ident@1.0.18",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#unicode-xid@0.2.6",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#universal-hash@0.5.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#crypto-common@0.1.6",
        "registry+https://github.com/rust-lang/crates.io-index#subtle@2.6.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#unsigned-varint@0.7.2",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#unsigned-varint@0.8.0",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#untrusted@0.9.0",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#url@2.5.4",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#form_urlencoded@1.2.1",
        "registry+https://github.com/rust-lang/crates.io-index#idna@1.0.3",
        "registry+https://github.com/rust-lang/crates.io-index#percent-encoding@2.3.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#utf8-decode@1.0.1",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#utf8_iter@1.0.4",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#uuid@1.18.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#atomic@0.6.1",
        "registry+https://github.com/rust-lang/crates.io-index#getrandom@0.3.3",
        "registry+https://github.com/rust-lang/crates.io-index#rand@0.9.2"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#valuable-serde@0.1.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219",
        "registry+https://github.com/rust-lang/crates.io-index#valuable@0.1.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#valuable@0.1.1",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#varint@0.9.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#bit_utils@0.1.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#version_check@0.9.5",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#want@0.3.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#try-lock@0.2.5"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#wasm-bindgen-backend@0.2.100",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#bumpalo@3.19.0",
        "registry+https://github.com/rust-lang/crates.io-index#log@0.4.27",
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.97",
        "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.40",
        "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.105",
        "registry+https://github.com/rust-lang/crates.io-index#wasm-bindgen-shared@0.2.100"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#wasm-bindgen-futures@0.4.50",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#cfg-if@1.0.1",
        "registry+https://github.com/rust-lang/crates.io-index#js-sys@0.3.77",
        "registry+https://github.com/rust-lang/crates.io-index#once_cell@1.21.3",
        "registry+https://github.com/rust-lang/crates.io-index#wasm-bindgen@0.2.100"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#wasm-bindgen-macro-support@0.2.100",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.97",
        "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.40",
        "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.105",
        "registry+https://github.com/rust-lang/crates.io-index#wasm-bindgen-backend@0.2.100",
        "registry+https://github.com/rust-lang/crates.io-index#wasm-bindgen-shared@0.2.100"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#wasm-bindgen-macro@0.2.100",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.40",
        "registry+https://github.com/rust-lang/crates.io-index#wasm-bindgen-macro-support@0.2.100"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#wasm-bindgen-shared@0.2.100",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#unicode-ident@1.0.18"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#wasm-bindgen@0.2.100",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#cfg-if@1.0.1",
        "registry+https://github.com/rust-lang/crates.io-index#once_cell@1.21.3",
        "registry+https://github.com/rust-lang/crates.io-index#rustversion@1.0.22",
        "registry+https://github.com/rust-lang/crates.io-index#wasm-bindgen-macro@0.2.100"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#web-socket@0.7.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#rand@0.8.5",
        "registry+https://github.com/rust-lang/crates.io-index#tokio@1.47.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#webpki-roots@0.25.4",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#writeable@0.6.1",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#wyz@0.2.0",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#x25519-dalek@2.0.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#curve25519-dalek@4.1.3",
        "registry+https://github.com/rust-lang/crates.io-index#rand_core@0.6.4",
        "registry+https://github.com/rust-lang/crates.io-index#zeroize@1.8.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#xsd-types@0.9.6",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#chrono@0.4.41",
        "registry+https://github.com/rust-lang/crates.io-index#iref@3.2.2",
        "registry+https://github.com/rust-lang/crates.io-index#lazy_static@1.5.0",
        "registry+https://github.com/rust-lang/crates.io-index#num-bigint@0.4.6",
        "registry+https://github.com/rust-lang/crates.io-index#num-rational@0.4.2",
        "registry+https://github.com/rust-lang/crates.io-index#num-traits@0.2.19",
        "registry+https://github.com/rust-lang/crates.io-index#once_cell@1.21.3",
        "registry+https://github.com/rust-lang/crates.io-index#ordered-float@3.9.2",
        "registry+https://github.com/rust-lang/crates.io-index#pretty_dtoa@0.3.0",
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219",
        "registry+https://github.com/rust-lang/crates.io-index#static-iref@3.0.0",
        "registry+https://github.com/rust-lang/crates.io-index#static-regular-grammar@2.0.2",
        "registry+https://github.com/rust-lang/crates.io-index#thiserror@1.0.69"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#yoke-derive@0.8.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.97",
        "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.40",
        "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.105",
        "registry+https://github.com/rust-lang/crates.io-index#synstructure@0.13.2"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#yoke@0.8.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.219",
        "registry+https://github.com/rust-lang/crates.io-index#stable_deref_trait@1.2.0",
        "registry+https://github.com/rust-lang/crates.io-index#yoke-derive@0.8.0",
        "registry+https://github.com/rust-lang/crates.io-index#zerofrom@0.1.6"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#zerocopy@0.8.26",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#zerofrom-derive@0.1.6",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.97",
        "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.40",
        "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.105",
        "registry+https://github.com/rust-lang/crates.io-index#synstructure@0.13.2"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#zerofrom@0.1.6",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#zerofrom-derive@0.1.6"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#zeroize@1.8.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#zeroize_derive@1.4.2"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#zeroize_derive@1.4.2",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.97",
        "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.40",
        "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.105"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#zerotrie@0.2.2",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#displaydoc@0.2.5",
        "registry+https://github.com/rust-lang/crates.io-index#yoke@0.8.0",
        "registry+https://github.com/rust-lang/crates.io-index#zerofrom@0.1.6"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#zerovec-derive@0.11.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.97",
        "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.40",
        "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.105"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#zerovec@0.11.4",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#yoke@0.8.0",
        "registry+https://github.com/rust-lang/crates.io-index#zerofrom@0.1.6",
        "registry+https://github.com/rust-lang/crates.io-index#zerovec-derive@0.11.1"
      ]
    }
  ]
}