[package]
name = "did-peer"
version = "0.6.5"
description = "Implementation of the did:peer method in Rust, uses the ssi crate"
repository.workspace = true
edition.workspace = true
authors.workspace = true
homepage.workspace = true
keywords.workspace = true
publish.workspace = true
license.workspace = true
readme = "README.md"
rust-version.workspace = true

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
affinidi-did-common.workspace = true

base64 = "0.22"
# iref = { version = "3.2.2", features = ["serde"] }
serde = { version = "1.0", features = ["derive", "rc"] }
serde_json = "1.0"
ssi-core = "0.2.3"
ssi-dids-core = "0.1.3"
ssi-jwk = "0.3.2"
did-method-key = { version = "0.3.1", features = ["secp384r1"] }
thiserror = "2.0"
url = "2.5"
wasm-bindgen = "0.2"
wasm-bindgen-futures = "0.4"

# NOTE: To get WASM support, enable the following uuid crate. It needs to have a RNG that works in WASM.
#uuid = { version = "1.16", features = ["v4", "fast-rng", "js"] }

[dev-dependencies]
ssi-multicodec = "0.2"
askar-crypto = { version = "0.3", features = ["alloc"] }
tokio = { version = "1.47", features = ["full"] }
multibase = "0.9.1"
