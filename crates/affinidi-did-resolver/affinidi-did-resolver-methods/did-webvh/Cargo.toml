[package]
name = "did-webvh"
version = "0.1.7"
description = "Implementation of the did:webvh method in Rust, uses the ssi crate"
repository.workspace = true
edition.workspace = true
authors.workspace = true
homepage.workspace = true
keywords.workspace = true
publish.workspace = true
license.workspace = true
readme = "README.md"
rust-version.workspace = true

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
affinidi-data-integrity.workspace = true
affinidi-secrets-resolver.workspace = true

ahash = { version = "0.8", features = ["serde"] }
base58 = "0.2.0"
chrono = { version = "0.4", features = ["serde"] }
iref = { version = "3.2.2", features = ["serde"] }
static-iref = "3.0.0"
multibase = "0.9"
multihash = "0.19"
reqwest = "0.12"
serde = { version = "1.0", features = ["derive", "rc"] }
serde_json = "1.0"
serde_json_canonicalizer = "0.3.0"
serde_with = "3.14"
sha2 = "0.10"
ssi = { version = "0.12", features = ["secp384r1"] }
thiserror = "2.0"
tokio = { version = "1.46", features = ["full"] }
tracing = { version = "0.1", features = [
  "max_level_debug",
  "release_max_level_info",
] }
url = "2.5"

[dev-dependencies]
affinidi-tdk.workspace = true

anyhow = "1.0"
clap = { version = "4.5", features = ["derive"] }
console = "0.16"
dialoguer = "0.11"
iref = { version = "3.2.2", features = ["serde"] }
rand = "0.9"
tracing-subscriber = { version = "0.3", features = [
  "env-filter",
  "fmt",
  "json",
  "valuable",
] }
